2020-06-17 08:27:11,044 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-17 08:27:11,085 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 08:27:11,725 INFO - Request finished in 686.3579ms 200 text/html
2020-06-17 08:27:13,050 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-17 08:27:13,052 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 08:27:13,619 INFO - Request finished in 568.7005ms 200 application/json;charset=utf-8
2020-06-17 08:31:11,233 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration?pageSize=10&pageNumber=1&OrganizationId=1&isHealthDeclaration=true  
2020-06-17 08:31:11,235 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 08:31:12,432 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 08:31:12,463 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 08:31:12,474 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 1, , True) - Validation state: Valid
2020-06-17 08:31:13,611 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 08:31:13,793 WARN - The Include operation for navigation '[s].Site' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-17 08:31:14,039 WARN - The LINQ expression 'where ([Employee].ToEntity(null, null, null, null, null, [x_siteEmployee], null, [x_healthDeclaration]).ToEntity([x_siteEmployee.Site]).OrganizationId == __OrganizationId_1)' could not be translated and will be evaluated locally.
2020-06-17 08:31:14,048 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-17 08:31:14,855 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 08:31:15,033 WARN - The LINQ expression 'where ([Employee].ToEntity(null, null, null, null, null, [x_siteEmployee], null, [x_healthDeclaration]).ToEntity([x_siteEmployee.Site]).OrganizationId == __OrganizationId_1)' could not be translated and will be evaluated locally.
2020-06-17 08:31:15,114 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 08:31:15,213 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 2736.2291ms.
2020-06-17 08:31:15,215 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 08:31:15,227 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 08:31:15,247 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 2810.8995ms
2020-06-17 08:31:15,259 INFO - Request finished in 4028.9548ms 200 application/json; charset=utf-8
2020-06-17 09:01:41,326 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:01:41,327 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:01:41,338 INFO - CORS policy execution successful.
2020-06-17 09:01:41,339 INFO - CORS policy execution successful.
2020-06-17 09:01:41,347 INFO - Request finished in 22.5034ms 204 
2020-06-17 09:01:41,355 INFO - Request finished in 25.5384ms 204 
2020-06-17 09:01:41,369 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:01:41,373 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:01:41,376 INFO - CORS policy execution successful.
2020-06-17 09:01:41,385 INFO - CORS policy execution successful.
2020-06-17 09:01:43,291 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 09:01:43,303 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 09:01:43,305 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 09:01:43,306 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 09:01:43,310 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 09:01:43,311 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 09:01:43,316 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 09:01:43,338 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 09:01:43,339 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 09:01:43,342 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 09:01:43,342 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 09:01:43,346 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 09:01:43,349 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 09:01:43,360 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 09:01:43,857 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 09:01:44,106 INFO - Executed DbCommand (73ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 09:01:44,122 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 774.1444ms.
2020-06-17 09:01:44,122 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 09:01:44,124 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 09:01:44,127 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 787.1547ms
2020-06-17 09:01:44,130 INFO - Request finished in 2759.817ms 200 application/json; charset=utf-8
2020-06-17 09:01:44,207 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 09:01:44,400 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 09:01:44,419 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 1073.7625ms.
2020-06-17 09:01:44,419 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 09:01:44,420 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 09:01:44,425 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1104.9269ms
2020-06-17 09:01:44,430 INFO - Request finished in 3066.1685ms 200 application/json; charset=utf-8
2020-06-17 09:51:57,833 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:51:57,837 INFO - CORS policy execution successful.
2020-06-17 09:51:57,846 INFO - Request finished in 11.3547ms 204 
2020-06-17 09:51:57,851 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:51:57,853 INFO - CORS policy execution successful.
2020-06-17 09:51:58,074 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:51:58,163 INFO - Request finished in 305.9323ms 500 text/html; charset=utf-8
2020-06-17 09:52:09,604 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:52:09,606 INFO - CORS policy execution successful.
2020-06-17 09:52:09,609 INFO - Request finished in 9.4645ms 204 
2020-06-17 09:52:09,615 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:52:09,617 INFO - CORS policy execution successful.
2020-06-17 09:52:09,624 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:52:09,637 INFO - Request finished in 22.752ms 500 text/html; charset=utf-8
2020-06-17 09:52:52,774 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:52:52,780 INFO - CORS policy execution successful.
2020-06-17 09:52:52,780 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:52:52,787 INFO - CORS policy execution successful.
2020-06-17 09:52:52,788 INFO - Request finished in 12.2895ms 204 
2020-06-17 09:52:52,791 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:52:52,792 INFO - Request finished in 14.1ms 204 
2020-06-17 09:52:52,794 INFO - CORS policy execution successful.
2020-06-17 09:52:52,804 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:52:52,806 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:52:52,810 INFO - CORS policy execution successful.
2020-06-17 09:52:52,820 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:52:52,823 INFO - Request finished in 27.9419ms 500 text/html; charset=utf-8
2020-06-17 09:52:52,844 INFO - Request finished in 29.5288ms 500 text/html; charset=utf-8
2020-06-17 09:53:13,619 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:53:13,622 INFO - CORS policy execution successful.
2020-06-17 09:53:13,624 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:53:13,627 INFO - CORS policy execution successful.
2020-06-17 09:53:13,629 INFO - Request finished in 8.555ms 204 
2020-06-17 09:53:13,630 INFO - Request finished in 6.6203ms 204 
2020-06-17 09:53:13,634 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:53:13,636 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:53:13,637 INFO - CORS policy execution successful.
2020-06-17 09:53:13,639 INFO - CORS policy execution successful.
2020-06-17 09:53:13,645 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:53:13,648 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:53:13,661 INFO - Request finished in 24.931ms 500 text/html; charset=utf-8
2020-06-17 09:53:13,681 INFO - Request finished in 43.5922ms 500 text/html; charset=utf-8
2020-06-17 09:53:39,142 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:53:39,144 INFO - CORS policy execution successful.
2020-06-17 09:53:39,152 INFO - Request finished in 7.8796ms 204 
2020-06-17 09:53:39,159 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:53:39,160 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:53:39,161 INFO - CORS policy execution successful.
2020-06-17 09:53:39,188 INFO - CORS policy execution successful.
2020-06-17 09:53:39,189 INFO - Request finished in 13.7534ms 204 
2020-06-17 09:53:39,223 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:53:39,255 INFO - CORS policy execution successful.
2020-06-17 09:53:39,258 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
2020-06-17 09:53:39,284 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:53:39,307 INFO - Request finished in 104.3969ms 500 text/html; charset=utf-8
2020-06-17 09:53:39,325 INFO - Request finished in 159.5832ms 500 text/html; charset=utf-8
2020-06-17 09:54:02,562 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:54:02,565 INFO - CORS policy execution successful.
2020-06-17 09:54:02,570 INFO - Request finished in 9.9309ms 204 
2020-06-17 09:54:02,573 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:54:02,578 INFO - CORS policy execution successful.
2020-06-17 09:54:02,585 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:54:02,589 INFO - Request finished in 9.9222ms 204 
2020-06-17 09:54:02,595 INFO - CORS policy execution successful.
2020-06-17 09:54:02,597 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:54:02,602 INFO - CORS policy execution successful.
2020-06-17 09:54:02,631 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:54:02,651 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:54:02,671 INFO - Request finished in 74.0859ms 500 text/html; charset=utf-8
2020-06-17 09:54:02,684 INFO - Request finished in 84.3429ms 500 text/html; charset=utf-8
2020-06-17 09:54:15,503 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:54:15,552 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:54:15,565 INFO - CORS policy execution successful.
2020-06-17 09:54:15,597 INFO - CORS policy execution successful.
2020-06-17 09:54:15,616 INFO - Request finished in 194.2404ms 204 
2020-06-17 09:54:15,619 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:54:15,637 INFO - Request finished in 172.8227ms 204 
2020-06-17 09:54:15,651 INFO - CORS policy execution successful.
2020-06-17 09:54:15,734 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:54:15,769 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:54:15,787 INFO - CORS policy execution successful.
2020-06-17 09:54:15,796 INFO - Request finished in 166.6092ms 500 text/html; charset=utf-8
2020-06-17 09:54:15,966 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
--- End of stack trace from previous location where exception was thrown ---
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 09:54:16,102 INFO - Request finished in 279.7833ms 500 text/html; charset=utf-8
2020-06-17 09:54:33,850 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:54:33,854 INFO - CORS policy execution successful.
2020-06-17 09:54:33,871 INFO - Request finished in 34.4605ms 204 
2020-06-17 09:54:33,872 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 09:54:33,879 INFO - CORS policy execution successful.
2020-06-17 09:54:33,887 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 09:54:33,890 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 09:54:33,892 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 09:54:33,899 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 09:54:33,900 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 09:54:33,901 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 09:54:33,906 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 09:54:34,483 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 09:54:34,697 INFO - Executed DbCommand (74ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 09:54:34,718 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 815.013ms.
2020-06-17 09:54:34,718 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 09:54:34,719 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 09:54:34,723 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 821.5083ms
2020-06-17 09:54:34,725 INFO - Request finished in 854.1048ms 200 application/json; charset=utf-8
2020-06-17 09:54:36,420 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:54:36,423 INFO - CORS policy execution successful.
2020-06-17 09:54:36,472 INFO - Request finished in 6.3505ms 204 
2020-06-17 09:54:36,478 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 09:54:36,486 INFO - CORS policy execution successful.
2020-06-17 09:54:37,413 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 09:54:37,416 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 09:54:37,418 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 09:54:37,420 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 09:54:37,420 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 09:54:37,422 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 09:54:37,423 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 09:54:37,501 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 09:54:37,592 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 09:54:37,610 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 186.7031ms.
2020-06-17 09:54:37,610 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 09:54:37,611 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 09:54:37,620 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 193.4395ms
2020-06-17 09:54:37,622 INFO - Request finished in 1159.0062ms 200 application/json; charset=utf-8
2020-06-17 10:00:18,246 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:00:18,249 INFO - CORS policy execution successful.
2020-06-17 10:00:18,251 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:00:18,256 INFO - CORS policy execution successful.
2020-06-17 10:00:18,283 INFO - Request finished in 13.5715ms 204 
2020-06-17 10:00:18,285 INFO - Request finished in 31.4163ms 204 
2020-06-17 10:00:18,287 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:00:18,289 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:00:18,290 INFO - CORS policy execution successful.
2020-06-17 10:00:18,293 INFO - CORS policy execution successful.
2020-06-17 10:00:18,296 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:00:18,299 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:00:18,303 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:00:18,305 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:00:18,307 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:00:18,309 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:00:18,310 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:00:18,310 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:00:18,339 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 10:00:18,365 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:00:18,365 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:00:18,377 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:00:18,393 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 10:00:18,424 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:00:19,139 INFO - Executed DbCommand (108ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:00:19,445 INFO - Executed DbCommand (101ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:00:19,456 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:00:19,463 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 1121.6121ms.
2020-06-17 10:00:19,464 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:00:19,465 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:00:19,469 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1155.9974ms
2020-06-17 10:00:19,471 INFO - Request finished in 1190.1515ms 200 application/json; charset=utf-8
2020-06-17 10:00:19,646 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:00:19,663 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 1268.8301ms.
2020-06-17 10:00:19,663 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:00:19,665 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:00:19,669 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1301.666ms
2020-06-17 10:00:19,671 INFO - Request finished in 1383.3957ms 200 application/json; charset=utf-8
2020-06-17 10:00:27,294 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:00:27,328 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:00:27,335 INFO - CORS policy execution successful.
2020-06-17 10:00:27,341 INFO - CORS policy execution successful.
2020-06-17 10:00:27,346 INFO - Request finished in 54.9331ms 204 
2020-06-17 10:00:27,349 INFO - Request finished in 58.6638ms 204 
2020-06-17 10:00:27,356 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:00:27,363 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:00:27,374 INFO - CORS policy execution successful.
2020-06-17 10:00:27,377 INFO - CORS policy execution successful.
2020-06-17 10:00:28,349 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:00:28,350 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:00:28,351 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:00:28,352 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:00:28,353 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:00:28,356 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:00:28,357 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:00:28,357 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:00:28,359 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 10:00:28,360 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:00:28,361 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:00:28,361 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:00:28,362 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 10:00:28,364 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:00:28,431 INFO - Executed DbCommand (63ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:00:28,458 INFO - Executed DbCommand (92ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:00:28,508 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:00:28,533 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 172.5842ms.
2020-06-17 10:00:28,533 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:00:28,535 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:00:28,537 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 178.3566ms
2020-06-17 10:00:28,539 INFO - Request finished in 1187.57ms 200 application/json; charset=utf-8
2020-06-17 10:00:28,560 INFO - Executed DbCommand (91ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:00:28,600 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 236.7928ms.
2020-06-17 10:00:28,600 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:00:28,601 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:00:28,606 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 242.7612ms
2020-06-17 10:00:28,608 INFO - Request finished in 1254.038ms 200 application/json; charset=utf-8
2020-06-17 10:02:28,638 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:02:28,639 INFO - CORS policy execution successful.
2020-06-17 10:02:28,642 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:02:28,647 INFO - CORS policy execution successful.
2020-06-17 10:02:28,648 INFO - Request finished in 13.9985ms 204 
2020-06-17 10:02:28,653 INFO - Request finished in 8.9651ms 204 
2020-06-17 10:02:28,663 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:02:28,664 INFO - CORS policy execution successful.
2020-06-17 10:02:28,687 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:02:28,693 INFO - CORS policy execution successful.
2020-06-17 10:02:28,696 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:02:28,698 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:02:28,726 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:02:28,731 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:02:28,735 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:02:28,737 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:02:28,739 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:02:28,740 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:02:28,744 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:02:28,745 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:02:28,747 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 10:02:28,749 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 10:02:28,751 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:02:28,798 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:02:28,853 INFO - Executed DbCommand (92ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:02:28,901 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:02:28,962 INFO - Executed DbCommand (93ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:02:28,981 INFO - Executed DbCommand (63ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:02:28,984 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 234.6585ms.
2020-06-17 10:02:28,984 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:02:28,986 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:02:28,988 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 246.7691ms
2020-06-17 10:02:28,990 INFO - Request finished in 335.0713ms 200 application/json; charset=utf-8
2020-06-17 10:02:29,006 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 254.9744ms.
2020-06-17 10:02:29,006 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:02:29,012 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:02:29,016 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 269.5457ms
2020-06-17 10:02:29,018 INFO - Request finished in 352.9302ms 200 application/json; charset=utf-8
2020-06-17 10:03:49,325 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:03:49,327 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:03:49,328 INFO - CORS policy execution successful.
2020-06-17 10:03:49,330 INFO - CORS policy execution successful.
2020-06-17 10:03:49,335 INFO - Request finished in 9.3482ms 204 
2020-06-17 10:03:49,337 INFO - Request finished in 14.1951ms 204 
2020-06-17 10:03:49,342 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:03:49,359 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:03:49,361 INFO - CORS policy execution successful.
2020-06-17 10:03:49,362 INFO - CORS policy execution successful.
2020-06-17 10:03:49,381 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 10:03:49,389 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: You must either set Authority or IntrospectionEndpoint
   at Microsoft.AspNetCore.Builder.OAuth2IntrospectionOptions.Validate() in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\OAuth2IntrospectionOptions.cs:line 167
   at IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions.PostConfigure(String name, OAuth2IntrospectionOptions options) in C:\local\identity\model\AspNetCore.OAuth2Introspection\src\PostConfigureOAuth2IntrospectionOptions.cs:line 28
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass10_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at System.Lazy`1.CreateValue()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(AuthenticationScheme scheme, HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider.GetHandlerAsync(HttpContext context, String authenticationScheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler.HandleAuthenticateAsync() in C:\local\identity\server4\AccessTokenValidation\src\IdentityServerAuthenticationHandler.cs:line 68
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-17 10:03:49,394 INFO - Request finished in 55.0654ms 500 text/html; charset=utf-8
2020-06-17 10:03:49,437 INFO - Request finished in 77.5034ms 500 text/html; charset=utf-8
2020-06-17 10:03:52,142 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:03:52,143 INFO - CORS policy execution successful.
2020-06-17 10:03:52,145 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:03:52,147 INFO - CORS policy execution successful.
2020-06-17 10:03:53,428 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:03:53,430 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:03:53,431 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:03:53,432 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:03:53,433 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:03:53,435 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:03:53,436 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:03:53,438 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:03:53,439 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:03:53,440 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 10:03:53,440 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:03:53,442 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 10:03:53,443 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:03:53,445 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:03:53,515 INFO - Executed DbCommand (63ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:03:53,516 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:03:53,603 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:03:53,603 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:03:53,624 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 180.9705ms.
2020-06-17 10:03:53,624 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:03:53,626 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:03:53,627 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 183.5856ms.
2020-06-17 10:03:53,627 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:03:53,628 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:03:53,634 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 190.1733ms
2020-06-17 10:03:53,635 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 193.077ms
2020-06-17 10:03:53,637 INFO - Request finished in 1497.2245ms 200 application/json; charset=utf-8
2020-06-17 10:03:53,638 INFO - Request finished in 1492.9166ms 200 application/json; charset=utf-8
2020-06-17 10:14:00,440 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:14:00,441 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:14:00,444 INFO - CORS policy execution successful.
2020-06-17 10:14:00,444 INFO - CORS policy execution successful.
2020-06-17 10:14:00,448 INFO - Request finished in 6.9984ms 204 
2020-06-17 10:14:00,455 INFO - Request finished in 11.3638ms 204 
2020-06-17 10:14:00,462 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 10:14:00,471 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 10:14:00,474 INFO - CORS policy execution successful.
2020-06-17 10:14:00,485 INFO - CORS policy execution successful.
2020-06-17 10:14:00,488 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:14:00,490 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 10:14:00,498 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:14:00,502 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:14:00,507 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:14:00,511 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 10:14:00,533 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:14:00,533 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:14:00,534 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 10:14:00,535 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 10:14:00,535 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 10:14:00,540 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 10:14:00,541 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:14:00,543 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 10:14:00,983 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:14:01,174 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:14:01,192 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 654.8165ms.
2020-06-17 10:14:01,192 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:14:01,194 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:14:01,197 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 662.5974ms
2020-06-17 10:14:01,199 INFO - Request finished in 741.8327ms 200 application/json; charset=utf-8
2020-06-17 10:14:01,365 INFO - Executed DbCommand (88ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:14:01,561 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 10:14:01,576 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 1034.0718ms.
2020-06-17 10:14:01,576 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 10:14:01,578 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 10:14:01,582 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1045.2939ms
2020-06-17 10:14:01,584 INFO - Request finished in 1123.0106ms 200 application/json; charset=utf-8
2020-06-17 11:11:43,396 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:11:43,407 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:11:43,409 INFO - CORS policy execution successful.
2020-06-17 11:11:43,410 INFO - CORS policy execution successful.
2020-06-17 11:11:43,481 INFO - Request finished in 23.6463ms 204 
2020-06-17 11:11:43,488 INFO - Request finished in 28.3114ms 204 
2020-06-17 11:11:43,490 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:11:43,493 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:11:43,495 INFO - CORS policy execution successful.
2020-06-17 11:11:43,504 INFO - CORS policy execution successful.
2020-06-17 11:11:44,506 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:11:44,557 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:11:44,568 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:11:44,572 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:11:44,580 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:11:44,588 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:11:44,589 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:11:44,600 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:11:44,601 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:11:44,629 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:11:44,630 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:11:44,630 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:11:44,654 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:11:44,678 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:11:45,137 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:11:45,342 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:11:45,362 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 759.1357ms.
2020-06-17 11:11:45,362 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:11:45,363 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:11:45,367 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 777.1121ms
2020-06-17 11:11:45,371 INFO - Request finished in 1879.7592ms 200 application/json; charset=utf-8
2020-06-17 11:11:45,501 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:11:45,711 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:11:45,734 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 1078.0487ms.
2020-06-17 11:11:45,734 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:11:45,735 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:11:45,739 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1106.4257ms
2020-06-17 11:11:45,741 INFO - Request finished in 2250.9498ms 200 application/json; charset=utf-8
2020-06-17 11:12:57,624 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:12:57,627 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:12:57,629 INFO - CORS policy execution successful.
2020-06-17 11:12:57,639 INFO - CORS policy execution successful.
2020-06-17 11:12:57,753 INFO - Request finished in 39.5879ms 204 
2020-06-17 11:12:57,754 INFO - Request finished in 66.5942ms 204 
2020-06-17 11:12:57,775 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:12:57,779 INFO - CORS policy execution successful.
2020-06-17 11:12:57,783 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:12:57,785 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:12:57,788 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:12:57,789 INFO - CORS policy execution successful.
2020-06-17 11:12:57,791 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:12:57,794 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:12:57,795 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:12:57,797 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:12:57,802 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:12:57,873 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:12:57,983 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:12:58,039 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 240.5622ms.
2020-06-17 11:12:58,039 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:12:58,040 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:12:58,044 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 247.5088ms
2020-06-17 11:12:58,055 INFO - Request finished in 292.2696ms 200 application/json; charset=utf-8
2020-06-17 11:12:58,515 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:12:58,520 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:12:58,522 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:12:58,524 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:12:58,524 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:12:58,526 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:12:58,531 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:12:58,662 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:12:58,925 INFO - Executed DbCommand (168ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:12:59,090 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 562.7041ms.
2020-06-17 11:12:59,090 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:12:59,092 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:12:59,097 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 569.69ms
2020-06-17 11:12:59,098 INFO - Request finished in 1315.2482ms 200 application/json; charset=utf-8
2020-06-17 11:13:06,871 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:06,882 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:06,883 INFO - CORS policy execution successful.
2020-06-17 11:13:06,925 INFO - CORS policy execution successful.
2020-06-17 11:13:06,927 INFO - Request finished in 141.0254ms 204 
2020-06-17 11:13:06,987 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:07,009 INFO - Request finished in 243.3477ms 204 
2020-06-17 11:13:07,013 INFO - CORS policy execution successful.
2020-06-17 11:13:07,149 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:07,166 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:07,182 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:07,192 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:07,206 INFO - CORS policy execution successful.
2020-06-17 11:13:07,209 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:07,212 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:07,228 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:13:07,232 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:07,234 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:07,248 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:07,252 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:07,256 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:07,256 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:07,259 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:13:07,262 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:07,317 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:07,495 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:07,626 INFO - Executed DbCommand (134ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:08,202 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 822.9724ms.
2020-06-17 11:13:08,203 INFO - Executed DbCommand (577ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:08,203 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:08,216 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:08,314 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1009.6561ms
2020-06-17 11:13:08,329 INFO - Request finished in 1391.7819ms 200 application/json; charset=utf-8
2020-06-17 11:13:08,399 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 1099.3324ms.
2020-06-17 11:13:08,399 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:08,416 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:08,505 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1162.9884ms
2020-06-17 11:13:08,605 INFO - Request finished in 1347.2233ms 200 application/json; charset=utf-8
2020-06-17 11:13:20,398 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:20,399 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:20,403 INFO - CORS policy execution successful.
2020-06-17 11:13:20,404 INFO - CORS policy execution successful.
2020-06-17 11:13:20,416 INFO - Request finished in 9.2627ms 204 
2020-06-17 11:13:20,421 INFO - Request finished in 20.7111ms 204 
2020-06-17 11:13:20,423 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:20,432 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:20,433 INFO - CORS policy execution successful.
2020-06-17 11:13:20,606 INFO - CORS policy execution successful.
2020-06-17 11:13:20,629 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:20,632 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:20,637 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:20,639 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:20,640 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:20,642 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:20,648 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:20,649 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:20,649 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:20,650 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:20,651 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:13:20,653 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:13:20,654 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:20,657 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:20,725 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:20,738 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:20,849 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:20,852 INFO - Executed DbCommand (86ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:21,002 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 296.31ms.
2020-06-17 11:13:21,002 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:21,217 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 296.4239ms.
2020-06-17 11:13:21,218 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:21,239 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:21,249 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:21,269 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 600.3004ms
2020-06-17 11:13:21,272 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 619.5599ms
2020-06-17 11:13:21,276 INFO - Request finished in 853.9978ms 200 application/json; charset=utf-8
2020-06-17 11:13:21,300 INFO - Request finished in 854.1151ms 200 application/json; charset=utf-8
2020-06-17 11:13:25,506 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:25,507 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:25,508 INFO - CORS policy execution successful.
2020-06-17 11:13:25,516 INFO - CORS policy execution successful.
2020-06-17 11:13:25,520 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:25,521 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:25,523 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:25,525 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:25,722 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:25,798 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:25,801 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:25,801 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:25,805 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:13:25,808 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:25,810 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:25,810 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:25,819 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:13:25,845 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:25,883 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:25,918 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:25,980 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:26,049 INFO - Executed DbCommand (73ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:26,091 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 241.2898ms.
2020-06-17 11:13:26,091 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:26,096 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:26,114 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 292.283ms.
2020-06-17 11:13:26,115 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:26,117 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 311.3535ms
2020-06-17 11:13:26,119 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:26,120 INFO - Request finished in 738.1221ms 200 application/json; charset=utf-8
2020-06-17 11:13:26,133 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 310.4633ms
2020-06-17 11:13:26,137 INFO - Request finished in 862.0775ms 200 application/json; charset=utf-8
2020-06-17 11:13:32,268 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:32,277 INFO - CORS policy execution successful.
2020-06-17 11:13:32,318 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:32,359 INFO - Request finished in 42.0376ms 204 
2020-06-17 11:13:32,364 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:32,366 INFO - CORS policy execution successful.
2020-06-17 11:13:32,376 INFO - CORS policy execution successful.
2020-06-17 11:13:32,382 INFO - Request finished in 90.3768ms 204 
2020-06-17 11:13:32,394 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:32,395 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:32,413 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:32,416 INFO - CORS policy execution successful.
2020-06-17 11:13:32,440 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:32,442 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:32,442 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:32,444 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:13:32,449 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:32,545 INFO - Executed DbCommand (85ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:32,671 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:32,694 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 248.8942ms.
2020-06-17 11:13:32,694 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:32,695 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:32,700 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 254.6172ms
2020-06-17 11:13:32,703 INFO - Request finished in 381.5523ms 200 application/json; charset=utf-8
2020-06-17 11:13:33,778 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:33,802 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:33,815 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:33,826 INFO - CORS policy execution successful.
2020-06-17 11:13:33,834 INFO - CORS policy execution successful.
2020-06-17 11:13:33,837 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:33,839 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:33,842 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:33,845 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:33,853 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:33,860 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:33,863 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:33,874 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:33,875 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:33,876 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:33,877 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:33,879 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:13:33,883 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:13:33,885 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:33,899 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:33,906 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:33,908 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:33,909 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:33,917 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:13:33,919 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:33,958 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:33,995 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:34,067 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:34,085 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:34,092 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 207.4652ms.
2020-06-17 11:13:34,092 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:34,095 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:34,103 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 221.2183ms
2020-06-17 11:13:34,105 INFO - Request finished in 328.2279ms 200 application/json; charset=utf-8
2020-06-17 11:13:34,125 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 240.6664ms.
2020-06-17 11:13:34,125 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:34,127 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:34,132 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 251.2949ms
2020-06-17 11:13:34,134 INFO - Request finished in 357.2686ms 200 application/json; charset=utf-8
2020-06-17 11:13:34,524 INFO - Executed DbCommand (74ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:34,750 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:34,770 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 851.9302ms.
2020-06-17 11:13:34,770 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:34,772 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:34,775 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 864.5126ms
2020-06-17 11:13:34,778 INFO - Request finished in 2393.1496ms 200 application/json; charset=utf-8
2020-06-17 11:13:42,376 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:42,404 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:42,407 INFO - CORS policy execution successful.
2020-06-17 11:13:42,409 INFO - CORS policy execution successful.
2020-06-17 11:13:42,415 INFO - Request finished in 55.7176ms 204 
2020-06-17 11:13:42,418 INFO - Request finished in 50.6202ms 204 
2020-06-17 11:13:42,421 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:13:42,425 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:13:42,427 INFO - CORS policy execution successful.
2020-06-17 11:13:42,428 INFO - CORS policy execution successful.
2020-06-17 11:13:42,432 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:42,433 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:13:42,435 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:42,438 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:42,439 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:42,441 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:13:42,443 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:42,444 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:42,444 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:13:42,445 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:13:42,447 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:13:42,450 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:13:42,450 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:42,452 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:13:42,524 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:42,528 INFO - Executed DbCommand (73ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:42,610 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:42,620 INFO - Executed DbCommand (74ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:13:42,631 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 182.7002ms.
2020-06-17 11:13:42,631 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:42,633 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:42,643 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 191.8866ms
2020-06-17 11:13:42,646 INFO - Request finished in 225.372ms 200 application/json; charset=utf-8
2020-06-17 11:13:42,655 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 203.4918ms.
2020-06-17 11:13:42,655 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:13:42,658 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:13:42,661 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 214.893ms
2020-06-17 11:13:42,663 INFO - Request finished in 244.2265ms 200 application/json; charset=utf-8
2020-06-17 11:17:22,139 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:17:22,140 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:17:22,141 INFO - CORS policy execution successful.
2020-06-17 11:17:22,142 INFO - CORS policy execution successful.
2020-06-17 11:17:22,147 INFO - Request finished in 3.8316ms 204 
2020-06-17 11:17:22,152 INFO - Request finished in 16.6207ms 204 
2020-06-17 11:17:22,167 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:17:22,176 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:17:22,180 INFO - CORS policy execution successful.
2020-06-17 11:17:22,183 INFO - CORS policy execution successful.
2020-06-17 11:17:22,185 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:17:22,187 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:17:22,190 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:17:22,192 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:17:22,197 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:17:22,204 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:17:22,205 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:17:22,206 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:17:22,208 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:17:22,212 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:17:22,213 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:17:22,217 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:17:22,220 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:17:22,260 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:17:22,867 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:17:23,096 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:17:23,118 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 905.9296ms.
2020-06-17 11:17:23,118 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:17:23,119 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:17:23,124 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 916.2376ms
2020-06-17 11:17:23,125 INFO - Request finished in 971.5618ms 200 application/json; charset=utf-8
2020-06-17 11:17:23,220 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:17:23,419 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:17:23,437 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 1216.5926ms.
2020-06-17 11:17:23,438 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:17:23,439 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:17:23,441 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1226.7557ms
2020-06-17 11:17:23,443 INFO - Request finished in 1289.3889ms 200 application/json; charset=utf-8
2020-06-17 11:18:02,798 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:18:02,800 INFO - CORS policy execution successful.
2020-06-17 11:18:02,801 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:18:02,804 INFO - CORS policy execution successful.
2020-06-17 11:18:02,806 INFO - Request finished in 5.804ms 204 
2020-06-17 11:18:02,814 INFO - Request finished in 9.5863ms 204 
2020-06-17 11:18:02,816 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:18:02,819 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:18:02,821 INFO - CORS policy execution successful.
2020-06-17 11:18:02,822 INFO - CORS policy execution successful.
2020-06-17 11:18:03,755 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:18:03,756 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:18:03,758 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:18:03,759 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:18:03,760 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:18:03,782 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:18:03,784 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:18:03,785 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:18:03,785 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:18:03,787 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:18:03,787 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:18:03,788 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:18:03,790 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:18:03,791 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:18:03,860 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:18:03,875 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:18:03,956 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:18:03,976 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 187.7237ms.
2020-06-17 11:18:03,976 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:18:03,978 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:18:03,981 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 194.5991ms
2020-06-17 11:18:03,983 INFO - Request finished in 1167.3549ms 200 application/json; charset=utf-8
2020-06-17 11:18:03,988 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:18:04,006 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 216.8851ms.
2020-06-17 11:18:04,006 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:18:04,008 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:18:04,012 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 223.8516ms
2020-06-17 11:18:04,014 INFO - Request finished in 1197.0379ms 200 application/json; charset=utf-8
2020-06-17 11:18:16,791 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:18:16,793 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:18:16,797 INFO - CORS policy execution successful.
2020-06-17 11:18:16,800 INFO - CORS policy execution successful.
2020-06-17 11:18:16,802 INFO - Request finished in 7.657ms 204 
2020-06-17 11:18:16,812 INFO - Request finished in 21.4659ms 204 
2020-06-17 11:18:16,813 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:18:16,818 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:18:16,820 INFO - CORS policy execution successful.
2020-06-17 11:18:16,822 INFO - CORS policy execution successful.
2020-06-17 11:18:16,824 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:18:16,826 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:18:16,827 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:18:16,829 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:18:16,830 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:18:16,836 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:18:16,980 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:18:16,983 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:18:16,988 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:18:16,989 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:18:16,991 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:18:17,002 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:18:17,005 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:18:17,006 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:18:17,085 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:18:17,087 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:18:17,169 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:18:17,180 INFO - Executed DbCommand (77ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:18:17,217 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 221.0979ms.
2020-06-17 11:18:17,217 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:18:17,230 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:18:17,245 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 250.841ms
2020-06-17 11:18:17,247 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 233.0792ms.
2020-06-17 11:18:17,247 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:18:17,248 INFO - Request finished in 437.5467ms 200 application/json; charset=utf-8
2020-06-17 11:18:17,251 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:18:17,263 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 262.9989ms
2020-06-17 11:18:17,266 INFO - Request finished in 454.1143ms 200 application/json; charset=utf-8
2020-06-17 11:19:52,224 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:19:52,225 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:19:52,244 INFO - CORS policy execution successful.
2020-06-17 11:19:52,307 INFO - CORS policy execution successful.
2020-06-17 11:19:52,399 INFO - Request finished in 89.5696ms 204 
2020-06-17 11:19:52,404 INFO - Request finished in 176.3161ms 204 
2020-06-17 11:19:52,408 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:19:52,409 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:19:52,413 INFO - CORS policy execution successful.
2020-06-17 11:19:52,443 INFO - CORS policy execution successful.
2020-06-17 11:19:52,449 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:19:52,451 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:19:52,454 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:19:52,455 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:19:52,457 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:19:52,462 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:19:52,463 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:19:52,464 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:19:52,471 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:19:52,471 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:19:52,472 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:19:52,479 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:19:52,483 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:19:52,486 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:19:52,559 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:19:52,640 INFO - Executed DbCommand (152ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:19:52,641 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:19:52,661 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 179.556ms.
2020-06-17 11:19:52,661 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:19:52,663 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:19:52,667 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 193.1936ms
2020-06-17 11:19:52,668 INFO - Request finished in 263.9738ms 200 application/json; charset=utf-8
2020-06-17 11:19:53,171 INFO - Executed DbCommand (147ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:19:53,393 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 919.3803ms.
2020-06-17 11:19:53,393 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:19:53,395 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:19:53,398 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 932.866ms
2020-06-17 11:19:53,407 INFO - Request finished in 996.7614ms 200 application/json; charset=utf-8
2020-06-17 11:19:54,753 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:19:54,753 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:19:54,756 INFO - CORS policy execution successful.
2020-06-17 11:19:54,759 INFO - CORS policy execution successful.
2020-06-17 11:19:55,804 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:19:55,807 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:19:55,808 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:19:55,827 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:19:55,833 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:19:55,846 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:19:55,846 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:19:55,847 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:19:55,849 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:19:55,877 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:19:55,879 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:19:55,879 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:19:55,883 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:19:55,887 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:19:55,986 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:19:55,986 INFO - Executed DbCommand (102ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:19:56,085 INFO - Executed DbCommand (79ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:19:56,144 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 259.5078ms.
2020-06-17 11:19:56,144 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:19:56,148 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:19:56,159 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 270.7533ms
2020-06-17 11:19:56,170 INFO - Request finished in 1408.2438ms 200 application/json; charset=utf-8
2020-06-17 11:19:56,190 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:19:56,255 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 394.1991ms.
2020-06-17 11:19:56,255 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:19:56,258 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:19:56,263 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 412.7504ms
2020-06-17 11:19:56,265 INFO - Request finished in 1513.7673ms 200 application/json; charset=utf-8
2020-06-17 11:20:14,204 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:20:14,206 INFO - CORS policy execution successful.
2020-06-17 11:20:14,210 INFO - Request finished in 5.3131ms 204 
2020-06-17 11:20:14,224 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:20:14,232 INFO - CORS policy execution successful.
2020-06-17 11:20:14,236 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:20:14,239 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:20:14,241 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:20:14,242 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:20:14,243 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:20:14,249 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:20:14,252 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:20:14,331 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:20:14,485 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:20:14,566 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 315.6456ms.
2020-06-17 11:20:14,566 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:20:14,570 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:20:14,573 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 327.9601ms
2020-06-17 11:20:14,574 INFO - Request finished in 359.8997ms 200 application/json; charset=utf-8
2020-06-17 11:20:15,564 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:20:15,566 INFO - CORS policy execution successful.
2020-06-17 11:20:15,572 INFO - Request finished in 23.9734ms 204 
2020-06-17 11:20:15,574 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:20:15,578 INFO - CORS policy execution successful.
2020-06-17 11:20:15,582 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:20:15,589 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:20:15,591 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:20:15,594 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:20:15,594 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:20:15,598 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:20:15,609 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:20:15,688 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:20:15,843 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:20:15,923 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 323.6489ms.
2020-06-17 11:20:15,923 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:20:15,925 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:20:15,932 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 332.5788ms
2020-06-17 11:20:15,933 INFO - Request finished in 359.4933ms 200 application/json; charset=utf-8
2020-06-17 11:21:15,934 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:21:15,939 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:21:15,940 INFO - CORS policy execution successful.
2020-06-17 11:21:15,942 INFO - CORS policy execution successful.
2020-06-17 11:21:15,951 INFO - Request finished in 7.821ms 204 
2020-06-17 11:21:15,967 INFO - Request finished in 277.5091ms 204 
2020-06-17 11:21:15,976 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:21:15,981 INFO - CORS policy execution successful.
2020-06-17 11:21:15,983 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:21:15,985 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:21:15,988 INFO - CORS policy execution successful.
2020-06-17 11:21:15,990 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:21:15,995 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:21:15,998 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:21:15,998 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:21:16,000 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:21:16,004 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:21:16,077 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:21:16,184 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:21:16,199 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 197.8768ms.
2020-06-17 11:21:16,200 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:21:16,201 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:21:16,204 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 204.6381ms
2020-06-17 11:21:16,206 INFO - Request finished in 237.4952ms 200 application/json; charset=utf-8
2020-06-17 11:21:16,973 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:21:16,975 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:21:16,976 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:21:16,978 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:21:16,979 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:21:16,981 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:21:16,982 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:21:17,049 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:21:17,131 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:21:17,148 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 166.2353ms.
2020-06-17 11:21:17,148 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:21:17,150 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:21:17,155 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 173.593ms
2020-06-17 11:21:17,156 INFO - Request finished in 1175.3152ms 200 application/json; charset=utf-8
2020-06-17 11:21:40,210 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:21:40,215 INFO - CORS policy execution successful.
2020-06-17 11:21:40,222 INFO - Request finished in 13.6131ms 204 
2020-06-17 11:21:40,233 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:21:40,235 INFO - CORS policy execution successful.
2020-06-17 11:21:40,239 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:21:40,246 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:21:40,248 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:21:40,249 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:21:40,250 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:21:40,251 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:21:40,252 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:21:40,338 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:21:40,421 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:21:40,448 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 195.5746ms.
2020-06-17 11:21:40,448 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:21:40,449 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:21:40,453 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 200.8604ms
2020-06-17 11:21:40,464 INFO - Request finished in 228.6672ms 200 application/json; charset=utf-8
2020-06-17 11:21:44,012 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:21:44,013 INFO - CORS policy execution successful.
2020-06-17 11:21:44,018 INFO - Request finished in 10.2875ms 204 
2020-06-17 11:21:44,020 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:21:44,022 INFO - CORS policy execution successful.
2020-06-17 11:21:44,026 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:21:44,029 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:21:44,031 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:21:44,034 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:21:44,034 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:21:44,036 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:21:44,038 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:21:44,108 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:21:44,190 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:21:44,207 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 169.1136ms.
2020-06-17 11:21:44,207 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:21:44,208 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:21:44,214 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 175.0382ms
2020-06-17 11:21:44,215 INFO - Request finished in 195.855ms 200 application/json; charset=utf-8
2020-06-17 11:22:33,915 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:22:33,920 INFO - CORS policy execution successful.
2020-06-17 11:22:33,922 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:22:33,923 INFO - Request finished in 12.5081ms 204 
2020-06-17 11:22:33,924 INFO - CORS policy execution successful.
2020-06-17 11:22:33,933 INFO - Request finished in 4.7104ms 204 
2020-06-17 11:22:33,945 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:22:33,947 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:22:33,948 INFO - CORS policy execution successful.
2020-06-17 11:22:33,949 INFO - CORS policy execution successful.
2020-06-17 11:22:33,952 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:22:33,953 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:22:33,954 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:22:33,956 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:22:33,963 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:22:33,964 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:22:33,965 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:22:33,966 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:22:33,967 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:22:33,968 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:22:33,969 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:22:33,972 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:22:33,986 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:22:33,997 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:22:34,056 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:22:34,088 INFO - Executed DbCommand (85ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:22:34,272 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:22:34,288 INFO - Executed DbCommand (92ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:22:34,316 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 323.75ms.
2020-06-17 11:22:34,316 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:22:34,319 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:22:34,323 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 354.9593ms
2020-06-17 11:22:34,325 INFO - Request finished in 380.6919ms 200 application/json; charset=utf-8
2020-06-17 11:22:34,363 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 386.9757ms.
2020-06-17 11:22:34,363 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:22:34,364 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:22:34,366 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 396.9428ms
2020-06-17 11:22:34,368 INFO - Request finished in 425.7962ms 200 application/json; charset=utf-8
2020-06-17 11:23:32,532 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:23:32,537 INFO - CORS policy execution successful.
2020-06-17 11:23:32,548 INFO - Request finished in 8.6829ms 204 
2020-06-17 11:23:32,551 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:23:32,554 INFO - CORS policy execution successful.
2020-06-17 11:23:33,409 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:23:33,413 INFO - CORS policy execution successful.
2020-06-17 11:23:33,420 INFO - Request finished in 10.296ms 204 
2020-06-17 11:23:33,424 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:23:33,429 INFO - CORS policy execution successful.
2020-06-17 11:23:33,566 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:23:33,567 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:23:33,568 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:23:33,569 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:23:33,570 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:23:33,572 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:23:33,574 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:23:33,575 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:23:33,575 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:23:33,575 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:23:33,577 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:23:33,579 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:23:33,580 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:23:33,582 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:23:33,671 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:23:33,674 INFO - Executed DbCommand (88ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:23:33,766 INFO - Executed DbCommand (73ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:23:33,792 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 209.4913ms.
2020-06-17 11:23:33,792 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:23:33,798 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:23:33,806 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 225.0602ms
2020-06-17 11:23:33,807 INFO - Request finished in 1257.521ms 200 application/json; charset=utf-8
2020-06-17 11:23:33,874 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:23:33,921 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 341.5936ms.
2020-06-17 11:23:33,921 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:23:33,922 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:23:33,929 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 349.3897ms
2020-06-17 11:23:33,931 INFO - Request finished in 508.6739ms 200 application/json; charset=utf-8
2020-06-17 11:26:35,080 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:26:35,121 INFO - CORS policy execution successful.
2020-06-17 11:26:35,166 INFO - Request finished in 47.7991ms 204 
2020-06-17 11:26:35,207 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:26:35,209 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:26:35,210 INFO - CORS policy execution successful.
2020-06-17 11:26:35,213 INFO - CORS policy execution successful.
2020-06-17 11:26:35,215 INFO - Request finished in 59.4227ms 204 
2020-06-17 11:26:35,221 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:26:35,223 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:26:35,227 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:26:35,229 INFO - CORS policy execution successful.
2020-06-17 11:26:35,230 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:26:35,238 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:26:35,239 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:26:35,241 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:26:35,243 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:26:35,311 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:26:35,419 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:26:35,435 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 192.5785ms.
2020-06-17 11:26:35,435 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:26:35,436 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:26:35,459 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 210.7729ms
2020-06-17 11:26:35,488 INFO - Request finished in 293.5601ms 200 application/json; charset=utf-8
2020-06-17 11:26:36,317 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:26:36,319 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:26:36,320 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:26:36,322 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:26:36,322 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:26:36,324 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:26:36,326 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:26:36,402 INFO - Executed DbCommand (73ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:26:36,481 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:26:36,495 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 169.6559ms.
2020-06-17 11:26:36,495 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:26:36,496 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:26:36,501 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 175.3207ms
2020-06-17 11:26:36,502 INFO - Request finished in 1280.9327ms 200 application/json; charset=utf-8
2020-06-17 11:26:38,451 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:26:38,452 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:26:38,454 INFO - CORS policy execution successful.
2020-06-17 11:26:38,459 INFO - CORS policy execution successful.
2020-06-17 11:26:38,462 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:26:38,465 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:26:38,469 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:26:38,471 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:26:38,480 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:26:38,494 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:26:38,522 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:26:38,531 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:26:38,547 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:26:38,548 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:26:38,569 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:26:38,671 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:26:38,672 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:26:38,673 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:26:38,745 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:26:38,754 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:26:38,827 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:26:38,856 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 182.3029ms.
2020-06-17 11:26:38,856 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:26:38,859 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:26:38,864 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 312.1978ms
2020-06-17 11:26:38,867 INFO - Request finished in 416.1568ms 200 application/json; charset=utf-8
2020-06-17 11:26:38,905 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:26:38,978 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 407.9944ms.
2020-06-17 11:26:38,978 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:26:38,980 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:26:38,982 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 449.1436ms
2020-06-17 11:26:38,984 INFO - Request finished in 536.0137ms 200 application/json; charset=utf-8
2020-06-17 11:27:57,549 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:27:57,558 INFO - CORS policy execution successful.
2020-06-17 11:27:57,566 INFO - Request finished in 15.1271ms 204 
2020-06-17 11:27:57,571 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:27:57,574 INFO - CORS policy execution successful.
2020-06-17 11:27:57,575 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:27:57,578 INFO - CORS policy execution successful.
2020-06-17 11:27:57,580 INFO - Request finished in 9.7772ms 204 
2020-06-17 11:27:57,586 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:27:57,589 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:27:57,591 INFO - CORS policy execution successful.
2020-06-17 11:27:57,594 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:27:57,595 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:27:57,598 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:27:57,599 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:27:57,600 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:27:57,602 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:27:57,680 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:27:57,829 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:27:57,902 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 300.5438ms.
2020-06-17 11:27:57,902 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:27:57,903 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:27:57,905 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 305.4011ms
2020-06-17 11:27:57,910 INFO - Request finished in 332.2604ms 200 application/json; charset=utf-8
2020-06-17 11:27:58,589 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:27:58,590 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:27:58,591 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:27:58,593 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:27:58,593 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:27:58,595 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:27:58,597 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:27:58,744 INFO - Executed DbCommand (96ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:27:58,835 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:27:58,848 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 251.7809ms.
2020-06-17 11:27:58,848 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:27:58,849 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:27:58,853 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 256.6737ms
2020-06-17 11:27:58,855 INFO - Request finished in 1273.866ms 200 application/json; charset=utf-8
2020-06-17 11:28:30,026 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:28:30,214 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:28:30,218 INFO - CORS policy execution successful.
2020-06-17 11:28:30,219 INFO - CORS policy execution successful.
2020-06-17 11:28:30,230 INFO - Request finished in 206.5538ms 204 
2020-06-17 11:28:30,231 INFO - Request finished in 231.3141ms 204 
2020-06-17 11:28:30,238 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:28:30,240 INFO - CORS policy execution successful.
2020-06-17 11:28:30,247 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:28:30,247 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:28:30,249 INFO - CORS policy execution successful.
2020-06-17 11:28:30,252 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:30,257 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:30,259 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:28:30,259 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:28:30,261 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:28:30,262 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:28:30,334 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:30,424 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:30,446 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 183.2755ms.
2020-06-17 11:28:30,446 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:28:30,447 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:28:30,450 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 188.9549ms
2020-06-17 11:28:30,452 INFO - Request finished in 219.5388ms 200 application/json; charset=utf-8
2020-06-17 11:28:31,020 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:28:31,029 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:31,035 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:31,043 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:28:31,043 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:28:31,046 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:28:31,048 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:28:31,120 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:31,199 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:31,215 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 168.023ms.
2020-06-17 11:28:31,215 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:28:31,218 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:28:31,223 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 176.0618ms
2020-06-17 11:28:31,225 INFO - Request finished in 983.6944ms 200 application/json; charset=utf-8
2020-06-17 11:28:36,363 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:28:36,365 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:28:36,366 INFO - CORS policy execution successful.
2020-06-17 11:28:36,370 INFO - CORS policy execution successful.
2020-06-17 11:28:36,374 INFO - Request finished in 8.5269ms 204 
2020-06-17 11:28:36,376 INFO - Request finished in 11.2669ms 204 
2020-06-17 11:28:36,381 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:28:36,386 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:28:36,395 INFO - CORS policy execution successful.
2020-06-17 11:28:36,419 INFO - CORS policy execution successful.
2020-06-17 11:28:36,421 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:28:36,427 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:36,432 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:28:36,435 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:36,442 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:36,447 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:28:36,448 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:28:36,449 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:36,450 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:28:36,457 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:28:36,457 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:28:36,467 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:28:36,472 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:28:36,475 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:28:36,543 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:36,556 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:36,628 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:36,644 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:36,645 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 190.7567ms.
2020-06-17 11:28:36,645 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:28:36,647 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:28:36,651 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 199.9443ms
2020-06-17 11:28:36,652 INFO - Request finished in 276.7382ms 200 application/json; charset=utf-8
2020-06-17 11:28:36,670 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 195ms.
2020-06-17 11:28:36,670 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:28:36,671 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:28:36,673 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 215.2986ms
2020-06-17 11:28:36,675 INFO - Request finished in 297.7029ms 200 application/json; charset=utf-8
2020-06-17 11:28:50,675 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:28:50,677 INFO - CORS policy execution successful.
2020-06-17 11:28:50,678 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:28:50,683 INFO - CORS policy execution successful.
2020-06-17 11:28:50,686 INFO - Request finished in 11.5851ms 204 
2020-06-17 11:28:50,687 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:28:50,689 INFO - Request finished in 10.319ms 204 
2020-06-17 11:28:50,692 INFO - CORS policy execution successful.
2020-06-17 11:28:50,697 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:28:50,704 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:28:50,710 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:50,712 INFO - CORS policy execution successful.
2020-06-17 11:28:50,717 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:50,720 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:28:50,724 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:28:50,726 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:28:50,727 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:50,731 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:28:50,734 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:28:50,738 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:28:50,740 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:28:50,742 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:28:50,746 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:28:50,747 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:28:50,815 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:50,820 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:50,893 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:50,909 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:28:50,915 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 167.5524ms.
2020-06-17 11:28:50,915 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:28:50,918 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:28:50,938 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 181.4407ms
2020-06-17 11:28:50,945 INFO - Request finished in 243.9912ms 200 application/json; charset=utf-8
2020-06-17 11:28:50,970 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 237.1062ms.
2020-06-17 11:28:50,970 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:28:50,978 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:28:50,984 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 254.4763ms
2020-06-17 11:28:50,985 INFO - Request finished in 299.662ms 200 application/json; charset=utf-8
2020-06-17 11:30:23,013 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:30:23,030 INFO - CORS policy execution successful.
2020-06-17 11:30:23,044 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:30:23,049 INFO - Request finished in 30.3886ms 204 
2020-06-17 11:30:23,062 INFO - CORS policy execution successful.
2020-06-17 11:30:23,107 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:30:23,132 INFO - Request finished in 36.7954ms 204 
2020-06-17 11:30:23,137 INFO - CORS policy execution successful.
2020-06-17 11:30:23,158 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:30:23,160 INFO - CORS policy execution successful.
2020-06-17 11:30:23,162 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:30:23,166 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:30:23,167 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:23,169 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:23,171 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:23,172 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:23,174 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:30:23,197 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:30:23,197 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:30:23,198 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:30:23,199 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:30:23,202 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:30:23,203 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:30:23,205 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:30:23,274 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:23,304 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:23,392 INFO - Executed DbCommand (74ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:23,413 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 209.3795ms.
2020-06-17 11:30:23,413 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:30:23,414 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:30:23,421 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 218.4905ms
2020-06-17 11:30:23,422 INFO - Request finished in 289.4627ms 200 application/json; charset=utf-8
2020-06-17 11:30:23,442 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:23,459 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 258.6464ms.
2020-06-17 11:30:23,459 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:30:23,461 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:30:23,465 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 286.3307ms
2020-06-17 11:30:23,466 INFO - Request finished in 402.5514ms 200 application/json; charset=utf-8
2020-06-17 11:30:27,514 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:30:27,516 INFO - CORS policy execution successful.
2020-06-17 11:30:27,520 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:30:27,523 INFO - CORS policy execution successful.
2020-06-17 11:30:28,496 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:30:28,497 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:28,499 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:30:28,500 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:28,503 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:28,504 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:30:28,505 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:30:28,526 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:28,528 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:30:28,529 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:30:28,531 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:30:28,531 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:30:28,534 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:30:28,535 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:30:28,608 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:28,610 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:28,692 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:28,706 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:28,717 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 180.2ms.
2020-06-17 11:30:28,717 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:30:28,721 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:30:28,729 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 196.8479ms
2020-06-17 11:30:28,732 INFO - Request finished in 1213.1195ms 200 application/json; charset=utf-8
2020-06-17 11:30:28,747 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 212.6215ms.
2020-06-17 11:30:28,747 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:30:28,750 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:30:28,769 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 247.0179ms
2020-06-17 11:30:28,829 INFO - Request finished in 1257.3948ms 200 application/json; charset=utf-8
2020-06-17 11:30:46,700 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:30:46,703 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:30:46,706 INFO - CORS policy execution successful.
2020-06-17 11:30:46,715 INFO - CORS policy execution successful.
2020-06-17 11:30:46,721 INFO - Request finished in 15.1634ms 204 
2020-06-17 11:30:46,729 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:30:46,761 INFO - Request finished in 20.5887ms 204 
2020-06-17 11:30:46,783 INFO - CORS policy execution successful.
2020-06-17 11:30:46,945 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:30:46,947 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:30:46,949 INFO - CORS policy execution successful.
2020-06-17 11:30:46,951 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:46,954 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:46,954 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:30:46,956 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:30:46,958 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:30:46,959 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:46,960 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:30:46,966 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:30:46,971 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:30:46,975 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:30:46,975 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:30:46,978 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:30:46,980 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:30:47,053 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:47,054 INFO - Executed DbCommand (79ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:47,137 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:47,151 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:30:47,168 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 183.448ms.
2020-06-17 11:30:47,168 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:30:47,169 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:30:47,177 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 196.2847ms
2020-06-17 11:30:47,178 INFO - Request finished in 450.0579ms 200 application/json; charset=utf-8
2020-06-17 11:30:47,181 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 217.784ms.
2020-06-17 11:30:47,181 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:30:47,192 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:30:47,199 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 236.2528ms
2020-06-17 11:30:47,201 INFO - Request finished in 481.8383ms 200 application/json; charset=utf-8
2020-06-17 11:31:36,617 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:31:36,620 INFO - CORS policy execution successful.
2020-06-17 11:31:36,625 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:31:36,630 INFO - Request finished in 8.4503ms 204 
2020-06-17 11:31:36,632 INFO - CORS policy execution successful.
2020-06-17 11:31:36,638 INFO - Request finished in 11.4127ms 204 
2020-06-17 11:31:36,644 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:31:36,647 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:31:36,650 INFO - CORS policy execution successful.
2020-06-17 11:31:36,651 INFO - CORS policy execution successful.
2020-06-17 11:31:36,653 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:31:36,655 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:31:36,658 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:31:36,660 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:31:36,662 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:31:36,664 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:31:36,665 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:31:36,667 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:31:36,667 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:31:36,668 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:31:36,668 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:31:36,670 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:31:36,671 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:31:36,679 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:31:36,748 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:31:36,764 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:31:36,865 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:31:36,888 INFO - Executed DbCommand (83ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:31:36,917 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 240.8195ms.
2020-06-17 11:31:36,917 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:31:36,920 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:31:36,934 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 260.7053ms.
2020-06-17 11:31:36,935 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:31:36,935 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 265.117ms
2020-06-17 11:31:36,937 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:31:36,940 INFO - Request finished in 298.5081ms 200 application/json; charset=utf-8
2020-06-17 11:31:36,947 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 274.2612ms
2020-06-17 11:31:36,950 INFO - Request finished in 309.503ms 200 application/json; charset=utf-8
2020-06-17 11:32:19,369 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:32:19,372 INFO - CORS policy execution successful.
2020-06-17 11:32:19,375 INFO - Request finished in 6.5618ms 204 
2020-06-17 11:32:19,379 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:32:19,386 INFO - CORS policy execution successful.
2020-06-17 11:32:19,394 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:32:19,399 INFO - Request finished in 11.4102ms 204 
2020-06-17 11:32:19,478 INFO - CORS policy execution successful.
2020-06-17 11:32:19,485 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:32:19,496 INFO - CORS policy execution successful.
2020-06-17 11:32:20,327 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:32:20,328 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:32:20,330 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:20,331 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:20,332 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:20,333 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:20,334 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:32:20,336 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:32:20,337 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:32:20,339 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:32:20,339 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:32:20,340 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:32:20,342 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:32:20,364 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:32:20,434 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:20,453 INFO - Executed DbCommand (86ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:20,513 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:20,531 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 190.0636ms.
2020-06-17 11:32:20,531 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:32:20,532 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:32:20,539 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 197.2566ms
2020-06-17 11:32:20,542 INFO - Executed DbCommand (77ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:20,543 INFO - Request finished in 1138.078ms 200 application/json; charset=utf-8
2020-06-17 11:32:20,563 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 220.9537ms.
2020-06-17 11:32:20,563 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:32:20,564 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:32:20,567 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 226.5126ms
2020-06-17 11:32:20,569 INFO - Request finished in 1186.3014ms 200 application/json; charset=utf-8
2020-06-17 11:32:23,608 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:32:23,610 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:32:23,611 INFO - CORS policy execution successful.
2020-06-17 11:32:23,612 INFO - CORS policy execution successful.
2020-06-17 11:32:23,616 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:32:23,616 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:32:23,618 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:23,619 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:23,622 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:23,623 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:23,624 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:32:23,626 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:32:23,626 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:32:23,627 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:32:23,627 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:32:23,628 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:32:23,638 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:32:23,652 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:32:23,725 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:23,728 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:23,813 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:23,828 INFO - Executed DbCommand (77ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:23,841 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 210.8222ms.
2020-06-17 11:32:23,841 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:32:23,843 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:32:23,847 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 218.2421ms
2020-06-17 11:32:23,849 INFO - Request finished in 239.0576ms 200 application/json; charset=utf-8
2020-06-17 11:32:23,860 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 222.6173ms.
2020-06-17 11:32:23,860 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:32:23,862 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:32:23,865 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 237.0914ms
2020-06-17 11:32:23,867 INFO - Request finished in 258.7253ms 200 application/json; charset=utf-8
2020-06-17 11:32:49,123 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:32:49,125 INFO - CORS policy execution successful.
2020-06-17 11:32:49,130 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:32:49,133 INFO - Request finished in 4.7752ms 204 
2020-06-17 11:32:49,136 INFO - CORS policy execution successful.
2020-06-17 11:32:49,143 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:32:49,147 INFO - Request finished in 12.4708ms 204 
2020-06-17 11:32:49,152 INFO - CORS policy execution successful.
2020-06-17 11:32:49,155 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:32:49,156 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:32:49,158 INFO - CORS policy execution successful.
2020-06-17 11:32:49,159 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:49,162 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:49,163 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:32:49,164 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:32:49,165 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:32:49,166 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:49,167 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:32:49,168 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:32:49,170 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:32:49,171 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:32:49,171 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:32:49,174 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:32:49,178 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:32:49,248 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:49,278 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:49,348 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:49,364 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 188.2362ms.
2020-06-17 11:32:49,364 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:32:49,365 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:32:49,369 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 196.1668ms
2020-06-17 11:32:49,371 INFO - Request finished in 217.78ms 200 application/json; charset=utf-8
2020-06-17 11:32:49,386 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:32:49,409 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 240.112ms.
2020-06-17 11:32:49,410 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:32:49,413 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:32:49,417 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 248.6065ms
2020-06-17 11:32:49,419 INFO - Request finished in 283.6104ms 200 application/json; charset=utf-8
2020-06-17 11:33:18,218 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:33:18,234 INFO - CORS policy execution successful.
2020-06-17 11:33:18,278 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:33:18,317 INFO - Request finished in 22.9226ms 204 
2020-06-17 11:33:18,333 INFO - CORS policy execution successful.
2020-06-17 11:33:18,472 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:33:18,475 INFO - Request finished in 172.5567ms 204 
2020-06-17 11:33:18,481 INFO - CORS policy execution successful.
2020-06-17 11:33:18,486 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:33:18,490 INFO - CORS policy execution successful.
2020-06-17 11:33:18,493 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:33:18,494 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:33:18,526 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:18,530 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:18,530 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:18,532 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:18,533 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:33:18,538 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:33:18,540 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:33:18,541 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:33:18,543 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:33:18,545 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:33:18,546 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:33:18,548 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:33:18,617 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:18,634 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:18,702 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:18,723 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 177.3152ms.
2020-06-17 11:33:18,723 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:33:18,724 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:33:18,728 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 187.165ms
2020-06-17 11:33:18,732 INFO - Request finished in 395.1635ms 200 application/json; charset=utf-8
2020-06-17 11:33:18,740 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:18,773 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 222.7188ms.
2020-06-17 11:33:18,773 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:33:18,775 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:33:18,780 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 235.068ms
2020-06-17 11:33:18,782 INFO - Request finished in 302.7686ms 200 application/json; charset=utf-8
2020-06-17 11:33:35,476 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:33:35,477 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:33:35,480 INFO - CORS policy execution successful.
2020-06-17 11:33:35,482 INFO - CORS policy execution successful.
2020-06-17 11:33:35,486 INFO - Request finished in 6.4333ms 204 
2020-06-17 11:33:35,490 INFO - Request finished in 9.5393ms 204 
2020-06-17 11:33:35,497 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:33:35,498 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:33:35,500 INFO - CORS policy execution successful.
2020-06-17 11:33:35,501 INFO - CORS policy execution successful.
2020-06-17 11:33:36,452 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:33:36,453 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:33:36,454 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:36,456 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:36,457 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:36,460 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:36,462 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:33:36,463 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:33:36,464 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:33:36,464 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:33:36,466 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:33:36,467 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:33:36,469 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:33:36,471 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:33:36,539 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:36,550 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:36,620 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:36,654 INFO - Executed DbCommand (87ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:36,656 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 185.6423ms.
2020-06-17 11:33:36,656 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:33:36,679 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:33:36,682 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 216.2811ms
2020-06-17 11:33:36,684 INFO - Request finished in 1186.5351ms 200 application/json; charset=utf-8
2020-06-17 11:33:36,708 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 239.76ms.
2020-06-17 11:33:36,708 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:33:36,711 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:33:36,715 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 249.399ms
2020-06-17 11:33:36,716 INFO - Request finished in 1222.4489ms 200 application/json; charset=utf-8
2020-06-17 11:33:45,653 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:33:45,654 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:33:45,667 INFO - CORS policy execution successful.
2020-06-17 11:33:45,675 INFO - CORS policy execution successful.
2020-06-17 11:33:45,824 INFO - Request finished in 64.1465ms 204 
2020-06-17 11:33:45,825 INFO - Request finished in 78.2288ms 204 
2020-06-17 11:33:45,842 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:33:45,845 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:33:45,856 INFO - CORS policy execution successful.
2020-06-17 11:33:45,859 INFO - CORS policy execution successful.
2020-06-17 11:33:45,861 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:33:45,867 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:33:45,889 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:45,893 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:45,894 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:45,901 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:33:45,903 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:33:45,904 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:33:45,905 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:33:45,906 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:33:45,907 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:33:45,908 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:33:45,910 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:33:45,913 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:33:45,987 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:45,999 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:46,073 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:46,091 INFO - Executed DbCommand (79ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:33:46,103 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 193.732ms.
2020-06-17 11:33:46,103 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:33:46,105 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:33:46,115 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 200.1147ms
2020-06-17 11:33:46,123 INFO - Request finished in 290.8903ms 200 application/json; charset=utf-8
2020-06-17 11:33:46,129 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 219.2159ms.
2020-06-17 11:33:46,129 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:33:46,131 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:33:46,137 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 229.562ms
2020-06-17 11:33:46,139 INFO - Request finished in 313.4319ms 200 application/json; charset=utf-8
2020-06-17 11:34:27,317 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:34:27,329 INFO - CORS policy execution successful.
2020-06-17 11:34:27,345 INFO - Request finished in 332.877ms 204 
2020-06-17 11:34:27,353 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:34:27,356 INFO - CORS policy execution successful.
2020-06-17 11:34:27,362 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:34:27,364 INFO - Request finished in 18.3818ms 204 
2020-06-17 11:34:27,370 INFO - CORS policy execution successful.
2020-06-17 11:34:27,373 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:34:27,378 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:27,380 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:34:27,383 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:27,386 INFO - CORS policy execution successful.
2020-06-17 11:34:27,417 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:34:27,417 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:34:27,426 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:34:27,431 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:34:27,518 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:27,605 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:27,627 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 198.9243ms.
2020-06-17 11:34:27,627 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:34:27,629 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:34:27,640 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 213.82ms
2020-06-17 11:34:27,643 INFO - Request finished in 288.2112ms 200 application/json; charset=utf-8
2020-06-17 11:34:28,183 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:34:28,206 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:28,302 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:28,305 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:34:28,305 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:34:28,310 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:34:28,322 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:34:28,466 INFO - Executed DbCommand (132ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:28,662 INFO - Executed DbCommand (91ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:28,681 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 369.5031ms.
2020-06-17 11:34:28,681 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:34:28,683 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:34:28,689 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 379.6624ms
2020-06-17 11:34:28,692 INFO - Request finished in 1313.2269ms 200 application/json; charset=utf-8
2020-06-17 11:34:50,702 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:34:50,704 INFO - CORS policy execution successful.
2020-06-17 11:34:50,771 INFO - Request finished in 6.4464ms 204 
2020-06-17 11:34:50,793 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:34:50,804 INFO - CORS policy execution successful.
2020-06-17 11:34:50,827 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:34:50,848 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:50,854 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:50,856 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:34:50,857 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:34:50,859 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:34:50,868 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:34:50,895 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:34:50,898 INFO - CORS policy execution successful.
2020-06-17 11:34:50,901 INFO - Request finished in 11.5525ms 204 
2020-06-17 11:34:50,904 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:34:50,908 INFO - CORS policy execution successful.
2020-06-17 11:34:50,911 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:34:50,920 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:50,924 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:50,928 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:34:50,928 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:34:50,935 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:34:50,940 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:34:50,953 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:51,022 INFO - Executed DbCommand (72ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:51,062 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:51,101 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 232.1072ms.
2020-06-17 11:34:51,101 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:34:51,127 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:34:51,129 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:51,138 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 272.656ms
2020-06-17 11:34:51,154 INFO - Request finished in 374.9428ms 200 application/json; charset=utf-8
2020-06-17 11:34:51,163 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 225.6638ms.
2020-06-17 11:34:51,163 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:34:51,174 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:34:51,189 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 247.3424ms
2020-06-17 11:34:51,197 INFO - Request finished in 287.6416ms 200 application/json; charset=utf-8
2020-06-17 11:34:57,713 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:34:57,715 INFO - CORS policy execution successful.
2020-06-17 11:34:57,721 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:34:57,722 INFO - Request finished in 17.1964ms 204 
2020-06-17 11:34:57,724 INFO - CORS policy execution successful.
2020-06-17 11:34:57,729 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:34:57,730 INFO - Request finished in 10.9362ms 204 
2020-06-17 11:34:57,736 INFO - CORS policy execution successful.
2020-06-17 11:34:57,739 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:34:57,741 INFO - CORS policy execution successful.
2020-06-17 11:34:57,742 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:34:57,745 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:57,745 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:34:57,747 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:57,749 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:34:57,751 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:34:57,753 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:57,754 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:34:57,757 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:34:57,760 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:34:57,762 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:34:57,762 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:34:57,768 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:34:57,772 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:34:57,830 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:57,851 INFO - Executed DbCommand (77ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:57,934 INFO - Executed DbCommand (72ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:57,953 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 196.6984ms.
2020-06-17 11:34:57,953 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:34:57,954 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:34:57,958 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 204.5349ms
2020-06-17 11:34:57,960 INFO - Request finished in 236.1242ms 200 application/json; charset=utf-8
2020-06-17 11:34:57,968 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:34:57,983 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 213.3884ms.
2020-06-17 11:34:57,984 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:34:57,986 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:34:57,989 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 224.9271ms
2020-06-17 11:34:57,991 INFO - Request finished in 258.0108ms 200 application/json; charset=utf-8
2020-06-17 11:35:30,724 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:35:30,727 INFO - CORS policy execution successful.
2020-06-17 11:35:30,735 INFO - Request finished in 11.7971ms 204 
2020-06-17 11:35:30,754 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:35:30,756 INFO - CORS policy execution successful.
2020-06-17 11:35:30,782 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:35:30,786 INFO - CORS policy execution successful.
2020-06-17 11:35:30,792 INFO - Request finished in 9.2802ms 204 
2020-06-17 11:35:30,806 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:35:30,808 INFO - CORS policy execution successful.
2020-06-17 11:35:32,049 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:35:32,137 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:35:32,190 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:35:32,256 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:35:32,268 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:35:32,305 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:35:32,310 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:35:32,319 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:35:32,324 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:35:32,326 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:35:32,338 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:35:32,353 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:35:32,362 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:35:32,375 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:35:32,509 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:35:32,616 INFO - Executed DbCommand (102ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:35:32,776 INFO - Executed DbCommand (160ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:35:32,886 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 480.6733ms.
2020-06-17 11:35:32,886 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:35:32,893 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:35:32,901 INFO - Executed DbCommand (112ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:35:32,924 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 576.1015ms
2020-06-17 11:35:33,318 INFO - Request finished in 2132.3078ms 200 application/json; charset=utf-8
2020-06-17 11:35:33,337 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 975.0671ms.
2020-06-17 11:35:33,337 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:35:33,347 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:35:33,356 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1033.1221ms
2020-06-17 11:35:33,358 INFO - Request finished in 2620.4845ms 200 application/json; charset=utf-8
2020-06-17 11:35:53,317 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:35:53,320 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:35:53,322 INFO - CORS policy execution successful.
2020-06-17 11:35:53,324 INFO - CORS policy execution successful.
2020-06-17 11:35:53,328 INFO - Request finished in 172.7009ms 204 
2020-06-17 11:35:53,343 INFO - Request finished in 373.1256ms 204 
2020-06-17 11:35:53,345 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:35:53,347 INFO - CORS policy execution successful.
2020-06-17 11:35:53,354 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:35:53,354 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:35:53,356 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:35:53,358 INFO - CORS policy execution successful.
2020-06-17 11:35:53,359 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:35:53,363 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:35:53,385 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:35:53,386 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:35:53,388 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:35:53,391 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:35:53,421 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:35:53,424 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:35:53,434 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:35:53,435 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:35:53,439 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:35:53,441 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:35:53,497 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:35:53,543 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:35:53,612 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:35:53,780 INFO - Executed DbCommand (212ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:35:53,785 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 394.1635ms.
2020-06-17 11:35:53,785 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:35:53,788 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:35:53,791 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 424.5548ms
2020-06-17 11:35:53,793 INFO - Request finished in 462.3914ms 200 application/json; charset=utf-8
2020-06-17 11:35:53,806 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 365.5448ms.
2020-06-17 11:35:53,806 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:35:53,808 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:35:53,812 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 375.6095ms
2020-06-17 11:35:53,815 INFO - Request finished in 461.2976ms 200 application/json; charset=utf-8
2020-06-17 11:36:56,716 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:36:56,723 INFO - CORS policy execution successful.
2020-06-17 11:36:56,727 INFO - Request finished in 12.0063ms 204 
2020-06-17 11:36:56,729 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:36:56,730 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:36:56,731 INFO - CORS policy execution successful.
2020-06-17 11:36:56,733 INFO - CORS policy execution successful.
2020-06-17 11:36:56,738 INFO - Request finished in 6.8252ms 204 
2020-06-17 11:36:56,742 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:36:56,743 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:36:56,745 INFO - CORS policy execution successful.
2020-06-17 11:36:56,746 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:36:56,747 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:36:56,755 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:36:56,756 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:36:56,757 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:36:56,759 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:36:56,849 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:36:56,938 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:36:56,951 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 192.7455ms.
2020-06-17 11:36:56,951 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:36:56,953 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:36:56,955 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 198.7895ms
2020-06-17 11:36:56,957 INFO - Request finished in 228.495ms 200 application/json; charset=utf-8
2020-06-17 11:36:57,999 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:36:58,024 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:36:58,066 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:36:58,069 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:36:58,070 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:36:58,071 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:36:58,072 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:36:58,187 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:36:58,321 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:36:58,335 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 263.022ms.
2020-06-17 11:36:58,335 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:36:58,337 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:36:58,340 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 268.7054ms
2020-06-17 11:36:58,342 INFO - Request finished in 1602.438ms 200 application/json; charset=utf-8
2020-06-17 11:37:55,010 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:37:55,015 INFO - CORS policy execution successful.
2020-06-17 11:37:55,018 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:37:55,022 INFO - CORS policy execution successful.
2020-06-17 11:37:55,024 INFO - Request finished in 12.7715ms 204 
2020-06-17 11:37:55,028 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:37:55,029 INFO - Request finished in 11.5947ms 204 
2020-06-17 11:37:55,031 INFO - CORS policy execution successful.
2020-06-17 11:37:55,043 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:37:55,044 INFO - CORS policy execution successful.
2020-06-17 11:37:55,047 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:37:55,048 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:37:55,070 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:37:55,073 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:37:55,078 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:37:55,080 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:37:55,081 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:37:55,082 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:37:55,083 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:37:55,084 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:37:55,085 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:37:55,086 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:37:55,096 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:37:55,097 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:37:55,168 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:37:55,261 INFO - Executed DbCommand (160ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:37:55,308 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:37:55,336 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 249.0871ms.
2020-06-17 11:37:55,337 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:37:55,343 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:37:55,349 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 264.9943ms
2020-06-17 11:37:55,351 INFO - Request finished in 325.4954ms 200 application/json; charset=utf-8
2020-06-17 11:37:55,389 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:37:55,430 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 340.9649ms.
2020-06-17 11:37:55,430 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:37:55,432 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:37:55,438 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 349.7949ms
2020-06-17 11:37:55,444 INFO - Request finished in 408.9963ms 200 application/json; charset=utf-8
2020-06-17 11:38:08,571 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:38:08,572 INFO - CORS policy execution successful.
2020-06-17 11:38:08,574 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:38:08,577 INFO - CORS policy execution successful.
2020-06-17 11:38:08,578 INFO - Request finished in 9.118ms 204 
2020-06-17 11:38:08,581 INFO - Request finished in 7.4143ms 204 
2020-06-17 11:38:08,584 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:38:08,585 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:38:08,587 INFO - CORS policy execution successful.
2020-06-17 11:38:08,588 INFO - CORS policy execution successful.
2020-06-17 11:38:09,327 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:38:09,329 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:38:09,330 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:09,331 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:09,334 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:09,335 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:09,336 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:38:09,337 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:38:09,338 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:38:09,339 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:38:09,339 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:38:09,426 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:38:09,477 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:38:09,480 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:38:09,554 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:09,569 INFO - Executed DbCommand (90ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:09,648 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:09,733 INFO - Executed DbCommand (125ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:09,755 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 392.7301ms.
2020-06-17 11:38:09,755 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:38:09,757 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:38:09,771 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 422.6385ms
2020-06-17 11:38:09,794 INFO - Request finished in 1189.7189ms 200 application/json; charset=utf-8
2020-06-17 11:38:09,808 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 380.2789ms.
2020-06-17 11:38:09,808 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:38:09,810 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:38:09,813 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 472.7177ms
2020-06-17 11:38:09,815 INFO - Request finished in 1232.1094ms 200 application/json; charset=utf-8
2020-06-17 11:38:27,681 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:38:27,685 INFO - CORS policy execution successful.
2020-06-17 11:38:27,690 INFO - Request finished in 8.1659ms 204 
2020-06-17 11:38:27,700 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:38:27,702 INFO - CORS policy execution successful.
2020-06-17 11:38:27,706 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:38:27,708 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:27,711 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:38:27,712 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:27,718 INFO - CORS policy execution successful.
2020-06-17 11:38:27,720 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:38:27,721 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:38:27,724 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:38:27,725 INFO - Request finished in 14.1956ms 204 
2020-06-17 11:38:27,727 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:38:27,742 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:38:27,745 INFO - CORS policy execution successful.
2020-06-17 11:38:27,750 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:38:27,752 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:27,757 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:27,760 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:38:27,760 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:38:27,762 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:38:27,769 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:38:27,808 INFO - Executed DbCommand (77ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:27,841 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:27,938 INFO - Executed DbCommand (94ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:27,940 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:27,978 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 249.2132ms.
2020-06-17 11:38:27,978 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:38:27,982 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 211.7469ms.
2020-06-17 11:38:27,982 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:38:27,983 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:38:27,986 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:38:27,994 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 265.0878ms
2020-06-17 11:38:28,004 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 232.1269ms
2020-06-17 11:38:28,006 INFO - Request finished in 308.1563ms 200 application/json; charset=utf-8
2020-06-17 11:38:28,021 INFO - Request finished in 278.7852ms 200 application/json; charset=utf-8
2020-06-17 11:38:51,729 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:38:51,831 INFO - CORS policy execution successful.
2020-06-17 11:38:51,915 INFO - Request finished in 184.3296ms 204 
2020-06-17 11:38:51,917 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:38:51,943 INFO - CORS policy execution successful.
2020-06-17 11:38:51,951 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:38:51,956 INFO - Request finished in 45.6647ms 204 
2020-06-17 11:38:51,958 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:38:51,960 INFO - CORS policy execution successful.
2020-06-17 11:38:51,963 INFO - CORS policy execution successful.
2020-06-17 11:38:51,969 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:38:51,971 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:38:51,974 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:51,976 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:51,978 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:51,980 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:38:51,982 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:38:51,983 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:38:51,983 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:38:51,985 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:38:51,985 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:38:51,989 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:38:51,991 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:38:51,993 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:38:52,063 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:52,077 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:52,143 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:52,160 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 171.8529ms.
2020-06-17 11:38:52,160 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:38:52,162 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:38:52,168 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 181.0482ms
2020-06-17 11:38:52,173 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:38:52,174 INFO - Request finished in 216.2719ms 200 application/json; charset=utf-8
2020-06-17 11:38:52,194 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 202.334ms.
2020-06-17 11:38:52,194 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:38:52,196 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:38:52,200 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 213.3962ms
2020-06-17 11:38:52,204 INFO - Request finished in 256.1309ms 200 application/json; charset=utf-8
2020-06-17 11:39:22,399 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:39:22,404 INFO - CORS policy execution successful.
2020-06-17 11:39:22,407 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:39:22,409 INFO - Request finished in 389.3272ms 204 
2020-06-17 11:39:22,411 INFO - CORS policy execution successful.
2020-06-17 11:39:22,418 INFO - Request finished in 5.5864ms 204 
2020-06-17 11:39:22,421 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:39:22,427 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:39:22,430 INFO - CORS policy execution successful.
2020-06-17 11:39:22,440 INFO - CORS policy execution successful.
2020-06-17 11:39:23,198 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:39:23,199 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:39:23,200 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:23,203 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:23,203 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:23,205 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:23,206 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:39:23,207 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:39:23,207 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:39:23,208 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:39:23,209 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:39:23,210 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:39:23,211 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:39:23,213 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:39:23,285 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:23,292 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:23,372 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:23,407 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:23,413 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 203.0169ms.
2020-06-17 11:39:23,413 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:39:23,415 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:39:23,420 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 211.8725ms
2020-06-17 11:39:23,423 INFO - Request finished in 1004.2594ms 200 application/json; charset=utf-8
2020-06-17 11:39:23,435 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 223.8908ms.
2020-06-17 11:39:23,435 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:39:23,437 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:39:23,440 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 231.211ms
2020-06-17 11:39:23,442 INFO - Request finished in 1022.8858ms 200 application/json; charset=utf-8
2020-06-17 11:39:39,070 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:39:39,081 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:39:39,089 INFO - CORS policy execution successful.
2020-06-17 11:39:39,107 INFO - CORS policy execution successful.
2020-06-17 11:39:39,113 INFO - Request finished in 429.8251ms 204 
2020-06-17 11:39:39,114 INFO - Request finished in 286.3188ms 204 
2020-06-17 11:39:39,155 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:39:39,157 INFO - CORS policy execution successful.
2020-06-17 11:39:39,161 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:39:39,163 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:39:39,165 INFO - CORS policy execution successful.
2020-06-17 11:39:39,180 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:39,184 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:39,186 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:39:39,188 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:39:39,190 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:39:39,190 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:39,192 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:39:39,194 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:39,196 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:39:39,226 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:39:39,227 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:39:39,252 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:39:39,260 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:39:39,313 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:39,341 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:39,546 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:39,895 INFO - Executed DbCommand (77ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:40,032 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 557.4935ms.
2020-06-17 11:39:40,032 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:39:40,207 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:39:40,236 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 949.7143ms.
2020-06-17 11:39:40,236 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:39:40,244 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:39:40,247 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1048.7859ms
2020-06-17 11:39:40,256 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 1020.6263ms
2020-06-17 11:39:40,258 INFO - Request finished in 1138.0516ms 200 application/json; charset=utf-8
2020-06-17 11:39:40,290 INFO - Request finished in 1099.6128ms 200 application/json; charset=utf-8
2020-06-17 11:39:54,414 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:39:54,416 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:39:54,419 INFO - CORS policy execution successful.
2020-06-17 11:39:54,434 INFO - CORS policy execution successful.
2020-06-17 11:39:54,448 INFO - Request finished in 375.2739ms 204 
2020-06-17 11:39:54,482 INFO - Request finished in 295.4427ms 204 
2020-06-17 11:39:54,492 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:39:54,495 INFO - CORS policy execution successful.
2020-06-17 11:39:54,499 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:39:54,508 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:39:54,509 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:54,511 INFO - CORS policy execution successful.
2020-06-17 11:39:54,512 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:54,519 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:39:54,519 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:39:54,523 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:39:54,531 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:39:54,603 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:54,689 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:54,713 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 188.4843ms.
2020-06-17 11:39:54,713 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:39:54,717 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:39:54,729 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 199.5534ms
2020-06-17 11:39:54,741 INFO - Request finished in 253.3601ms 200 application/json; charset=utf-8
2020-06-17 11:39:55,298 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:39:55,304 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:55,307 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:39:55,313 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:39:55,314 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:39:55,316 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:39:55,319 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:39:55,392 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:55,475 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:39:55,492 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 173.4511ms.
2020-06-17 11:39:55,492 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:39:55,493 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:39:55,497 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 180.455ms
2020-06-17 11:39:55,499 INFO - Request finished in 1000.3641ms 200 application/json; charset=utf-8
2020-06-17 11:40:05,065 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:40:05,070 INFO - CORS policy execution successful.
2020-06-17 11:40:05,075 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:40:05,081 INFO - Request finished in 305.1432ms 204 
2020-06-17 11:40:05,088 INFO - CORS policy execution successful.
2020-06-17 11:40:05,095 INFO - Request finished in 21.4422ms 204 
2020-06-17 11:40:05,099 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:40:05,101 INFO - CORS policy execution successful.
2020-06-17 11:40:05,102 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:40:05,104 INFO - CORS policy execution successful.
2020-06-17 11:40:05,106 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:40:05,113 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:05,114 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:40:05,116 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:05,117 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:05,120 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:05,121 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:40:05,123 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:40:05,124 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:40:05,127 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:40:05,130 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:40:05,132 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:40:05,134 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:40:05,137 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:40:05,207 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:05,219 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:05,293 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:05,311 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:05,312 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 177.3588ms.
2020-06-17 11:40:05,312 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:40:05,314 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:40:05,321 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 195.5497ms
2020-06-17 11:40:05,323 INFO - Request finished in 230.0618ms 200 application/json; charset=utf-8
2020-06-17 11:40:05,340 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 205.9004ms.
2020-06-17 11:40:05,340 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:40:05,346 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:40:05,354 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 221.7015ms
2020-06-17 11:40:05,355 INFO - Request finished in 253.8977ms 200 application/json; charset=utf-8
2020-06-17 11:40:16,458 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:40:16,460 INFO - CORS policy execution successful.
2020-06-17 11:40:16,472 INFO - Request finished in 9.3501ms 204 
2020-06-17 11:40:16,503 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:40:16,637 INFO - CORS policy execution successful.
2020-06-17 11:40:16,667 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:40:16,670 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:16,672 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:16,677 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:40:16,677 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:40:16,714 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:40:16,720 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:40:16,828 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:17,311 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:40:17,315 INFO - CORS policy execution successful.
2020-06-17 11:40:17,320 INFO - Request finished in 6.463ms 204 
2020-06-17 11:40:17,322 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:40:17,327 INFO - CORS policy execution successful.
2020-06-17 11:40:17,335 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:40:17,338 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:17,342 INFO - Executed DbCommand (79ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:17,344 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:17,346 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:40:17,352 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:40:17,354 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:40:17,357 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:40:17,376 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 659.8738ms.
2020-06-17 11:40:17,376 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:40:17,378 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:40:17,383 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 701.2191ms
2020-06-17 11:40:17,385 INFO - Request finished in 910.8168ms 200 application/json; charset=utf-8
2020-06-17 11:40:17,424 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:17,601 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:17,662 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 305.567ms.
2020-06-17 11:40:17,662 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:40:17,670 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:40:17,677 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 325.8462ms
2020-06-17 11:40:17,679 INFO - Request finished in 357.2713ms 200 application/json; charset=utf-8
2020-06-17 11:40:53,084 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:40:53,093 INFO - CORS policy execution successful.
2020-06-17 11:40:53,100 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:40:53,104 INFO - Request finished in 15.8262ms 204 
2020-06-17 11:40:53,213 INFO - CORS policy execution successful.
2020-06-17 11:40:53,250 INFO - Request finished in 124.6938ms 204 
2020-06-17 11:40:53,254 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:40:53,258 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:40:53,261 INFO - CORS policy execution successful.
2020-06-17 11:40:53,284 INFO - CORS policy execution successful.
2020-06-17 11:40:53,288 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:40:53,288 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:40:53,290 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:53,294 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:53,295 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:53,297 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:40:53,298 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:40:53,300 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:40:53,300 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:40:53,300 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:40:53,302 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:40:53,303 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:40:53,304 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:40:53,326 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:40:53,400 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:53,413 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:53,497 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:53,509 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:40:53,519 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 215.5125ms.
2020-06-17 11:40:53,519 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:40:53,521 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:40:53,529 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 223.5012ms
2020-06-17 11:40:53,531 INFO - Request finished in 278.8278ms 200 application/json; charset=utf-8
2020-06-17 11:40:53,542 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 230.8598ms.
2020-06-17 11:40:53,543 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:40:53,545 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:40:53,548 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 246.3298ms
2020-06-17 11:40:53,550 INFO - Request finished in 298.1104ms 200 application/json; charset=utf-8
2020-06-17 11:42:32,233 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:42:32,239 INFO - CORS policy execution successful.
2020-06-17 11:42:32,243 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:42:32,246 INFO - Request finished in 13.982ms 204 
2020-06-17 11:42:32,246 INFO - CORS policy execution successful.
2020-06-17 11:42:32,248 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:42:32,250 INFO - CORS policy execution successful.
2020-06-17 11:42:32,252 INFO - Request finished in 10.3978ms 204 
2020-06-17 11:42:32,256 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:42:32,257 INFO - CORS policy execution successful.
2020-06-17 11:42:33,159 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:42:33,160 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:42:33,162 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:42:33,163 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:42:33,164 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:42:33,186 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:42:33,187 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:42:33,188 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:42:33,188 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:42:33,189 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:42:33,190 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:42:33,191 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:42:33,192 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:42:33,213 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:42:33,284 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:42:33,291 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:42:33,368 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:42:33,382 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 189.4444ms.
2020-06-17 11:42:33,382 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:42:33,383 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:42:33,385 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 195.4842ms
2020-06-17 11:42:33,387 INFO - Request finished in 1139.8037ms 200 application/json; charset=utf-8
2020-06-17 11:42:33,389 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:42:33,404 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 212.116ms.
2020-06-17 11:42:33,404 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:42:33,405 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:42:33,408 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 218.5814ms
2020-06-17 11:42:33,410 INFO - Request finished in 1156.4226ms 200 application/json; charset=utf-8
2020-06-17 11:42:59,522 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:42:59,534 INFO - CORS policy execution successful.
2020-06-17 11:42:59,540 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:42:59,548 INFO - Request finished in 20.0451ms 204 
2020-06-17 11:42:59,550 INFO - CORS policy execution successful.
2020-06-17 11:42:59,554 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:42:59,556 INFO - Request finished in 19.7234ms 204 
2020-06-17 11:42:59,569 INFO - CORS policy execution successful.
2020-06-17 11:42:59,573 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:42:59,574 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:42:59,575 INFO - CORS policy execution successful.
2020-06-17 11:42:59,576 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:42:59,578 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:42:59,580 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:42:59,602 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:42:59,603 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:42:59,603 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:42:59,605 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:42:59,607 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:42:59,609 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:42:59,612 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:42:59,612 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:42:59,638 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:42:59,639 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:42:59,707 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:42:59,716 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:42:59,793 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:42:59,808 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 169.1756ms.
2020-06-17 11:42:59,808 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:42:59,812 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:42:59,818 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 201.9895ms
2020-06-17 11:42:59,821 INFO - Request finished in 248.3064ms 200 application/json; charset=utf-8
2020-06-17 11:42:59,840 INFO - Executed DbCommand (77ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:42:59,856 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 248.2574ms.
2020-06-17 11:42:59,856 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:42:59,858 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:42:59,860 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 255.7015ms
2020-06-17 11:42:59,862 INFO - Request finished in 310.7557ms 200 application/json; charset=utf-8
2020-06-17 11:43:10,575 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:43:10,576 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:43:10,577 INFO - CORS policy execution successful.
2020-06-17 11:43:10,579 INFO - CORS policy execution successful.
2020-06-17 11:43:10,582 INFO - Request finished in 7.5701ms 204 
2020-06-17 11:43:10,584 INFO - Request finished in 5.232ms 204 
2020-06-17 11:43:10,586 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:43:10,589 INFO - CORS policy execution successful.
2020-06-17 11:43:10,590 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:43:10,592 INFO - CORS policy execution successful.
2020-06-17 11:43:10,593 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:43:10,597 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:10,601 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:43:10,602 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:10,604 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:10,606 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:10,607 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:43:10,608 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:43:10,608 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:43:10,609 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:43:10,610 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:43:10,611 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:43:10,613 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:43:10,616 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:43:10,682 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:10,700 INFO - Executed DbCommand (79ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:10,790 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:10,801 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:10,808 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 195.4843ms.
2020-06-17 11:43:10,808 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:43:10,810 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:43:10,813 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 203.6417ms
2020-06-17 11:43:10,815 INFO - Request finished in 230.5278ms 200 application/json; charset=utf-8
2020-06-17 11:43:10,823 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 210.2433ms.
2020-06-17 11:43:10,823 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:43:10,825 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:43:10,829 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 217.4219ms
2020-06-17 11:43:10,830 INFO - Request finished in 241.2711ms 200 application/json; charset=utf-8
2020-06-17 11:43:28,099 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:43:28,100 INFO - CORS policy execution successful.
2020-06-17 11:43:28,103 INFO - Request finished in 3.7732ms 204 
2020-06-17 11:43:28,105 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:43:28,108 INFO - CORS policy execution successful.
2020-06-17 11:43:28,112 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:43:28,114 INFO - CORS policy execution successful.
2020-06-17 11:43:28,115 INFO - Request finished in 10.0774ms 204 
2020-06-17 11:43:28,117 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:43:28,123 INFO - CORS policy execution successful.
2020-06-17 11:43:29,282 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:43:29,310 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:43:29,319 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:29,325 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:29,331 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:29,334 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:29,340 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:43:29,341 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:43:29,343 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:43:29,344 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:43:29,345 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:43:29,347 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:43:29,348 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:43:29,372 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:43:29,442 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:29,452 INFO - Executed DbCommand (79ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:29,517 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:29,533 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 185.0638ms.
2020-06-17 11:43:29,533 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:43:29,534 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:43:29,542 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 191.5789ms
2020-06-17 11:43:29,543 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:29,544 INFO - Request finished in 1427.5314ms 200 application/json; charset=utf-8
2020-06-17 11:43:29,565 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 217.1443ms.
2020-06-17 11:43:29,565 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:43:29,567 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:43:29,569 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 226.7799ms
2020-06-17 11:43:29,571 INFO - Request finished in 1463.1578ms 200 application/json; charset=utf-8
2020-06-17 11:43:30,765 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:43:30,766 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:43:30,770 INFO - CORS policy execution successful.
2020-06-17 11:43:30,774 INFO - CORS policy execution successful.
2020-06-17 11:43:30,832 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:43:30,833 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:43:30,834 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:30,836 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:30,845 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:30,849 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:30,851 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:43:30,852 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:43:30,852 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:43:30,853 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:43:30,854 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:43:30,865 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:43:30,866 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:43:30,881 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:43:30,946 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:30,951 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:31,028 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:31,036 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:31,049 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 180.7953ms.
2020-06-17 11:43:31,049 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:43:31,052 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:43:31,061 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 200.8787ms
2020-06-17 11:43:31,067 INFO - Request finished in 300.9514ms 200 application/json; charset=utf-8
2020-06-17 11:43:31,081 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 210.5318ms.
2020-06-17 11:43:31,081 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:43:31,083 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:43:31,086 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 232.8254ms
2020-06-17 11:43:31,089 INFO - Request finished in 328.2517ms 200 application/json; charset=utf-8
2020-06-17 11:43:52,021 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:43:52,022 INFO - CORS policy execution successful.
2020-06-17 11:43:52,026 INFO - Request finished in 3.5438ms 204 
2020-06-17 11:43:52,031 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:43:52,033 INFO - CORS policy execution successful.
2020-06-17 11:43:52,036 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:43:52,039 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:52,041 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:52,092 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:43:52,092 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:43:52,096 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:43:52,098 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:43:52,117 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:43:52,119 INFO - CORS policy execution successful.
2020-06-17 11:43:52,137 INFO - Request finished in 13.8405ms 204 
2020-06-17 11:43:52,142 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:43:52,143 INFO - CORS policy execution successful.
2020-06-17 11:43:52,148 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:43:52,150 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:52,152 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:43:52,156 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:43:52,157 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:43:52,158 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:43:52,160 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:43:52,184 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:52,229 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:52,312 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:52,319 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:43:52,343 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 242.0034ms.
2020-06-17 11:43:52,343 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:43:52,381 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:43:52,383 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 214.3084ms.
2020-06-17 11:43:52,383 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:43:52,385 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 290.6564ms
2020-06-17 11:43:52,387 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:43:52,411 INFO - Request finished in 360.2963ms 200 application/json; charset=utf-8
2020-06-17 11:43:52,420 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 255.6293ms
2020-06-17 11:43:52,422 INFO - Request finished in 288.7272ms 200 application/json; charset=utf-8
2020-06-17 11:44:04,723 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:44:04,724 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:44:04,726 INFO - CORS policy execution successful.
2020-06-17 11:44:04,732 INFO - CORS policy execution successful.
2020-06-17 11:44:04,739 INFO - Request finished in 8.3829ms 204 
2020-06-17 11:44:04,775 INFO - Request finished in 13.7136ms 204 
2020-06-17 11:44:04,779 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:44:04,784 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:44:04,786 INFO - CORS policy execution successful.
2020-06-17 11:44:04,787 INFO - CORS policy execution successful.
2020-06-17 11:44:04,789 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:44:04,791 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:44:04,794 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:44:04,795 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:44:04,797 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:44:04,801 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:44:04,802 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:44:04,804 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:44:04,804 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:44:04,806 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:44:04,807 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:44:04,812 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:44:04,814 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:44:04,826 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:44:04,909 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:44:04,919 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:44:05,011 INFO - Executed DbCommand (73ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:44:05,033 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 221.5708ms.
2020-06-17 11:44:05,033 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:44:05,035 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:44:05,040 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 233.9639ms
2020-06-17 11:44:05,043 INFO - Request finished in 265.1537ms 200 application/json; charset=utf-8
2020-06-17 11:44:05,081 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:44:05,104 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 289.2175ms.
2020-06-17 11:44:05,104 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:44:05,109 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:44:05,117 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 303.9904ms
2020-06-17 11:44:05,120 INFO - Request finished in 341.617ms 200 application/json; charset=utf-8
2020-06-17 11:44:10,194 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:44:10,198 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:44:10,240 INFO - CORS policy execution successful.
2020-06-17 11:44:10,264 INFO - CORS policy execution successful.
2020-06-17 11:44:10,278 INFO - Request finished in 60.8279ms 204 
2020-06-17 11:44:10,294 INFO - Request finished in 75.3703ms 204 
2020-06-17 11:44:10,297 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:44:10,297 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:44:10,299 INFO - CORS policy execution successful.
2020-06-17 11:44:10,305 INFO - CORS policy execution successful.
2020-06-17 11:44:11,347 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:44:11,348 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:44:11,351 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:44:11,356 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:44:11,358 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:44:11,359 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:44:11,360 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:44:11,361 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:44:11,362 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:44:11,363 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:44:11,363 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:44:11,365 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:44:11,366 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:44:11,401 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:44:11,476 INFO - Executed DbCommand (67ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:44:11,481 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:44:11,558 INFO - Executed DbCommand (64ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:44:11,638 INFO - Executed DbCommand (141ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:44:11,690 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 324.3074ms.
2020-06-17 11:44:11,691 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:44:11,694 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:44:11,704 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 333.6075ms.
2020-06-17 11:44:11,706 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:44:11,707 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 337.0903ms
2020-06-17 11:44:11,709 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:44:11,710 INFO - Request finished in 1412.8468ms 200 application/json; charset=utf-8
2020-06-17 11:44:11,728 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 356.3062ms
2020-06-17 11:44:11,731 INFO - Request finished in 1433.2023ms 200 application/json; charset=utf-8
2020-06-17 11:45:21,163 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:45:21,166 INFO - CORS policy execution successful.
2020-06-17 11:45:21,172 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:45:21,179 INFO - Request finished in 6.2964ms 204 
2020-06-17 11:45:21,181 INFO - CORS policy execution successful.
2020-06-17 11:45:21,199 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:45:21,211 INFO - Request finished in 17.1935ms 204 
2020-06-17 11:45:21,213 INFO - CORS policy execution successful.
2020-06-17 11:45:21,233 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:45:21,289 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:21,292 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:45:21,297 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:21,299 INFO - CORS policy execution successful.
2020-06-17 11:45:21,303 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:45:21,303 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:45:21,346 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:45:21,368 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:45:21,449 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:21,539 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:21,558 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 207.1133ms.
2020-06-17 11:45:21,558 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:45:21,559 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:45:21,562 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 257.1447ms
2020-06-17 11:45:21,563 INFO - Request finished in 382.0575ms 200 application/json; charset=utf-8
2020-06-17 11:45:22,196 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:45:22,198 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:22,199 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:22,201 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:45:22,201 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:45:22,203 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:45:22,204 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:45:22,282 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:22,374 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:22,392 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 188.0203ms.
2020-06-17 11:45:22,392 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:45:22,394 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:45:22,397 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 194.392ms
2020-06-17 11:45:22,399 INFO - Request finished in 1132.2456ms 200 application/json; charset=utf-8
2020-06-17 11:45:36,871 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:45:36,972 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:45:36,980 INFO - CORS policy execution successful.
2020-06-17 11:45:37,020 INFO - CORS policy execution successful.
2020-06-17 11:45:37,036 INFO - Request finished in 555.0201ms 204 
2020-06-17 11:45:37,068 INFO - Request finished in 423.8687ms 204 
2020-06-17 11:45:37,074 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:45:37,078 INFO - CORS policy execution successful.
2020-06-17 11:45:37,081 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:45:37,084 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:45:37,088 INFO - CORS policy execution successful.
2020-06-17 11:45:37,090 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:37,095 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:37,099 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:45:37,103 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:45:37,104 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:45:37,105 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:37,115 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:45:37,119 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:37,127 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:45:37,131 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:45:37,134 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:45:37,145 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:45:37,155 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:45:37,213 INFO - Executed DbCommand (77ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:37,229 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:37,310 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:37,312 INFO - Executed DbCommand (71ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:37,330 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 210.6612ms.
2020-06-17 11:45:37,331 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:45:37,332 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 183.5651ms.
2020-06-17 11:45:37,333 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:45:37,333 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:45:37,336 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:45:37,340 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 232.283ms
2020-06-17 11:45:37,344 INFO - Request finished in 312.5936ms 200 application/json; charset=utf-8
2020-06-17 11:45:37,350 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 210.2923ms
2020-06-17 11:45:37,352 INFO - Request finished in 271.3019ms 200 application/json; charset=utf-8
2020-06-17 11:45:52,675 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:45:52,679 INFO - CORS policy execution successful.
2020-06-17 11:45:52,684 INFO - Request finished in 17.499ms 204 
2020-06-17 11:45:52,687 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:45:52,690 INFO - CORS policy execution successful.
2020-06-17 11:45:52,693 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:45:52,695 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:52,698 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:52,701 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:45:52,701 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:45:52,704 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:45:52,706 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:45:52,707 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:45:52,710 INFO - CORS policy execution successful.
2020-06-17 11:45:52,715 INFO - Request finished in 6.9914ms 204 
2020-06-17 11:45:52,721 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:45:52,723 INFO - CORS policy execution successful.
2020-06-17 11:45:52,777 INFO - Executed DbCommand (66ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:52,853 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:52,871 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 163.6437ms.
2020-06-17 11:45:52,871 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:45:52,872 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:45:52,875 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 171.8451ms
2020-06-17 11:45:52,877 INFO - Request finished in 190.4564ms 200 application/json; charset=utf-8
2020-06-17 11:45:53,330 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:45:53,334 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:53,336 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:45:53,339 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:45:53,339 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:45:53,341 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:45:53,342 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:45:53,438 INFO - Executed DbCommand (80ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:53,519 INFO - Executed DbCommand (65ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:45:53,540 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 197.6239ms.
2020-06-17 11:45:53,540 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:45:53,542 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:45:53,547 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 204.4532ms
2020-06-17 11:45:53,550 INFO - Request finished in 831.4546ms 200 application/json; charset=utf-8
2020-06-17 11:46:02,319 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:46:02,562 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:46:02,569 INFO - CORS policy execution successful.
2020-06-17 11:46:02,582 INFO - CORS policy execution successful.
2020-06-17 11:46:02,589 INFO - Request finished in 311.7664ms 204 
2020-06-17 11:46:02,614 INFO - Request finished in 321.9047ms 204 
2020-06-17 11:46:02,635 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 11:46:02,638 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 11:46:02,640 INFO - CORS policy execution successful.
2020-06-17 11:46:02,646 INFO - CORS policy execution successful.
2020-06-17 11:46:02,650 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:46:02,653 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 11:46:02,654 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:46:02,656 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:46:02,658 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:46:02,659 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 11:46:02,661 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:46:02,661 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:46:02,663 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 11:46:02,664 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 11:46:02,664 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 11:46:02,666 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 11:46:02,670 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:46:02,672 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 11:46:02,743 INFO - Executed DbCommand (68ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:46:02,761 INFO - Executed DbCommand (87ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:46:02,838 INFO - Executed DbCommand (69ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:46:02,879 INFO - Executed DbCommand (75ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 11:46:02,894 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 225.1699ms.
2020-06-17 11:46:02,894 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:46:02,907 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:46:02,912 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 249.6323ms
2020-06-17 11:46:02,922 INFO - Request finished in 309.1106ms 200 application/json; charset=utf-8
2020-06-17 11:46:02,924 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 250.2116ms.
2020-06-17 11:46:02,924 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 11:46:02,952 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 11:46:02,959 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 290.5928ms
2020-06-17 11:46:02,962 INFO - Request finished in 353.9825ms 200 application/json; charset=utf-8
2020-06-17 11:59:38,690 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-17 11:59:38,729 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 11:59:38,964 INFO - Request finished in 277.5201ms 200 text/html
2020-06-17 11:59:39,421 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-17 11:59:39,429 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 11:59:40,520 INFO - Request finished in 1108.0713ms 200 application/json;charset=utf-8
2020-06-17 12:02:01,902 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:02:01,908 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:02:01,920 INFO - CORS policy execution successful.
2020-06-17 12:02:01,921 INFO - CORS policy execution successful.
2020-06-17 12:02:01,926 INFO - Request finished in 18.7155ms 204 
2020-06-17 12:02:01,928 INFO - Request finished in 25.7433ms 204 
2020-06-17 12:02:01,933 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:02:01,937 INFO - CORS policy execution successful.
2020-06-17 12:02:01,939 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:02:01,942 INFO - CORS policy execution successful.
2020-06-17 12:02:03,896 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:02:03,897 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:02:03,903 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:02:03,904 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:02:03,908 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:02:03,909 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:02:04,746 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:02:04,747 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:02:04,760 INFO - Authorization failed.
2020-06-17 12:02:04,761 INFO - Authorization failed.
2020-06-17 12:02:04,762 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:02:04,763 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:02:04,767 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:02:04,768 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:02:04,778 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:02:04,779 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:02:04,780 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:02:04,781 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:02:04,784 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 33.5975ms
2020-06-17 12:02:04,785 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 33.6051ms
2020-06-17 12:02:04,793 INFO - Request finished in 2851.3996ms 401 
2020-06-17 12:02:04,800 INFO - Request finished in 2862.0876ms 401 
2020-06-17 12:02:17,971 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:02:17,972 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:02:17,974 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:02:17,976 INFO - Authorization failed.
2020-06-17 12:02:17,979 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:02:17,980 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:02:17,981 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:02:17,983 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:02:17,984 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 8.4148ms
2020-06-17 12:02:17,986 INFO - Request finished in 15.8111ms 401 
2020-06-17 12:03:18,096 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:03:18,101 INFO - CORS policy execution successful.
2020-06-17 12:03:18,114 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:03:18,118 INFO - CORS policy execution successful.
2020-06-17 12:03:18,119 INFO - Request finished in 22.6463ms 204 
2020-06-17 12:03:18,122 INFO - Request finished in 18.8999ms 204 
2020-06-17 12:03:18,127 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:03:18,132 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:03:18,133 INFO - CORS policy execution successful.
2020-06-17 12:03:18,135 INFO - CORS policy execution successful.
2020-06-17 12:03:18,137 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: No SecurityTokenValidator available for token: ""eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc5NjUzOTU1YjAzMzZlZTJiNjFlY2I4OGVhZTYzNzY2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTIzODQ1MjEsImV4cCI6MTU5MjM4ODEyMSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjpbImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9yZXNvdXJjZXMiLCJNYXN0cGVuV2ViQVBJIl0sImNsaWVudF9pZCI6Ik1hc3RwZW5XZWJBUElBUFAiLCJzdWIiOiIxIiwiYXV0aF90aW1lIjoxNTkyMzg0NTIxLCJpZHAiOiJsb2NhbCIsInNjb3BlIjpbIk1hc3RwZW5XZWJBUEkiXSwiYW1yIjpbInBhc3N3b3JkIl19.GIDDg398Dxzg-1DUty5U0tuTU6q4UN01YcfWnmRGut2hWCJorarsIAqX4O8gbFZTC0R3voB_ujb9H0yZzktvFHKyQt6FPDxf6bUn5bYPSVVZE-F0lg4gbsY1m4F0r-jiSGkbj_KFuVlkiA3EYiNER1JvlXdnHoJm4EQ4iMBrGsOhzv0RBTAh9pPikZbIxlVBD44WEk6W4Tp730aXmsM35o_xf-7W95SIAK3mjPjW9ejEX0aftW11GlOuGFNlzjXSA06p_i8nXaCCvAA1ZwOoiFSCEJMpSBJQIYzyZeybbWnt9PMIzc9pe_TY4tgKvsJPO97I4M3XfMRqRPvp737lCw
2020-06-17 12:03:18,138 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: No SecurityTokenValidator available for token: ""eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc5NjUzOTU1YjAzMzZlZTJiNjFlY2I4OGVhZTYzNzY2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTIzODQ1MjEsImV4cCI6MTU5MjM4ODEyMSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjpbImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9yZXNvdXJjZXMiLCJNYXN0cGVuV2ViQVBJIl0sImNsaWVudF9pZCI6Ik1hc3RwZW5XZWJBUElBUFAiLCJzdWIiOiIxIiwiYXV0aF90aW1lIjoxNTkyMzg0NTIxLCJpZHAiOiJsb2NhbCIsInNjb3BlIjpbIk1hc3RwZW5XZWJBUEkiXSwiYW1yIjpbInBhc3N3b3JkIl19.GIDDg398Dxzg-1DUty5U0tuTU6q4UN01YcfWnmRGut2hWCJorarsIAqX4O8gbFZTC0R3voB_ujb9H0yZzktvFHKyQt6FPDxf6bUn5bYPSVVZE-F0lg4gbsY1m4F0r-jiSGkbj_KFuVlkiA3EYiNER1JvlXdnHoJm4EQ4iMBrGsOhzv0RBTAh9pPikZbIxlVBD44WEk6W4Tp730aXmsM35o_xf-7W95SIAK3mjPjW9ejEX0aftW11GlOuGFNlzjXSA06p_i8nXaCCvAA1ZwOoiFSCEJMpSBJQIYzyZeybbWnt9PMIzc9pe_TY4tgKvsJPO97I4M3XfMRqRPvp737lCw
2020-06-17 12:03:18,139 INFO - Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token: ""eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc5NjUzOTU1YjAzMzZlZTJiNjFlY2I4OGVhZTYzNzY2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTIzODQ1MjEsImV4cCI6MTU5MjM4ODEyMSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjpbImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9yZXNvdXJjZXMiLCJNYXN0cGVuV2ViQVBJIl0sImNsaWVudF9pZCI6Ik1hc3RwZW5XZWJBUElBUFAiLCJzdWIiOiIxIiwiYXV0aF90aW1lIjoxNTkyMzg0NTIxLCJpZHAiOiJsb2NhbCIsInNjb3BlIjpbIk1hc3RwZW5XZWJBUEkiXSwiYW1yIjpbInBhc3N3b3JkIl19.GIDDg398Dxzg-1DUty5U0tuTU6q4UN01YcfWnmRGut2hWCJorarsIAqX4O8gbFZTC0R3voB_ujb9H0yZzktvFHKyQt6FPDxf6bUn5bYPSVVZE-F0lg4gbsY1m4F0r-jiSGkbj_KFuVlkiA3EYiNER1JvlXdnHoJm4EQ4iMBrGsOhzv0RBTAh9pPikZbIxlVBD44WEk6W4Tp730aXmsM35o_xf-7W95SIAK3mjPjW9ejEX0aftW11GlOuGFNlzjXSA06p_i8nXaCCvAA1ZwOoiFSCEJMpSBJQIYzyZeybbWnt9PMIzc9pe_TY4tgKvsJPO97I4M3XfMRqRPvp737lCw
2020-06-17 12:03:18,141 INFO - Bearer was not authenticated. Failure message: No SecurityTokenValidator available for token: ""eyJhbGciOiJSUzI1NiIsImtpZCI6Ijc5NjUzOTU1YjAzMzZlZTJiNjFlY2I4OGVhZTYzNzY2IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTIzODQ1MjEsImV4cCI6MTU5MjM4ODEyMSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjpbImh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9yZXNvdXJjZXMiLCJNYXN0cGVuV2ViQVBJIl0sImNsaWVudF9pZCI6Ik1hc3RwZW5XZWJBUElBUFAiLCJzdWIiOiIxIiwiYXV0aF90aW1lIjoxNTkyMzg0NTIxLCJpZHAiOiJsb2NhbCIsInNjb3BlIjpbIk1hc3RwZW5XZWJBUEkiXSwiYW1yIjpbInBhc3N3b3JkIl19.GIDDg398Dxzg-1DUty5U0tuTU6q4UN01YcfWnmRGut2hWCJorarsIAqX4O8gbFZTC0R3voB_ujb9H0yZzktvFHKyQt6FPDxf6bUn5bYPSVVZE-F0lg4gbsY1m4F0r-jiSGkbj_KFuVlkiA3EYiNER1JvlXdnHoJm4EQ4iMBrGsOhzv0RBTAh9pPikZbIxlVBD44WEk6W4Tp730aXmsM35o_xf-7W95SIAK3mjPjW9ejEX0aftW11GlOuGFNlzjXSA06p_i8nXaCCvAA1ZwOoiFSCEJMpSBJQIYzyZeybbWnt9PMIzc9pe_TY4tgKvsJPO97I4M3XfMRqRPvp737lCw
2020-06-17 12:03:18,146 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:03:18,147 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:03:18,150 INFO - Authorization failed.
2020-06-17 12:03:18,151 INFO - Authorization failed.
2020-06-17 12:03:18,153 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:03:18,154 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:03:18,158 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:03:18,158 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:03:18,160 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:03:18,162 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:03:18,166 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:03:18,166 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:03:18,168 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 19.1033ms
2020-06-17 12:03:18,170 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 18.9383ms
2020-06-17 12:03:18,177 INFO - Request finished in 46.1064ms 401 
2020-06-17 12:03:18,183 INFO - Request finished in 48.8658ms 401 
2020-06-17 12:03:22,158 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:03:22,161 INFO - CORS policy execution successful.
2020-06-17 12:03:22,162 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:03:22,164 INFO - CORS policy execution successful.
2020-06-17 12:03:22,166 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:03:22,169 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:03:22,169 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:03:22,171 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:03:22,172 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:03:22,173 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:03:22,174 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:03:22,178 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:03:22,180 INFO - Authorization failed.
2020-06-17 12:03:22,182 INFO - Authorization failed.
2020-06-17 12:03:22,184 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:03:22,185 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:03:22,187 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:03:22,188 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:03:22,192 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:03:22,194 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:03:22,200 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:03:22,210 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:03:22,250 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 25.8017ms
2020-06-17 12:03:22,280 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 34.0586ms
2020-06-17 12:03:22,286 INFO - Request finished in 124.2068ms 401 
2020-06-17 12:03:22,288 INFO - Request finished in 127.4279ms 401 
2020-06-17 12:03:42,842 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:03:42,844 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:03:42,849 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:03:42,851 INFO - Authorization failed.
2020-06-17 12:03:42,852 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:03:42,853 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:03:42,855 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:03:42,857 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:03:42,858 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 7.5858ms
2020-06-17 12:03:42,860 INFO - Request finished in 19.2703ms 401 
2020-06-17 12:04:36,217 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:04:36,221 INFO - CORS policy execution successful.
2020-06-17 12:04:36,229 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:04:36,233 INFO - Request finished in 14.4519ms 204 
2020-06-17 12:04:36,235 INFO - CORS policy execution successful.
2020-06-17 12:04:36,244 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:04:36,247 INFO - CORS policy execution successful.
2020-06-17 12:04:36,250 INFO - Request finished in 24.0852ms 204 
2020-06-17 12:04:36,277 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:04:36,279 INFO - CORS policy execution successful.
2020-06-17 12:04:37,326 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:04:37,328 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:04:37,330 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:04:37,332 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:04:37,335 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:04:37,338 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:04:37,340 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:04:37,342 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:04:37,344 INFO - Authorization failed.
2020-06-17 12:04:37,347 INFO - Authorization failed.
2020-06-17 12:04:37,349 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:04:37,351 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:04:37,353 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:04:37,355 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:04:37,357 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:04:37,358 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:04:37,359 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:04:37,360 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:04:37,361 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 19.2379ms
2020-06-17 12:04:37,362 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 17.6828ms
2020-06-17 12:04:37,364 INFO - Request finished in 1114.949ms 401 
2020-06-17 12:04:37,365 INFO - Request finished in 1129.3577ms 401 
2020-06-17 12:04:38,917 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:04:38,919 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:04:38,920 INFO - CORS policy execution successful.
2020-06-17 12:04:38,922 INFO - CORS policy execution successful.
2020-06-17 12:04:38,926 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:04:38,926 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:04:38,928 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:04:38,929 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:04:38,930 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:04:38,931 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:04:38,933 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:04:38,934 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:04:38,935 INFO - Authorization failed.
2020-06-17 12:04:38,936 INFO - Authorization failed.
2020-06-17 12:04:38,940 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:04:38,941 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:04:38,942 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:04:38,943 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:04:38,944 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:04:38,946 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:04:38,947 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:04:38,948 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:04:38,950 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 14.3129ms
2020-06-17 12:04:38,951 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 15.2325ms
2020-06-17 12:04:38,956 INFO - Request finished in 34.7285ms 401 
2020-06-17 12:04:38,959 INFO - Request finished in 41.3883ms 401 
2020-06-17 12:05:16,307 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:05:16,307 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-17 12:05:16,307 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:05:16,328 INFO - CORS policy execution successful.
2020-06-17 12:05:16,330 INFO - CORS policy execution successful.
2020-06-17 12:05:16,357 INFO - Request finished in 54.1366ms 204 
2020-06-17 12:05:16,361 INFO - Request finished in 54.1478ms 204 
2020-06-17 12:05:16,372 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:05:16,384 INFO - CORS policy execution successful.
2020-06-17 12:05:16,406 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:05:16,417 INFO - CORS policy execution successful.
2020-06-17 12:05:16,421 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:05:17,138 INFO - Request finished in 567.1955ms 200 text/html
2020-06-17 12:05:17,456 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-17 12:05:17,534 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:05:18,591 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:05:18,592 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:05:18,606 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:05:18,606 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:05:18,613 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:05:18,619 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:05:18,656 INFO - Request finished in 1279.5075ms 200 application/json;charset=utf-8
2020-06-17 12:05:19,308 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:05:19,309 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:05:19,337 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 12:05:19,337 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 12:05:19,347 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 12:05:19,352 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 12:05:20,699 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 12:05:20,702 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 12:05:20,940 WARN - The Include operation for navigation '[s].Site' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-17 12:05:21,357 WARN - The LINQ expression 'where ([Employee].ToEntity(null, null, null, null, null, [x_siteEmployee], null, [x_healthDeclaration]).ToEntity([x_siteEmployee.Site]).OrganizationId == __OrganizationId_1)' could not be translated and will be evaluated locally.
2020-06-17 12:05:21,371 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-17 12:05:22,525 INFO - Executed DbCommand (99ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:05:22,751 WARN - The LINQ expression 'where ([Employee].ToEntity(null, null, null, null, null, [x_siteEmployee], null, [x_healthDeclaration]).ToEntity([x_siteEmployee.Site]).OrganizationId == __OrganizationId_1)' could not be translated and will be evaluated locally.
2020-06-17 12:05:22,789 INFO - Executed DbCommand (78ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:05:22,852 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:05:22,989 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 3633.8309ms.
2020-06-17 12:05:22,990 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 12:05:23,005 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 12:05:23,006 INFO - Executed DbCommand (79ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:05:23,027 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 3673.2289ms.
2020-06-17 12:05:23,027 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 12:05:23,029 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 12:05:23,042 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 3727.227ms
2020-06-17 12:05:23,044 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 3727.227ms
2020-06-17 12:05:23,058 INFO - Request finished in 6690.2378ms 200 application/json; charset=utf-8
2020-06-17 12:05:23,124 INFO - Request finished in 6656.4374ms 200 application/json; charset=utf-8
2020-06-17 12:05:23,870 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:05:23,872 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:05:23,876 INFO - CORS policy execution successful.
2020-06-17 12:05:23,878 INFO - CORS policy execution successful.
2020-06-17 12:05:23,890 INFO - Request finished in 8.6483ms 204 
2020-06-17 12:05:23,891 INFO - Request finished in 17.0944ms 204 
2020-06-17 12:05:23,892 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:05:23,894 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=22&pageSize=10&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:05:23,895 INFO - CORS policy execution successful.
2020-06-17 12:05:23,898 INFO - CORS policy execution successful.
2020-06-17 12:05:23,902 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:05:23,904 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:05:23,905 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:05:23,907 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:05:23,909 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:05:23,910 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:05:23,913 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:05:23,914 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 12:05:23,915 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:05:23,915 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 12:05:23,920 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , False) - Validation state: Valid
2020-06-17 12:05:23,927 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (10, 1, 22, , True) - Validation state: Valid
2020-06-17 12:05:23,976 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 12:05:23,990 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 12:05:24,063 INFO - Executed DbCommand (73ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:05:24,178 INFO - Executed DbCommand (151ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:05:24,448 INFO - Executed DbCommand (262ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:05:24,453 INFO - Executed DbCommand (103ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:05:24,489 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 564.6001ms.
2020-06-17 12:05:24,489 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 12:05:24,515 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 12:05:24,546 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 601.495ms.
2020-06-17 12:05:24,546 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 12:05:24,653 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 621.5001ms
2020-06-17 12:05:24,689 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 12:05:24,699 INFO - Request finished in 763.2557ms 200 application/json; charset=utf-8
2020-06-17 12:05:24,756 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 783.7561ms
2020-06-17 12:05:24,759 INFO - Request finished in 869.1689ms 200 application/json; charset=utf-8
2020-06-17 12:15:06,943 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-17 12:15:07,060 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:15:07,758 INFO - Request finished in 882.518ms 200 text/html
2020-06-17 12:15:20,280 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-17 12:15:20,292 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:15:21,315 INFO - Request finished in 984.6906ms 200 application/json;charset=utf-8
2020-06-17 12:19:49,152 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:19:49,154 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:19:49,158 INFO - CORS policy execution successful.
2020-06-17 12:19:49,161 INFO - CORS policy execution successful.
2020-06-17 12:19:49,226 INFO - Request finished in 76.0622ms 204 
2020-06-17 12:19:49,242 INFO - Request finished in 48.51ms 204 
2020-06-17 12:19:49,258 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:19:49,270 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:19:49,272 INFO - CORS policy execution successful.
2020-06-17 12:19:49,277 INFO - CORS policy execution successful.
2020-06-17 12:19:50,943 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:19:50,949 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:19:50,956 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:19:50,958 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:19:50,968 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:19:50,972 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:19:51,819 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:19:51,819 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:19:51,833 INFO - Authorization failed.
2020-06-17 12:19:51,833 INFO - Authorization failed.
2020-06-17 12:19:51,835 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:19:51,836 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:19:51,841 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:19:51,842 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:19:51,852 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:19:51,853 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:19:51,854 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:19:51,855 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:19:51,858 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 36.3363ms
2020-06-17 12:19:51,860 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 36.3364ms
2020-06-17 12:19:51,865 INFO - Request finished in 2604.8566ms 401 
2020-06-17 12:19:51,866 INFO - Request finished in 2621.9738ms 401 
2020-06-17 12:20:07,642 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:20:07,643 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:20:07,645 INFO - CORS policy execution successful.
2020-06-17 12:20:07,646 INFO - CORS policy execution successful.
2020-06-17 12:20:07,651 INFO - Request finished in 5.9266ms 204 
2020-06-17 12:20:07,654 INFO - Request finished in 9.7567ms 204 
2020-06-17 12:20:07,656 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:20:07,661 INFO - CORS policy execution successful.
2020-06-17 12:20:07,662 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:20:07,664 INFO - CORS policy execution successful.
2020-06-17 12:20:07,666 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:20:07,668 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:20:07,668 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:20:07,671 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:20:07,672 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:20:07,674 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:20:07,677 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:20:07,677 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:20:07,679 INFO - Authorization failed.
2020-06-17 12:20:07,680 INFO - Authorization failed.
2020-06-17 12:20:07,683 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:20:07,684 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:20:07,685 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:20:07,687 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:20:07,688 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:20:07,689 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:20:07,691 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:20:07,692 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:20:07,693 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 14.1878ms
2020-06-17 12:20:07,694 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 15.3212ms
2020-06-17 12:20:07,697 INFO - Request finished in 40.9995ms 401 
2020-06-17 12:20:07,703 INFO - Request finished in 38.6949ms 401 
2020-06-17 12:20:30,842 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:20:30,851 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:20:30,852 INFO - CORS policy execution successful.
2020-06-17 12:20:30,853 INFO - CORS policy execution successful.
2020-06-17 12:20:30,856 INFO - Request finished in 13.4403ms 204 
2020-06-17 12:20:30,857 INFO - Request finished in 15.2277ms 204 
2020-06-17 12:20:30,864 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:20:30,866 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:20:30,871 INFO - CORS policy execution successful.
2020-06-17 12:20:30,873 INFO - CORS policy execution successful.
2020-06-17 12:20:30,875 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:20:30,877 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:20:30,878 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:20:30,880 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:20:30,882 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:20:30,884 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:20:30,885 INFO - Authorization failed.
2020-06-17 12:20:30,886 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:20:30,887 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:20:30,888 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:20:30,890 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:20:30,891 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:20:30,893 INFO - Authorization failed.
2020-06-17 12:20:30,895 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:20:30,896 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:20:30,899 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 13.5871ms
2020-06-17 12:20:30,899 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:20:30,902 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:20:30,903 INFO - Request finished in 43.2756ms 401 
2020-06-17 12:20:30,905 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:20:30,907 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 15.1804ms
2020-06-17 12:20:30,916 INFO - Request finished in 46.4916ms 401 
2020-06-17 12:20:40,206 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:20:40,207 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:20:40,209 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:20:40,211 INFO - Authorization failed.
2020-06-17 12:20:40,212 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:20:40,214 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:20:40,215 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:20:40,217 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:20:40,221 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 9.46ms
2020-06-17 12:20:40,223 INFO - Request finished in 16.9773ms 401 
2020-06-17 12:21:20,258 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:21:20,261 INFO - CORS policy execution successful.
2020-06-17 12:21:20,269 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:21:20,276 INFO - CORS policy execution successful.
2020-06-17 12:21:20,315 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:21:20,317 INFO - Request finished in 23.1673ms 204 
2020-06-17 12:21:20,325 INFO - Request finished in 64.604ms 204 
2020-06-17 12:21:20,334 INFO - CORS policy execution successful.
2020-06-17 12:21:20,347 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:21:20,349 INFO - CORS policy execution successful.
2020-06-17 12:21:21,166 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:21:21,168 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:21:21,170 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:21:21,171 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:21:21,172 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:21:21,173 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:21:21,176 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:21:21,176 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:21:21,178 INFO - Authorization failed.
2020-06-17 12:21:21,179 INFO - Authorization failed.
2020-06-17 12:21:21,181 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:21:21,183 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:21:21,183 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:21:21,185 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:21:21,186 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:21:21,187 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:21:21,189 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:21:21,190 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:21:21,191 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 12.6053ms
2020-06-17 12:21:21,192 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 13.7432ms
2020-06-17 12:21:21,194 INFO - Request finished in 878.6381ms 401 
2020-06-17 12:21:21,195 INFO - Request finished in 917.7146ms 401 
2020-06-17 12:26:30,344 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:26:30,357 INFO - CORS policy execution successful.
2020-06-17 12:26:30,361 INFO - Request finished in 15.0146ms 204 
2020-06-17 12:26:30,364 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:26:30,366 INFO - CORS policy execution successful.
2020-06-17 12:26:30,368 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:26:30,371 INFO - Request finished in 7.8366ms 204 
2020-06-17 12:26:30,373 INFO - CORS policy execution successful.
2020-06-17 12:26:30,374 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:26:30,382 INFO - CORS policy execution successful.
2020-06-17 12:26:30,387 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:26:30,389 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:26:30,390 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:26:30,414 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:26:30,422 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:26:30,428 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:26:30,429 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:26:30,430 INFO - Authorization failed.
2020-06-17 12:26:30,434 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:26:30,434 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:26:30,437 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:26:30,441 INFO - Authorization failed.
2020-06-17 12:26:30,444 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:26:30,445 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:26:30,447 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:26:30,455 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:26:30,458 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 19.7259ms
2020-06-17 12:26:30,459 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:26:30,461 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:26:30,468 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 27.2748ms
2020-06-17 12:26:30,475 INFO - Request finished in 99.5776ms 401 
2020-06-17 12:26:30,480 INFO - Request finished in 103.3577ms 401 
2020-06-17 12:31:59,196 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:31:59,265 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:31:59,270 INFO - CORS policy execution successful.
2020-06-17 12:31:59,319 INFO - CORS policy execution successful.
2020-06-17 12:31:59,333 INFO - Request finished in 233.9485ms 204 
2020-06-17 12:31:59,341 INFO - Request finished in 180.2528ms 204 
2020-06-17 12:31:59,358 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:31:59,549 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:31:59,726 INFO - CORS policy execution successful.
2020-06-17 12:31:59,760 INFO - CORS policy execution successful.
2020-06-17 12:32:00,897 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:32:00,902 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:32:00,983 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:32:00,994 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:32:00,999 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:32:01,010 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:32:01,020 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:32:01,023 INFO - Authorization failed.
2020-06-17 12:32:01,024 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:32:01,029 INFO - Authorization failed.
2020-06-17 12:32:01,031 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:32:01,031 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:32:01,035 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:32:01,043 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:32:01,051 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:32:01,060 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:32:01,072 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:32:01,078 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:32:01,087 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 60.8656ms
2020-06-17 12:32:01,112 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 57.6698ms
2020-06-17 12:32:01,115 INFO - Request finished in 1758.3847ms 401 
2020-06-17 12:32:01,162 INFO - Request finished in 1768.7692ms 401 
2020-06-17 12:32:10,971 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:32:10,973 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:32:10,974 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:32:10,976 INFO - Authorization failed.
2020-06-17 12:32:10,977 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:32:10,978 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:32:10,979 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:32:10,982 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:32:10,983 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 7.3278ms
2020-06-17 12:32:10,985 INFO - Request finished in 14.8902ms 401 
2020-06-17 12:32:23,195 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:32:23,199 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:32:23,211 INFO - CORS policy execution successful.
2020-06-17 12:32:23,214 INFO - CORS policy execution successful.
2020-06-17 12:32:23,223 INFO - Request finished in 17.7872ms 204 
2020-06-17 12:32:23,244 INFO - Request finished in 20.51ms 204 
2020-06-17 12:32:23,247 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:32:23,249 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:32:23,251 INFO - CORS policy execution successful.
2020-06-17 12:32:23,257 INFO - CORS policy execution successful.
2020-06-17 12:32:23,262 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:32:23,264 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:32:23,266 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:32:23,267 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:32:23,269 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:32:23,271 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:32:23,278 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:32:23,322 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:32:23,329 INFO - Authorization failed.
2020-06-17 12:32:23,333 INFO - Authorization failed.
2020-06-17 12:32:23,339 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:32:23,344 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:32:23,346 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:32:23,348 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:32:23,349 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:32:23,351 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:32:23,354 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:32:23,361 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:32:23,366 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 79.0506ms
2020-06-17 12:32:23,367 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 36.6414ms
2020-06-17 12:32:23,372 INFO - Request finished in 124.4292ms 401 
2020-06-17 12:32:23,375 INFO - Request finished in 128.7511ms 401 
2020-06-17 12:34:58,594 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:34:58,599 INFO - CORS policy execution successful.
2020-06-17 12:34:58,604 INFO - Request finished in 11.4788ms 204 
2020-06-17 12:34:58,610 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:34:58,619 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:34:58,620 INFO - CORS policy execution successful.
2020-06-17 12:34:58,623 INFO - CORS policy execution successful.
2020-06-17 12:34:58,626 INFO - Request finished in 21.0655ms 204 
2020-06-17 12:34:58,628 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:34:58,630 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:34:58,633 INFO - CORS policy execution successful.
2020-06-17 12:34:58,637 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:34:58,640 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:34:58,644 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:34:58,645 INFO - Authorization failed.
2020-06-17 12:34:58,647 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:34:58,649 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:34:58,651 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:34:58,652 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:34:58,655 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 8.6475ms
2020-06-17 12:34:58,658 INFO - Request finished in 50.3205ms 401 
2020-06-17 12:34:59,587 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:34:59,590 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:34:59,593 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:34:59,595 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:34:59,596 INFO - Authorization failed.
2020-06-17 12:34:59,597 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:34:59,599 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:34:59,600 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:34:59,602 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:34:59,603 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 7.0575ms
2020-06-17 12:34:59,606 INFO - Request finished in 978.0671ms 401 
2020-06-17 12:39:05,494 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-17 12:39:05,542 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:39:05,730 INFO - Request finished in 240.9539ms 200 text/html
2020-06-17 12:39:09,880 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-17 12:39:09,888 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 12:39:10,503 INFO - Request finished in 609.2835ms 200 application/json;charset=utf-8
2020-06-17 12:39:57,911 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:39:57,929 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:39:57,988 INFO - CORS policy execution successful.
2020-06-17 12:39:57,990 INFO - CORS policy execution successful.
2020-06-17 12:39:58,006 INFO - Request finished in 113.757ms 204 
2020-06-17 12:39:58,021 INFO - Request finished in 79.9396ms 204 
2020-06-17 12:39:58,028 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:39:58,033 INFO - CORS policy execution successful.
2020-06-17 12:39:58,037 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:39:58,039 INFO - CORS policy execution successful.
2020-06-17 12:39:58,683 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:39:58,684 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:39:58,690 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:39:58,692 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:39:58,699 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:39:58,700 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:39:59,330 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:39:59,330 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:39:59,345 INFO - Authorization failed.
2020-06-17 12:39:59,346 INFO - Authorization failed.
2020-06-17 12:39:59,351 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:39:59,351 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:39:59,358 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:39:59,359 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:39:59,371 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:39:59,372 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:39:59,375 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:39:59,376 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:39:59,380 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 46.3816ms
2020-06-17 12:39:59,382 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 45.219ms
2020-06-17 12:39:59,391 INFO - Request finished in 1375.9081ms 401 
2020-06-17 12:39:59,394 INFO - Request finished in 1355.696ms 401 
2020-06-17 12:40:10,161 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:40:10,163 INFO - CORS policy execution successful.
2020-06-17 12:40:10,164 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:40:10,165 INFO - CORS policy execution successful.
2020-06-17 12:40:10,167 INFO - Request finished in 5.7064ms 204 
2020-06-17 12:40:10,170 INFO - Request finished in 5.2947ms 204 
2020-06-17 12:40:10,172 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:40:10,175 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:40:10,175 INFO - CORS policy execution successful.
2020-06-17 12:40:10,178 INFO - CORS policy execution successful.
2020-06-17 12:40:10,183 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:40:10,183 INFO - Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateSignature(String token, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2020-06-17 12:40:10,187 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:40:10,188 INFO - BearerIdentityServerAuthenticationJwt was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:40:10,189 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:40:10,191 INFO - Bearer was not authenticated. Failure message: IDX10501: Signature validation failed. Unable to match keys: 
kid: '[PII is hidden]', 
token: '[PII is hidden]'.
2020-06-17 12:40:10,193 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:40:10,194 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:40:10,219 INFO - Authorization failed.
2020-06-17 12:40:10,220 INFO - Authorization failed.
2020-06-17 12:40:10,221 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:40:10,222 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-17 12:40:10,223 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:40:10,224 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-17 12:40:10,227 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:40:10,228 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-17 12:40:10,229 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:40:10,230 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-17 12:40:10,232 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 36.3407ms
2020-06-17 12:40:10,233 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 36.9146ms
2020-06-17 12:40:10,235 INFO - Request finished in 61.8524ms 401 
2020-06-17 12:40:10,236 INFO - Request finished in 65.4659ms 401 
2020-06-17 12:40:16,309 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:40:16,310 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:40:16,311 INFO - CORS policy execution successful.
2020-06-17 12:40:16,313 INFO - CORS policy execution successful.
2020-06-17 12:40:16,315 INFO - Request finished in 4.2956ms 204 
2020-06-17 12:40:16,317 INFO - Request finished in 6.6139ms 204 
2020-06-17 12:40:16,326 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 12:40:16,327 INFO - CORS policy execution successful.
2020-06-17 12:40:16,328 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 12:40:16,330 INFO - CORS policy execution successful.
2020-06-17 12:40:16,334 INFO - Successfully validated the token.
2020-06-17 12:40:16,335 INFO - Successfully validated the token.
2020-06-17 12:40:16,339 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-17 12:40:16,341 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-17 12:40:16,342 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:40:16,344 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 12:40:16,345 INFO - Authorization was successful.
2020-06-17 12:40:16,346 INFO - Authorization was successful.
2020-06-17 12:40:16,376 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 12:40:16,376 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 12:40:16,384 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (100, 1, 1, , True) - Validation state: Valid
2020-06-17 12:40:16,387 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (100, 1, 1, , False) - Validation state: Valid
2020-06-17 12:40:17,497 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 12:40:17,499 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 12:40:17,684 WARN - The Include operation for navigation '[s].Site' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-17 12:40:17,956 WARN - The LINQ expression 'where ([Employee].ToEntity(null, null, null, null, null, [x_siteEmployee], null, [x_healthDeclaration]).ToEntity([x_siteEmployee.Site]).OrganizationId == __OrganizationId_1)' could not be translated and will be evaluated locally.
2020-06-17 12:40:17,967 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-17 12:40:18,779 INFO - Executed DbCommand (99ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:40:18,998 WARN - The LINQ expression 'where ([Employee].ToEntity(null, null, null, null, null, [x_siteEmployee], null, [x_healthDeclaration]).ToEntity([x_siteEmployee.Site]).OrganizationId == __OrganizationId_1)' could not be translated and will be evaluated locally.
2020-06-17 12:40:19,066 INFO - Executed DbCommand (72ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:40:19,089 INFO - Executed DbCommand (74ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:40:19,199 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 2807.9891ms.
2020-06-17 12:40:19,200 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 12:40:19,215 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 12:40:19,232 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 2885.2772ms
2020-06-17 12:40:19,240 INFO - Request finished in 2912.543ms 200 application/json; charset=utf-8
2020-06-17 12:40:19,283 INFO - Executed DbCommand (73ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 12:40:19,295 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 2906.5865ms.
2020-06-17 12:40:19,295 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 12:40:19,297 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 12:40:19,299 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 2954.5536ms
2020-06-17 12:40:19,301 INFO - Request finished in 2980.8855ms 200 application/json; charset=utf-8
2020-06-17 13:21:24,708 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-17 13:21:24,847 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 13:21:25,183 INFO - Request finished in 499.7403ms 200 text/html
2020-06-17 13:21:25,560 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-17 13:21:25,579 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-17 13:21:26,215 INFO - Request finished in 729.0337ms 200 application/json;charset=utf-8
2020-06-17 13:21:30,882 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 13:21:30,930 INFO - CORS policy execution successful.
2020-06-17 13:21:30,983 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 13:21:31,004 INFO - Request finished in 95.8177ms 204 
2020-06-17 13:21:31,022 INFO - CORS policy execution successful.
2020-06-17 13:21:31,035 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 13:21:31,037 INFO - Request finished in 100.6418ms 204 
2020-06-17 13:21:31,039 INFO - CORS policy execution successful.
2020-06-17 13:21:31,048 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 13:21:31,073 INFO - CORS policy execution successful.
2020-06-17 13:21:31,594 INFO - Successfully validated the token.
2020-06-17 13:21:31,671 INFO - Successfully validated the token.
2020-06-17 13:21:31,678 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-17 13:21:31,679 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-17 13:21:32,305 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 13:21:32,306 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 13:21:32,319 INFO - Authorization was successful.
2020-06-17 13:21:32,321 INFO - Authorization was successful.
2020-06-17 13:21:32,349 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 13:21:32,349 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 13:21:32,360 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (100, 1, 1, , True) - Validation state: Valid
2020-06-17 13:21:32,360 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (100, 1, 1, , False) - Validation state: Valid
2020-06-17 13:21:33,749 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 13:21:33,750 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 13:21:33,974 WARN - The Include operation for navigation '[s].Site' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-17 13:21:34,387 WARN - The LINQ expression 'where ([Employee].ToEntity(null, null, null, null, null, [x_siteEmployee], null, [x_healthDeclaration]).ToEntity([x_siteEmployee.Site]).OrganizationId == __OrganizationId_1)' could not be translated and will be evaluated locally.
2020-06-17 13:21:34,404 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-17 13:21:35,645 INFO - Executed DbCommand (94ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 13:21:35,863 WARN - The LINQ expression 'where ([Employee].ToEntity(null, null, null, null, null, [x_siteEmployee], null, [x_healthDeclaration]).ToEntity([x_siteEmployee.Site]).OrganizationId == __OrganizationId_1)' could not be translated and will be evaluated locally.
2020-06-17 13:21:35,887 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 13:21:35,979 INFO - Executed DbCommand (76ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 13:21:36,099 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 13:21:36,118 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 3754.2374ms.
2020-06-17 13:21:36,119 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 3754.2589ms.
2020-06-17 13:21:36,121 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 13:21:36,121 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 13:21:36,139 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 13:21:36,140 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 13:21:36,180 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 3848.1406ms
2020-06-17 13:21:36,181 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 3848.1159ms
2020-06-17 13:21:36,196 INFO - Request finished in 5154.3875ms 200 application/json; charset=utf-8
2020-06-17 13:21:36,197 INFO - Request finished in 5185.6096ms 200 application/json; charset=utf-8
2020-06-17 13:21:40,416 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 13:21:40,423 INFO - Request starting HTTP/1.1 OPTIONS http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 13:21:40,424 INFO - CORS policy execution successful.
2020-06-17 13:21:40,430 INFO - CORS policy execution successful.
2020-06-17 13:21:40,434 INFO - Request finished in 67.0228ms 204 
2020-06-17 13:21:40,435 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=true  
2020-06-17 13:21:40,437 INFO - Request finished in 58.7013ms 204 
2020-06-17 13:21:40,445 INFO - CORS policy execution successful.
2020-06-17 13:21:40,450 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/EmployeesHealthDeclaration/?OrganizationId=1&pageSize=100&pageNumber=1&isHealthDeclaration=false  
2020-06-17 13:21:40,453 INFO - Successfully validated the token.
2020-06-17 13:21:40,456 INFO - CORS policy execution successful.
2020-06-17 13:21:40,462 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-17 13:21:40,463 INFO - Successfully validated the token.
2020-06-17 13:21:40,465 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-17 13:21:40,467 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 13:21:40,468 INFO - Route matched with {action = "GetEmployeesHealthDeclarationAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API)
2020-06-17 13:21:40,469 INFO - Authorization was successful.
2020-06-17 13:21:40,471 INFO - Authorization was successful.
2020-06-17 13:21:40,471 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 13:21:40,471 INFO - 'GetEmployeesHealthDeclarationAsync' has been invoked
2020-06-17 13:21:40,473 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (100, 1, 1, , True) - Validation state: Valid
2020-06-17 13:21:40,474 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) with arguments (100, 1, 1, , False) - Validation state: Valid
2020-06-17 13:21:40,475 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 13:21:40,480 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-17 13:21:40,550 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 13:21:40,558 INFO - Executed DbCommand (74ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 13:21:40,639 INFO - Executed DbCommand (70ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 13:21:40,648 INFO - Executed DbCommand (74ms) [Parameters=[@__tableName_0='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [Employee].[EmployeeID], [Employee].[Address], [Employee].[BirthDate], [Employee].[Citizenship], [Employee].[dateInsert], [Employee].[dateUpdate], [Employee].[FirstName], [Employee].[FirstNameEN], [Employee].[GenderID], [Employee].[Guid], [Employee].[IdentificationTypeID], [Employee].[IdentityNumber], [Employee].[LastName], [Employee].[LastNameEN], [Employee].[OrganizationID], [Employee].[PassportCountryID], [Employee].[state], [Employee].[userInsert], [Employee].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [x_siteEmployee.Site].[SiteID], [x_siteEmployee.Site].[Comment], [x_siteEmployee.Site].[dateInsert], [x_siteEmployee.Site].[dateUpdate], [x_siteEmployee.Site].[OrganizationID], [x_siteEmployee.Site].[SiteActivityStartDate], [x_siteEmployee.Site].[SiteName], [x_siteEmployee.Site].[SiteStatusID], [x_siteEmployee.Site].[SiteTypeID], [x_siteEmployee.Site].[state], [x_siteEmployee.Site].[userInsert], [x_siteEmployee.Site].[UserUpdate], [x_siteEmployee.Site].[guid], [t].[DeclarationID], [t].[Date], [t].[dateInsert], [t].[dateUpdate], [t].[EntityID], [t].[EntityTypeID], [t].[FullName], [t].[IdentityNumber], [t].[SiteID], [t].[state], [t].[userInsert], [t].[UserUpdate]
FROM [BB_HR_Employee] AS [Employee]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [Employee].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_GEN_Sites] AS [x_siteEmployee.Site] ON [siteEmployee].[SiteID] = [x_siteEmployee.Site].[SiteID]
LEFT JOIN (
    SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item]
    WHERE (CONVERT(date, [item].[Date]) = CONVERT(date, GETDATE())) AND ([item].[EntityTypeID] = (
        SELECT TOP(1) [item0].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item0]
        WHERE [item0].[EntityTypeName] = @__tableName_0
    ))
) AS [t] ON [Employee].[EmployeeID] = [t].[EntityID]
2020-06-17 13:21:40,654 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 179.5501ms.
2020-06-17 13:21:40,655 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 13:21:40,658 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 13:21:40,668 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 190.9613ms
2020-06-17 13:21:40,670 INFO - Request finished in 235.5803ms 200 application/json; charset=utf-8
2020-06-17 13:21:40,701 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 202.5365ms.
2020-06-17 13:21:40,701 INFO - The GetEmployeesHealthDeclarationAsync have been retrieved successfully.
2020-06-17 13:21:40,704 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeDeclarationResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-17 13:21:40,708 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesHealthDeclarationAsync (Malam.Mastpen.HR.API) in 236.541ms
2020-06-17 13:21:40,713 INFO - Request finished in 273.181ms 200 application/json; charset=utf-8
