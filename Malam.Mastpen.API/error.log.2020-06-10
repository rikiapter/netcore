2020-06-10 08:18:21,411 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 08:18:21,456 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:18:22,833 INFO - Request finished in 1503.7263ms 200 text/html
2020-06-10 08:20:29,739 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 08:20:29,775 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:20:29,938 INFO - Request finished in 201.1012ms 200 text/html
2020-06-10 08:20:33,019 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 08:20:33,024 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:20:33,569 INFO - Request finished in 549.5912ms 200 application/json;charset=utf-8
2020-06-10 08:21:19,502 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/MainScreenHealth/2  
2020-06-10 08:21:19,503 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:21:20,557 INFO - Route matched with {action = "GetMainScreenHealthAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetMainScreenHealthAsync (Malam.Mastpen.HR.API)
2020-06-10 08:21:20,567 INFO - Authorization failed.
2020-06-10 08:21:20,569 INFO - Authorization failed for the request at filter 'Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter'.
2020-06-10 08:21:20,573 INFO - Executing ChallengeResult with authentication schemes ().
2020-06-10 08:21:20,824 INFO - AuthenticationScheme: BearerIdentityServerAuthenticationJwt was challenged.
2020-06-10 08:21:20,826 INFO - AuthenticationScheme: Bearer was challenged.
2020-06-10 08:21:20,829 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetMainScreenHealthAsync (Malam.Mastpen.HR.API) in 269.6144ms
2020-06-10 08:21:20,833 INFO - Request finished in 1330.9943ms 401 
2020-06-10 08:21:44,148 INFO - Request starting HTTP/1.1 GET http://localhost:59821/oauth2-redirect.html  
2020-06-10 08:21:44,149 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:21:44,157 INFO - The file /oauth2-redirect.html was not modified
2020-06-10 08:21:44,160 INFO - Request finished in 11.9001ms 304 text/html
2020-06-10 08:21:48,562 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/MainScreenHealth/2  
2020-06-10 08:21:49,732 INFO - Successfully validated the token.
2020-06-10 08:21:49,738 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 08:21:49,741 INFO - Route matched with {action = "GetMainScreenHealthAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetMainScreenHealthAsync (Malam.Mastpen.HR.API)
2020-06-10 08:21:49,743 INFO - Authorization was successful.
2020-06-10 08:21:49,767 INFO - 'GetMainScreenHealthAsync' has been invoked
2020-06-10 08:21:49,774 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetMainScreenHealthAsync (Malam.Mastpen.HR.API) with arguments (2) - Validation state: Valid
2020-06-10 08:21:50,879 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 08:21:51,928 INFO - Executed DbCommand (106ms) [Parameters=[@__siteId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [item].[SiteEmployeeID], [item].[Comment], [item].[DateFrom], [item].[dateInsert], [item].[DateTo], [item].[dateUpdate], [item].[EmployeeID], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
FROM [BB_EC_SiteEmployee] AS [item]
WHERE [item].[SiteID] = @__siteId_0
2020-06-10 08:21:52,122 WARN - The LINQ expression 'GroupBy([item].EmployeeId, [item])' could not be translated and will be evaluated locally.
2020-06-10 08:21:52,125 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-10 08:21:52,126 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-10 08:21:52,253 INFO - Executed DbCommand (82ms) [Parameters=[@__siteId_1='?' (DbType = Int32), @__date_0='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [item].[EmployeeEntryID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EmployeeID], [item].[EntryApprovalType], [item].[EquipmentID], [item].[Guid], [item].[state], [item].[Time], [item].[userInsert], [item].[UserUpdate]
FROM [BB_EC_EmployeeEntry] AS [item]
INNER JOIN (
    SELECT [a].*
    FROM [BB_EC_EquipmenAtSite] AS [a]
    WHERE [a].[SiteID] = @__siteId_1
) AS [t] ON [item].[EquipmentID] = [t].[EquipmentID]
WHERE CONVERT(date, [item].[Date]) >= @__date_0
ORDER BY [item].[EmployeeID]
2020-06-10 08:21:52,298 WARN - The Include operation for navigation '[item].AlertType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:21:52,299 WARN - The Include operation for navigation '[item].EntityType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:21:52,424 INFO - Executed DbCommand (80ms) [Parameters=[@__siteId_0='?' (DbType = Int32), @__ModuleID_1='?' (DbType = Int32), @__alertTypeId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [BB_GEN_Alerts] AS [item]
INNER JOIN [BB_GEN_AlertType] AS [item.AlertType] ON [item].[AlertTypeID] = [item.AlertType].[AlertTypeID]
WHERE (((([item].[SiteID] = @__siteId_0) AND ([item].[Date] > DATEADD(day, -1.0E0, CONVERT(date, GETDATE())))) AND ([item.AlertType].[ModuleID] = @__ModuleID_1)) AND ([item].[AlertTypeID] = @__alertTypeId_2)) AND ([item].[AlertStatus] = 1)
2020-06-10 08:21:52,517 INFO - Executed DbCommand (80ms) [Parameters=[@__siteId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [BB_VR_HealthDeclaration] AS [item]
WHERE (([item].[SiteID] = @__siteId_0) AND [item].[EntityTypeID] IS NULL) AND ([item].[Date] = CONVERT(date, GETDATE()))
2020-06-10 08:21:52,615 INFO - Executed DbCommand (82ms) [Parameters=[@__siteId_1='?' (DbType = Int32), @__date_0='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [item].[EmployeeEntryID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EmployeeID], [item].[EntryApprovalType], [item].[EquipmentID], [item].[Guid], [item].[state], [item].[Time], [item].[userInsert], [item].[UserUpdate]
FROM [BB_EC_EmployeeEntry] AS [item]
INNER JOIN (
    SELECT [a].*
    FROM [BB_EC_EquipmenAtSite] AS [a]
    WHERE [a].[SiteID] = @__siteId_1
) AS [t] ON [item].[EquipmentID] = [t].[EquipmentID]
WHERE CONVERT(date, [item].[Date]) >= @__date_0
2020-06-10 08:21:52,706 INFO - Executed DbCommand (81ms) [Parameters=[@__siteId_0='?' (DbType = Int32), @__entityTypeId_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [item].[DeclarationID], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[FullName], [item].[IdentityNumber], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate]
FROM [BB_VR_HealthDeclaration] AS [item]
WHERE (([item].[SiteID] = @__siteId_0) AND ([item].[EntityTypeID] = @__entityTypeId_1)) AND ([item].[Date] = CONVERT(date, GETDATE()))
2020-06-10 08:21:56,146 INFO - Executed DbCommand (80ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [item].[AlertID], [item].[AlertStatus], [item].[AlertTypeID], [item].[AlertValidDate], [item].[Comment], [item].[Date], [item].[dateInsert], [item].[dateUpdate], [item].[EntityID], [item].[EntityTypeID], [item].[SiteID], [item].[state], [item].[userInsert], [item].[UserUpdate], [item.EntityType].[EntityTypeID], [item.EntityType].[dateInsert], [item.EntityType].[dateUpdate], [item.EntityType].[EntityTypeName], [item.EntityType].[state], [item.EntityType].[TableName], [item.EntityType].[userInsert], [item.EntityType].[UserUpdate], [item.AlertType].[AlertTypeID], [item.AlertType].[AlertTypeName], [item.AlertType].[AlertValidDate], [item.AlertType].[Comment], [item.AlertType].[dateInsert], [item.AlertType].[dateUpdate], [item.AlertType].[ModuleID], [item.AlertType].[state], [item.AlertType].[userInsert], [item.AlertType].[UserUpdate]
FROM [BB_GEN_Alerts] AS [item]
LEFT JOIN [BB_GEN_EntityType] AS [item.EntityType] ON [item].[EntityTypeID] = [item.EntityType].[EntityTypeID]
INNER JOIN [BB_GEN_AlertType] AS [item.AlertType] ON [item].[AlertTypeID] = [item.AlertType].[AlertTypeID]
WHERE 0 = 1
2020-06-10 08:21:56,172 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetMainScreenHealthAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 6391.3478ms.
2020-06-10 08:21:56,176 INFO - The GetMainScreenHealthAsync have been retrieved successfully.
2020-06-10 08:21:56,193 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.SingleResponse`1[[Malam.Mastpen.Core.BL.Requests.MainScreenHealthResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 08:21:56,209 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetMainScreenHealthAsync (Malam.Mastpen.HR.API) in 6466.0249ms
2020-06-10 08:21:56,216 INFO - Request finished in 7654.6421ms 200 application/json; charset=utf-8
2020-06-10 08:22:06,921 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 08:22:06,923 INFO - Successfully validated the token.
2020-06-10 08:22:06,925 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 08:22:06,938 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 08:22:06,942 INFO - Authorization was successful.
2020-06-10 08:22:06,946 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 08:22:06,947 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , , , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 08:22:06,978 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 08:22:07,019 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:22:07,021 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:22:07,022 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:22:07,024 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:22:07,025 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:22:07,026 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:22:07,028 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:22:07,436 INFO - Executed DbCommand (345ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 08:22:07,466 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 08:22:07,883 INFO - Executed DbCommand (108ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
2020-06-10 08:22:08,163 INFO - Executed DbCommand (99ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
INNER JOIN (
    SELECT DISTINCT [t7].*
    FROM (
        SELECT [b0].[EmployeeID]
        FROM [BB_HR_Employee] AS [b0]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry0] ON [b0].[PassportCountryID] = [b.PassportCountry0].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization0] ON [b0].[OrganizationID] = [b.Organization0].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType0] ON [b0].[IdentificationTypeID] = [b.IdentificationType0].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a1].*
            FROM [BB_GEN_Docs] AS [a1]
            WHERE ([a1].[EntityTypeID] = (
                SELECT TOP(1) [item3].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item3]
                WHERE [item3].[EntityTypeName] = @__tableName_0
            )) AND ([a1].[DocumentTypeID] = 7)
        ) AS [t3] ON [b0].[EmployeeID] = [t3].[EntityID]
        LEFT JOIN (
            SELECT [item4].*
            FROM [BB_EC_EmployeeEntry] AS [item4]
            WHERE CONVERT(date, [item4].[Date]) = CONVERT(date, GETDATE())
        ) AS [t4] ON [b0].[EmployeeID] = [t4].[EmployeeID]
        LEFT JOIN (
            SELECT [a2].*
            FROM [BB_EC_EquipmenAtSite] AS [a2]
            WHERE [a2].[SiteID] IS NULL
        ) AS [t5] ON [t4].[EquipmentID] = [t5].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee0] ON [b0].[EmployeeID] = [siteEmployee0].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture0] ON [b0].[EmployeeID] = [docsEmplyeePicture0].[EmployeeID]
        LEFT JOIN (
            SELECT [item5].*
            FROM [BB_VR_HealthDeclaration] AS [item5]
            WHERE (CONVERT(date, [item5].[Date]) = CONVERT(date, GETDATE())) AND ([item5].[EntityTypeID] = (
                SELECT TOP(1) [item6].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item6]
                WHERE [item6].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t6] ON [b0].[EmployeeID] = [t6].[EntityID]
        ORDER BY [b0].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t7]
) AS [t8] ON [b.EmployeeProffesionType].[EmployeeID] = [t8].[EmployeeID]
ORDER BY [t8].[EmployeeID]
2020-06-10 08:22:08,312 INFO - Executed DbCommand (119ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
INNER JOIN (
    SELECT DISTINCT [t13].*
    FROM (
        SELECT [b1].[EmployeeID]
        FROM [BB_HR_Employee] AS [b1]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a3].*
            FROM [BB_GEN_Docs] AS [a3]
            WHERE ([a3].[EntityTypeID] = (
                SELECT TOP(1) [item7].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item7]
                WHERE [item7].[EntityTypeName] = @__tableName_0
            )) AND ([a3].[DocumentTypeID] = 7)
        ) AS [t9] ON [b1].[EmployeeID] = [t9].[EntityID]
        LEFT JOIN (
            SELECT [item8].*
            FROM [BB_EC_EmployeeEntry] AS [item8]
            WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
        ) AS [t10] ON [b1].[EmployeeID] = [t10].[EmployeeID]
        LEFT JOIN (
            SELECT [a4].*
            FROM [BB_EC_EquipmenAtSite] AS [a4]
            WHERE [a4].[SiteID] IS NULL
        ) AS [t11] ON [t10].[EquipmentID] = [t11].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
        LEFT JOIN (
            SELECT [item9].*
            FROM [BB_VR_HealthDeclaration] AS [item9]
            WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
                SELECT TOP(1) [item10].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item10]
                WHERE [item10].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t12] ON [b1].[EmployeeID] = [t12].[EntityID]
        ORDER BY [b1].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t13]
) AS [t14] ON [b.EmployeeAuthtorization].[EmployeeID] = [t14].[EmployeeID]
ORDER BY [t14].[EmployeeID]
2020-06-10 08:22:08,486 INFO - Executed DbCommand (150ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
INNER JOIN (
    SELECT DISTINCT [t19].*
    FROM (
        SELECT [b2].[EmployeeID]
        FROM [BB_HR_Employee] AS [b2]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry2] ON [b2].[PassportCountryID] = [b.PassportCountry2].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization2] ON [b2].[OrganizationID] = [b.Organization2].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType2] ON [b2].[IdentificationTypeID] = [b.IdentificationType2].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a5].*
            FROM [BB_GEN_Docs] AS [a5]
            WHERE ([a5].[EntityTypeID] = (
                SELECT TOP(1) [item11].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item11]
                WHERE [item11].[EntityTypeName] = @__tableName_0
            )) AND ([a5].[DocumentTypeID] = 7)
        ) AS [t15] ON [b2].[EmployeeID] = [t15].[EntityID]
        LEFT JOIN (
            SELECT [item12].*
            FROM [BB_EC_EmployeeEntry] AS [item12]
            WHERE CONVERT(date, [item12].[Date]) = CONVERT(date, GETDATE())
        ) AS [t16] ON [b2].[EmployeeID] = [t16].[EmployeeID]
        LEFT JOIN (
            SELECT [a6].*
            FROM [BB_EC_EquipmenAtSite] AS [a6]
            WHERE [a6].[SiteID] IS NULL
        ) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee2] ON [b2].[EmployeeID] = [siteEmployee2].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture2] ON [b2].[EmployeeID] = [docsEmplyeePicture2].[EmployeeID]
        LEFT JOIN (
            SELECT [item13].*
            FROM [BB_VR_HealthDeclaration] AS [item13]
            WHERE (CONVERT(date, [item13].[Date]) = CONVERT(date, GETDATE())) AND ([item13].[EntityTypeID] = (
                SELECT TOP(1) [item14].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item14]
                WHERE [item14].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t18] ON [b2].[EmployeeID] = [t18].[EntityID]
        ORDER BY [b2].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t19]
) AS [t20] ON [b.EmployeeTraining].[EmployeeID] = [t20].[EmployeeID]
ORDER BY [t20].[EmployeeID]
2020-06-10 08:22:08,643 INFO - Executed DbCommand (124ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
INNER JOIN (
    SELECT DISTINCT [t25].*
    FROM (
        SELECT [b3].[EmployeeID]
        FROM [BB_HR_Employee] AS [b3]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a7].*
            FROM [BB_GEN_Docs] AS [a7]
            WHERE ([a7].[EntityTypeID] = (
                SELECT TOP(1) [item15].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item15]
                WHERE [item15].[EntityTypeName] = @__tableName_0
            )) AND ([a7].[DocumentTypeID] = 7)
        ) AS [t21] ON [b3].[EmployeeID] = [t21].[EntityID]
        LEFT JOIN (
            SELECT [item16].*
            FROM [BB_EC_EmployeeEntry] AS [item16]
            WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
        ) AS [t22] ON [b3].[EmployeeID] = [t22].[EmployeeID]
        LEFT JOIN (
            SELECT [a8].*
            FROM [BB_EC_EquipmenAtSite] AS [a8]
            WHERE [a8].[SiteID] IS NULL
        ) AS [t23] ON [t22].[EquipmentID] = [t23].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
        LEFT JOIN (
            SELECT [item17].*
            FROM [BB_VR_HealthDeclaration] AS [item17]
            WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
                SELECT TOP(1) [item18].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item18]
                WHERE [item18].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t24] ON [b3].[EmployeeID] = [t24].[EntityID]
        ORDER BY [b3].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t25]
) AS [t26] ON [b.EmployeeWorkPermit].[EmployeeID] = [t26].[EmployeeID]
ORDER BY [t26].[EmployeeID]
2020-06-10 08:22:27,859 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 20910.7872ms.
2020-06-10 08:22:27,859 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 08:22:27,864 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 08:22:27,924 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 20985.1335ms
2020-06-10 08:22:27,926 INFO - Request finished in 21005.5248ms 200 application/json; charset=utf-8
2020-06-10 08:22:42,214 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 08:22:42,216 INFO - Successfully validated the token.
2020-06-10 08:22:42,218 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 08:22:42,220 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 08:22:42,221 INFO - Authorization was successful.
2020-06-10 08:22:42,222 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 08:22:42,223 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , , , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 08:22:42,225 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 08:22:42,358 INFO - Executed DbCommand (124ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 08:22:42,470 INFO - Executed DbCommand (101ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
2020-06-10 08:22:42,705 INFO - Executed DbCommand (229ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
INNER JOIN (
    SELECT DISTINCT [t7].*
    FROM (
        SELECT [b0].[EmployeeID]
        FROM [BB_HR_Employee] AS [b0]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry0] ON [b0].[PassportCountryID] = [b.PassportCountry0].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization0] ON [b0].[OrganizationID] = [b.Organization0].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType0] ON [b0].[IdentificationTypeID] = [b.IdentificationType0].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a1].*
            FROM [BB_GEN_Docs] AS [a1]
            WHERE ([a1].[EntityTypeID] = (
                SELECT TOP(1) [item3].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item3]
                WHERE [item3].[EntityTypeName] = @__tableName_0
            )) AND ([a1].[DocumentTypeID] = 7)
        ) AS [t3] ON [b0].[EmployeeID] = [t3].[EntityID]
        LEFT JOIN (
            SELECT [item4].*
            FROM [BB_EC_EmployeeEntry] AS [item4]
            WHERE CONVERT(date, [item4].[Date]) = CONVERT(date, GETDATE())
        ) AS [t4] ON [b0].[EmployeeID] = [t4].[EmployeeID]
        LEFT JOIN (
            SELECT [a2].*
            FROM [BB_EC_EquipmenAtSite] AS [a2]
            WHERE [a2].[SiteID] IS NULL
        ) AS [t5] ON [t4].[EquipmentID] = [t5].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee0] ON [b0].[EmployeeID] = [siteEmployee0].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture0] ON [b0].[EmployeeID] = [docsEmplyeePicture0].[EmployeeID]
        LEFT JOIN (
            SELECT [item5].*
            FROM [BB_VR_HealthDeclaration] AS [item5]
            WHERE (CONVERT(date, [item5].[Date]) = CONVERT(date, GETDATE())) AND ([item5].[EntityTypeID] = (
                SELECT TOP(1) [item6].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item6]
                WHERE [item6].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t6] ON [b0].[EmployeeID] = [t6].[EntityID]
        ORDER BY [b0].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t7]
) AS [t8] ON [b.EmployeeProffesionType].[EmployeeID] = [t8].[EmployeeID]
ORDER BY [t8].[EmployeeID]
2020-06-10 08:22:42,922 INFO - Executed DbCommand (214ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
INNER JOIN (
    SELECT DISTINCT [t13].*
    FROM (
        SELECT [b1].[EmployeeID]
        FROM [BB_HR_Employee] AS [b1]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a3].*
            FROM [BB_GEN_Docs] AS [a3]
            WHERE ([a3].[EntityTypeID] = (
                SELECT TOP(1) [item7].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item7]
                WHERE [item7].[EntityTypeName] = @__tableName_0
            )) AND ([a3].[DocumentTypeID] = 7)
        ) AS [t9] ON [b1].[EmployeeID] = [t9].[EntityID]
        LEFT JOIN (
            SELECT [item8].*
            FROM [BB_EC_EmployeeEntry] AS [item8]
            WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
        ) AS [t10] ON [b1].[EmployeeID] = [t10].[EmployeeID]
        LEFT JOIN (
            SELECT [a4].*
            FROM [BB_EC_EquipmenAtSite] AS [a4]
            WHERE [a4].[SiteID] IS NULL
        ) AS [t11] ON [t10].[EquipmentID] = [t11].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
        LEFT JOIN (
            SELECT [item9].*
            FROM [BB_VR_HealthDeclaration] AS [item9]
            WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
                SELECT TOP(1) [item10].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item10]
                WHERE [item10].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t12] ON [b1].[EmployeeID] = [t12].[EntityID]
        ORDER BY [b1].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t13]
) AS [t14] ON [b.EmployeeAuthtorization].[EmployeeID] = [t14].[EmployeeID]
ORDER BY [t14].[EmployeeID]
2020-06-10 08:22:43,078 INFO - Executed DbCommand (153ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
INNER JOIN (
    SELECT DISTINCT [t19].*
    FROM (
        SELECT [b2].[EmployeeID]
        FROM [BB_HR_Employee] AS [b2]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry2] ON [b2].[PassportCountryID] = [b.PassportCountry2].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization2] ON [b2].[OrganizationID] = [b.Organization2].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType2] ON [b2].[IdentificationTypeID] = [b.IdentificationType2].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a5].*
            FROM [BB_GEN_Docs] AS [a5]
            WHERE ([a5].[EntityTypeID] = (
                SELECT TOP(1) [item11].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item11]
                WHERE [item11].[EntityTypeName] = @__tableName_0
            )) AND ([a5].[DocumentTypeID] = 7)
        ) AS [t15] ON [b2].[EmployeeID] = [t15].[EntityID]
        LEFT JOIN (
            SELECT [item12].*
            FROM [BB_EC_EmployeeEntry] AS [item12]
            WHERE CONVERT(date, [item12].[Date]) = CONVERT(date, GETDATE())
        ) AS [t16] ON [b2].[EmployeeID] = [t16].[EmployeeID]
        LEFT JOIN (
            SELECT [a6].*
            FROM [BB_EC_EquipmenAtSite] AS [a6]
            WHERE [a6].[SiteID] IS NULL
        ) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee2] ON [b2].[EmployeeID] = [siteEmployee2].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture2] ON [b2].[EmployeeID] = [docsEmplyeePicture2].[EmployeeID]
        LEFT JOIN (
            SELECT [item13].*
            FROM [BB_VR_HealthDeclaration] AS [item13]
            WHERE (CONVERT(date, [item13].[Date]) = CONVERT(date, GETDATE())) AND ([item13].[EntityTypeID] = (
                SELECT TOP(1) [item14].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item14]
                WHERE [item14].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t18] ON [b2].[EmployeeID] = [t18].[EntityID]
        ORDER BY [b2].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t19]
) AS [t20] ON [b.EmployeeTraining].[EmployeeID] = [t20].[EmployeeID]
ORDER BY [t20].[EmployeeID]
2020-06-10 08:22:43,281 INFO - Executed DbCommand (201ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
INNER JOIN (
    SELECT DISTINCT [t25].*
    FROM (
        SELECT [b3].[EmployeeID]
        FROM [BB_HR_Employee] AS [b3]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a7].*
            FROM [BB_GEN_Docs] AS [a7]
            WHERE ([a7].[EntityTypeID] = (
                SELECT TOP(1) [item15].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item15]
                WHERE [item15].[EntityTypeName] = @__tableName_0
            )) AND ([a7].[DocumentTypeID] = 7)
        ) AS [t21] ON [b3].[EmployeeID] = [t21].[EntityID]
        LEFT JOIN (
            SELECT [item16].*
            FROM [BB_EC_EmployeeEntry] AS [item16]
            WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
        ) AS [t22] ON [b3].[EmployeeID] = [t22].[EmployeeID]
        LEFT JOIN (
            SELECT [a8].*
            FROM [BB_EC_EquipmenAtSite] AS [a8]
            WHERE [a8].[SiteID] IS NULL
        ) AS [t23] ON [t22].[EquipmentID] = [t23].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
        LEFT JOIN (
            SELECT [item17].*
            FROM [BB_VR_HealthDeclaration] AS [item17]
            WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
                SELECT TOP(1) [item18].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item18]
                WHERE [item18].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t24] ON [b3].[EmployeeID] = [t24].[EntityID]
        ORDER BY [b3].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t25]
) AS [t26] ON [b.EmployeeWorkPermit].[EmployeeID] = [t26].[EmployeeID]
ORDER BY [t26].[EmployeeID]
2020-06-10 08:24:25,738 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 08:24:25,775 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:24:26,001 INFO - Request finished in 267.3315ms 200 text/html
2020-06-10 08:24:26,230 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 08:24:26,237 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:24:26,865 INFO - Request finished in 635.1059ms 200 application/json;charset=utf-8
2020-06-10 08:24:43,544 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 08:24:44,750 INFO - Successfully validated the token.
2020-06-10 08:24:44,758 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 08:24:45,247 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 08:24:45,258 INFO - Authorization was successful.
2020-06-10 08:24:45,282 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 08:24:45,290 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , , , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 08:24:46,388 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 08:24:46,576 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:24:46,578 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:24:46,579 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:24:46,580 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:24:46,581 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:24:46,582 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:24:46,583 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:24:47,853 INFO - Executed DbCommand (187ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 08:24:47,914 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 08:24:48,392 INFO - Executed DbCommand (105ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
2020-06-10 08:24:48,735 INFO - Executed DbCommand (97ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
INNER JOIN (
    SELECT DISTINCT [t7].*
    FROM (
        SELECT [b0].[EmployeeID]
        FROM [BB_HR_Employee] AS [b0]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry0] ON [b0].[PassportCountryID] = [b.PassportCountry0].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization0] ON [b0].[OrganizationID] = [b.Organization0].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType0] ON [b0].[IdentificationTypeID] = [b.IdentificationType0].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a1].*
            FROM [BB_GEN_Docs] AS [a1]
            WHERE ([a1].[EntityTypeID] = (
                SELECT TOP(1) [item3].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item3]
                WHERE [item3].[EntityTypeName] = @__tableName_0
            )) AND ([a1].[DocumentTypeID] = 7)
        ) AS [t3] ON [b0].[EmployeeID] = [t3].[EntityID]
        LEFT JOIN (
            SELECT [item4].*
            FROM [BB_EC_EmployeeEntry] AS [item4]
            WHERE CONVERT(date, [item4].[Date]) = CONVERT(date, GETDATE())
        ) AS [t4] ON [b0].[EmployeeID] = [t4].[EmployeeID]
        LEFT JOIN (
            SELECT [a2].*
            FROM [BB_EC_EquipmenAtSite] AS [a2]
            WHERE [a2].[SiteID] IS NULL
        ) AS [t5] ON [t4].[EquipmentID] = [t5].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee0] ON [b0].[EmployeeID] = [siteEmployee0].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture0] ON [b0].[EmployeeID] = [docsEmplyeePicture0].[EmployeeID]
        LEFT JOIN (
            SELECT [item5].*
            FROM [BB_VR_HealthDeclaration] AS [item5]
            WHERE (CONVERT(date, [item5].[Date]) = CONVERT(date, GETDATE())) AND ([item5].[EntityTypeID] = (
                SELECT TOP(1) [item6].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item6]
                WHERE [item6].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t6] ON [b0].[EmployeeID] = [t6].[EntityID]
        ORDER BY [b0].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t7]
) AS [t8] ON [b.EmployeeProffesionType].[EmployeeID] = [t8].[EmployeeID]
ORDER BY [t8].[EmployeeID]
2020-06-10 08:24:48,864 INFO - Executed DbCommand (97ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
INNER JOIN (
    SELECT DISTINCT [t13].*
    FROM (
        SELECT [b1].[EmployeeID]
        FROM [BB_HR_Employee] AS [b1]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a3].*
            FROM [BB_GEN_Docs] AS [a3]
            WHERE ([a3].[EntityTypeID] = (
                SELECT TOP(1) [item7].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item7]
                WHERE [item7].[EntityTypeName] = @__tableName_0
            )) AND ([a3].[DocumentTypeID] = 7)
        ) AS [t9] ON [b1].[EmployeeID] = [t9].[EntityID]
        LEFT JOIN (
            SELECT [item8].*
            FROM [BB_EC_EmployeeEntry] AS [item8]
            WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
        ) AS [t10] ON [b1].[EmployeeID] = [t10].[EmployeeID]
        LEFT JOIN (
            SELECT [a4].*
            FROM [BB_EC_EquipmenAtSite] AS [a4]
            WHERE [a4].[SiteID] IS NULL
        ) AS [t11] ON [t10].[EquipmentID] = [t11].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
        LEFT JOIN (
            SELECT [item9].*
            FROM [BB_VR_HealthDeclaration] AS [item9]
            WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
                SELECT TOP(1) [item10].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item10]
                WHERE [item10].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t12] ON [b1].[EmployeeID] = [t12].[EntityID]
        ORDER BY [b1].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t13]
) AS [t14] ON [b.EmployeeAuthtorization].[EmployeeID] = [t14].[EmployeeID]
ORDER BY [t14].[EmployeeID]
2020-06-10 08:24:48,982 INFO - Executed DbCommand (102ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
INNER JOIN (
    SELECT DISTINCT [t19].*
    FROM (
        SELECT [b2].[EmployeeID]
        FROM [BB_HR_Employee] AS [b2]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry2] ON [b2].[PassportCountryID] = [b.PassportCountry2].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization2] ON [b2].[OrganizationID] = [b.Organization2].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType2] ON [b2].[IdentificationTypeID] = [b.IdentificationType2].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a5].*
            FROM [BB_GEN_Docs] AS [a5]
            WHERE ([a5].[EntityTypeID] = (
                SELECT TOP(1) [item11].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item11]
                WHERE [item11].[EntityTypeName] = @__tableName_0
            )) AND ([a5].[DocumentTypeID] = 7)
        ) AS [t15] ON [b2].[EmployeeID] = [t15].[EntityID]
        LEFT JOIN (
            SELECT [item12].*
            FROM [BB_EC_EmployeeEntry] AS [item12]
            WHERE CONVERT(date, [item12].[Date]) = CONVERT(date, GETDATE())
        ) AS [t16] ON [b2].[EmployeeID] = [t16].[EmployeeID]
        LEFT JOIN (
            SELECT [a6].*
            FROM [BB_EC_EquipmenAtSite] AS [a6]
            WHERE [a6].[SiteID] IS NULL
        ) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee2] ON [b2].[EmployeeID] = [siteEmployee2].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture2] ON [b2].[EmployeeID] = [docsEmplyeePicture2].[EmployeeID]
        LEFT JOIN (
            SELECT [item13].*
            FROM [BB_VR_HealthDeclaration] AS [item13]
            WHERE (CONVERT(date, [item13].[Date]) = CONVERT(date, GETDATE())) AND ([item13].[EntityTypeID] = (
                SELECT TOP(1) [item14].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item14]
                WHERE [item14].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t18] ON [b2].[EmployeeID] = [t18].[EntityID]
        ORDER BY [b2].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t19]
) AS [t20] ON [b.EmployeeTraining].[EmployeeID] = [t20].[EmployeeID]
ORDER BY [t20].[EmployeeID]
2020-06-10 08:24:49,141 INFO - Executed DbCommand (137ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
INNER JOIN (
    SELECT DISTINCT [t25].*
    FROM (
        SELECT [b3].[EmployeeID]
        FROM [BB_HR_Employee] AS [b3]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a7].*
            FROM [BB_GEN_Docs] AS [a7]
            WHERE ([a7].[EntityTypeID] = (
                SELECT TOP(1) [item15].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item15]
                WHERE [item15].[EntityTypeName] = @__tableName_0
            )) AND ([a7].[DocumentTypeID] = 7)
        ) AS [t21] ON [b3].[EmployeeID] = [t21].[EntityID]
        LEFT JOIN (
            SELECT [item16].*
            FROM [BB_EC_EmployeeEntry] AS [item16]
            WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
        ) AS [t22] ON [b3].[EmployeeID] = [t22].[EmployeeID]
        LEFT JOIN (
            SELECT [a8].*
            FROM [BB_EC_EquipmenAtSite] AS [a8]
            WHERE [a8].[SiteID] IS NULL
        ) AS [t23] ON [t22].[EquipmentID] = [t23].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
        LEFT JOIN (
            SELECT [item17].*
            FROM [BB_VR_HealthDeclaration] AS [item17]
            WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
                SELECT TOP(1) [item18].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item18]
                WHERE [item18].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t24] ON [b3].[EmployeeID] = [t24].[EntityID]
        ORDER BY [b3].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t25]
) AS [t26] ON [b.EmployeeWorkPermit].[EmployeeID] = [t26].[EmployeeID]
ORDER BY [t26].[EmployeeID]
2020-06-10 08:25:28,913 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 43620.3926ms.
2020-06-10 08:25:28,915 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 08:25:28,928 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 08:25:28,992 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 43742.1348ms
2020-06-10 08:25:29,000 INFO - Request finished in 45456.7622ms 200 application/json; charset=utf-8
2020-06-10 08:33:36,562 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 08:33:36,640 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:33:36,933 INFO - Request finished in 427.8114ms 200 text/html
2020-06-10 08:33:37,412 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 08:33:37,428 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:33:38,186 INFO - Request finished in 764.3361ms 200 application/json;charset=utf-8
2020-06-10 08:33:56,225 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=100&pageNumber=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 08:33:57,356 INFO - Successfully validated the token.
2020-06-10 08:33:57,365 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 08:33:57,887 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 08:33:57,899 INFO - Authorization was successful.
2020-06-10 08:33:57,925 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 08:33:57,933 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (100, 1, , , , , , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 08:33:59,075 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 08:33:59,282 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:33:59,283 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:33:59,284 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:33:59,285 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:33:59,286 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:33:59,287 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:33:59,288 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:34:00,477 INFO - Executed DbCommand (146ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 08:34:00,547 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 08:34:01,145 INFO - Executed DbCommand (137ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
2020-06-10 08:34:01,628 INFO - Executed DbCommand (104ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
INNER JOIN (
    SELECT DISTINCT [t7].*
    FROM (
        SELECT [b0].[EmployeeID]
        FROM [BB_HR_Employee] AS [b0]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry0] ON [b0].[PassportCountryID] = [b.PassportCountry0].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization0] ON [b0].[OrganizationID] = [b.Organization0].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType0] ON [b0].[IdentificationTypeID] = [b.IdentificationType0].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a1].*
            FROM [BB_GEN_Docs] AS [a1]
            WHERE ([a1].[EntityTypeID] = (
                SELECT TOP(1) [item3].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item3]
                WHERE [item3].[EntityTypeName] = @__tableName_0
            )) AND ([a1].[DocumentTypeID] = 7)
        ) AS [t3] ON [b0].[EmployeeID] = [t3].[EntityID]
        LEFT JOIN (
            SELECT [item4].*
            FROM [BB_EC_EmployeeEntry] AS [item4]
            WHERE CONVERT(date, [item4].[Date]) = CONVERT(date, GETDATE())
        ) AS [t4] ON [b0].[EmployeeID] = [t4].[EmployeeID]
        LEFT JOIN (
            SELECT [a2].*
            FROM [BB_EC_EquipmenAtSite] AS [a2]
            WHERE [a2].[SiteID] IS NULL
        ) AS [t5] ON [t4].[EquipmentID] = [t5].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee0] ON [b0].[EmployeeID] = [siteEmployee0].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture0] ON [b0].[EmployeeID] = [docsEmplyeePicture0].[EmployeeID]
        LEFT JOIN (
            SELECT [item5].*
            FROM [BB_VR_HealthDeclaration] AS [item5]
            WHERE (CONVERT(date, [item5].[Date]) = CONVERT(date, GETDATE())) AND ([item5].[EntityTypeID] = (
                SELECT TOP(1) [item6].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item6]
                WHERE [item6].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t6] ON [b0].[EmployeeID] = [t6].[EntityID]
        ORDER BY [b0].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t7]
) AS [t8] ON [b.EmployeeProffesionType].[EmployeeID] = [t8].[EmployeeID]
ORDER BY [t8].[EmployeeID]
2020-06-10 08:34:01,846 INFO - Executed DbCommand (146ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
INNER JOIN (
    SELECT DISTINCT [t13].*
    FROM (
        SELECT [b1].[EmployeeID]
        FROM [BB_HR_Employee] AS [b1]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a3].*
            FROM [BB_GEN_Docs] AS [a3]
            WHERE ([a3].[EntityTypeID] = (
                SELECT TOP(1) [item7].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item7]
                WHERE [item7].[EntityTypeName] = @__tableName_0
            )) AND ([a3].[DocumentTypeID] = 7)
        ) AS [t9] ON [b1].[EmployeeID] = [t9].[EntityID]
        LEFT JOIN (
            SELECT [item8].*
            FROM [BB_EC_EmployeeEntry] AS [item8]
            WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
        ) AS [t10] ON [b1].[EmployeeID] = [t10].[EmployeeID]
        LEFT JOIN (
            SELECT [a4].*
            FROM [BB_EC_EquipmenAtSite] AS [a4]
            WHERE [a4].[SiteID] IS NULL
        ) AS [t11] ON [t10].[EquipmentID] = [t11].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
        LEFT JOIN (
            SELECT [item9].*
            FROM [BB_VR_HealthDeclaration] AS [item9]
            WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
                SELECT TOP(1) [item10].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item10]
                WHERE [item10].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t12] ON [b1].[EmployeeID] = [t12].[EntityID]
        ORDER BY [b1].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t13]
) AS [t14] ON [b.EmployeeAuthtorization].[EmployeeID] = [t14].[EmployeeID]
ORDER BY [t14].[EmployeeID]
2020-06-10 08:34:02,262 INFO - Executed DbCommand (394ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
INNER JOIN (
    SELECT DISTINCT [t19].*
    FROM (
        SELECT [b2].[EmployeeID]
        FROM [BB_HR_Employee] AS [b2]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry2] ON [b2].[PassportCountryID] = [b.PassportCountry2].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization2] ON [b2].[OrganizationID] = [b.Organization2].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType2] ON [b2].[IdentificationTypeID] = [b.IdentificationType2].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a5].*
            FROM [BB_GEN_Docs] AS [a5]
            WHERE ([a5].[EntityTypeID] = (
                SELECT TOP(1) [item11].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item11]
                WHERE [item11].[EntityTypeName] = @__tableName_0
            )) AND ([a5].[DocumentTypeID] = 7)
        ) AS [t15] ON [b2].[EmployeeID] = [t15].[EntityID]
        LEFT JOIN (
            SELECT [item12].*
            FROM [BB_EC_EmployeeEntry] AS [item12]
            WHERE CONVERT(date, [item12].[Date]) = CONVERT(date, GETDATE())
        ) AS [t16] ON [b2].[EmployeeID] = [t16].[EmployeeID]
        LEFT JOIN (
            SELECT [a6].*
            FROM [BB_EC_EquipmenAtSite] AS [a6]
            WHERE [a6].[SiteID] IS NULL
        ) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee2] ON [b2].[EmployeeID] = [siteEmployee2].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture2] ON [b2].[EmployeeID] = [docsEmplyeePicture2].[EmployeeID]
        LEFT JOIN (
            SELECT [item13].*
            FROM [BB_VR_HealthDeclaration] AS [item13]
            WHERE (CONVERT(date, [item13].[Date]) = CONVERT(date, GETDATE())) AND ([item13].[EntityTypeID] = (
                SELECT TOP(1) [item14].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item14]
                WHERE [item14].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t18] ON [b2].[EmployeeID] = [t18].[EntityID]
        ORDER BY [b2].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t19]
) AS [t20] ON [b.EmployeeTraining].[EmployeeID] = [t20].[EmployeeID]
ORDER BY [t20].[EmployeeID]
2020-06-10 08:34:02,564 INFO - Executed DbCommand (285ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50), @__p_3='?' (DbType = Int32), @__p_4='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
INNER JOIN (
    SELECT DISTINCT [t25].*
    FROM (
        SELECT [b3].[EmployeeID]
        FROM [BB_HR_Employee] AS [b3]
        LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
        LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
        LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
        LEFT JOIN (
            SELECT [a7].*
            FROM [BB_GEN_Docs] AS [a7]
            WHERE ([a7].[EntityTypeID] = (
                SELECT TOP(1) [item15].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item15]
                WHERE [item15].[EntityTypeName] = @__tableName_0
            )) AND ([a7].[DocumentTypeID] = 7)
        ) AS [t21] ON [b3].[EmployeeID] = [t21].[EntityID]
        LEFT JOIN (
            SELECT [item16].*
            FROM [BB_EC_EmployeeEntry] AS [item16]
            WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
        ) AS [t22] ON [b3].[EmployeeID] = [t22].[EmployeeID]
        LEFT JOIN (
            SELECT [a8].*
            FROM [BB_EC_EquipmenAtSite] AS [a8]
            WHERE [a8].[SiteID] IS NULL
        ) AS [t23] ON [t22].[EquipmentID] = [t23].[EquipmentID]
        LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
        LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
        LEFT JOIN (
            SELECT [item17].*
            FROM [BB_VR_HealthDeclaration] AS [item17]
            WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
                SELECT TOP(1) [item18].[EntityTypeID]
                FROM [BB_GEN_EntityType] AS [item18]
                WHERE [item18].[EntityTypeName] = @__tableName_2
            ))
        ) AS [t24] ON [b3].[EmployeeID] = [t24].[EntityID]
        ORDER BY [b3].[EmployeeID]
        OFFSET @__p_3 ROWS FETCH NEXT @__p_4 ROWS ONLY
    ) AS [t25]
) AS [t26] ON [b.EmployeeWorkPermit].[EmployeeID] = [t26].[EmployeeID]
ORDER BY [t26].[EmployeeID]
2020-06-10 08:35:26,406 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 88466.1497ms.
2020-06-10 08:35:26,407 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 08:35:26,420 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 08:35:26,997 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 89106.839ms
2020-06-10 08:35:27,007 INFO - Request finished in 90781.6605ms 200 application/json; charset=utf-8
2020-06-10 08:35:45,559 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 08:35:45,563 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:35:45,581 INFO - Request finished in 9.4752ms 200 text/html
2020-06-10 08:36:23,138 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 08:36:23,141 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:36:23,145 INFO - Request finished in 5.2099ms 200 text/html
2020-06-10 08:36:24,055 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 08:36:24,056 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 08:36:24,088 INFO - Request finished in 33.3787ms 200 application/json;charset=utf-8
2020-06-10 08:36:38,792 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 08:36:38,794 INFO - Successfully validated the token.
2020-06-10 08:36:38,796 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 08:36:38,812 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 08:36:38,816 INFO - Authorization was successful.
2020-06-10 08:36:38,818 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 08:36:38,828 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 08:36:38,834 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 08:36:38,846 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:36:38,847 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:36:38,848 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:36:38,850 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:36:38,851 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:36:38,852 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:36:38,853 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 08:36:38,884 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:38,888 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-10 08:36:38,993 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 08:36:39,031 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 08:36:39,087 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,149 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,153 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,156 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,159 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,200 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,202 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,204 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,205 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,213 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeProffesionType], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,215 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,254 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,257 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,259 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,260 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,300 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,302 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,303 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,304 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,309 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeAuthtorization], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,310 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,345 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,347 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,348 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,349 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,390 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,392 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,393 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,395 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,398 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeTraining], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,399 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,433 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,435 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,436 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,437 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,482 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,484 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,485 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,486 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,490 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeWorkPermit], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,491 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,495 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,496 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 08:36:39,612 INFO - Executed DbCommand (90ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 08:36:39,777 INFO - Executed DbCommand (84ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 08:36:39,901 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 08:36:40,069 INFO - Executed DbCommand (75ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 08:36:40,158 INFO - Executed DbCommand (83ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 08:36:40,258 INFO - Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 08:36:40,352 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 08:36:40,448 INFO - Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 08:36:40,538 INFO - Executed DbCommand (85ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 08:36:42,021 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 3191.0119ms.
2020-06-10 08:36:42,021 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 08:36:42,024 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 08:36:42,031 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 3217.184ms
2020-06-10 08:36:42,032 INFO - Request finished in 3241.0854ms 200 application/json; charset=utf-8
2020-06-10 08:37:07,395 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=100&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 08:37:07,397 INFO - Successfully validated the token.
2020-06-10 08:37:07,399 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 08:37:07,401 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 08:37:07,402 INFO - Authorization was successful.
2020-06-10 08:37:07,403 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 08:37:07,405 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (100, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 08:37:07,407 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 08:37:07,501 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 08:37:07,606 INFO - Executed DbCommand (89ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 08:37:07,688 INFO - Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 08:37:07,813 INFO - Executed DbCommand (121ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 08:37:07,919 INFO - Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 08:37:08,006 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 08:37:08,089 INFO - Executed DbCommand (75ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 08:37:08,185 INFO - Executed DbCommand (90ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 08:37:08,276 INFO - Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 08:37:08,367 INFO - Executed DbCommand (86ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 08:37:28,624 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 21214.742ms.
2020-06-10 08:37:28,626 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 08:37:28,627 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 08:37:28,642 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 21239.5058ms
2020-06-10 08:37:28,643 INFO - Request finished in 21250.692ms 200 application/json; charset=utf-8
2020-06-10 11:06:27,332 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 11:06:27,401 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 11:06:27,688 INFO - Request finished in 374.8692ms 200 text/html
2020-06-10 11:06:29,173 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 11:06:29,180 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 11:06:29,629 INFO - Request finished in 452.2653ms 200 application/json;charset=utf-8
2020-06-10 11:08:08,479 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 11:08:09,684 INFO - Successfully validated the token.
2020-06-10 11:08:09,690 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 11:08:10,247 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 11:08:10,258 INFO - Authorization was successful.
2020-06-10 11:08:10,285 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 11:08:10,292 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 11:08:11,425 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 11:08:11,620 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:08:11,622 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:08:11,623 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:08:11,625 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:08:11,627 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:08:11,628 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:08:11,629 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:08:11,883 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:11,892 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-10 11:08:12,713 INFO - Executed DbCommand (98ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 11:08:12,898 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 11:08:13,082 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,158 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,166 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,168 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,169 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,211 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,212 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,213 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,214 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,224 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeProffesionType], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,227 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,265 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,267 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,268 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,269 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,318 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,320 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,321 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,322 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,328 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeAuthtorization], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,329 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,366 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,367 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,368 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,370 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,412 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,414 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,415 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,416 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,420 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeTraining], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,421 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,459 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,460 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,462 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,463 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,512 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,514 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,515 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,517 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,521 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeWorkPermit], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,525 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,530 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,532 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:08:13,678 INFO - Executed DbCommand (92ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 11:08:13,973 INFO - Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 11:08:14,106 INFO - Executed DbCommand (85ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 11:08:14,286 INFO - Executed DbCommand (77ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 11:08:14,397 INFO - Executed DbCommand (83ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 11:08:14,509 INFO - Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 11:08:14,611 INFO - Executed DbCommand (86ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 11:08:14,714 INFO - Executed DbCommand (80ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 11:08:14,817 INFO - Executed DbCommand (89ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 11:08:36,472 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 26176.9001ms.
2020-06-10 11:08:36,474 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 11:08:36,487 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 11:08:36,505 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 26255.3177ms
2020-06-10 11:08:36,522 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Failed to compare two elements in the array. ---> System.ArgumentException: At least one object must implement IComparable.
   at System.Collections.Comparer.Compare(Object a, Object b)
   at System.Linq.EnumerableSorter`2.CompareAnyKeys(Int32 index1, Int32 index2)
   at System.Collections.Generic.ArraySortHelper`1.InsertionSort(T[] keys, Int32 lo, Int32 hi, Comparison`1 comparer)
   at System.Collections.Generic.GenericArraySortHelper`1.Sort(T[] keys, Int32 index, Int32 length, IComparer`1 comparer)
   --- End of inner exception stack trace ---
   at System.Collections.Generic.GenericArraySortHelper`1.Sort(T[] keys, Int32 index, Int32 length, IComparer`1 comparer)
   at System.Array.Sort[T](T[] array, Int32 index, Int32 length, IComparer`1 comparer)
   at System.Linq.EnumerableSorter`2.QuickSort(Int32[] keys, Int32 lo, Int32 hi)
   at System.Linq.EnumerableSorter`1.Sort(TElement[] elements, Int32 count)
   at System.Linq.OrderedEnumerable`1.GetEnumerator()+MoveNext()
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-10 11:08:36,524 WARN - The response has already started, the error page middleware will not be executed.
2020-06-10 11:08:36,530 ERROR - Connection ID "17654110545197924369", Request ID "80000014-0001-f500-b63f-84710c7967bb": An unhandled exception was thrown by the application.
System.InvalidOperationException: Failed to compare two elements in the array. ---> System.ArgumentException: At least one object must implement IComparable.
   at System.Collections.Comparer.Compare(Object a, Object b)
   at System.Linq.EnumerableSorter`2.CompareAnyKeys(Int32 index1, Int32 index2)
   at System.Collections.Generic.ArraySortHelper`1.InsertionSort(T[] keys, Int32 lo, Int32 hi, Comparison`1 comparer)
   at System.Collections.Generic.GenericArraySortHelper`1.Sort(T[] keys, Int32 index, Int32 length, IComparer`1 comparer)
   --- End of inner exception stack trace ---
   at System.Collections.Generic.GenericArraySortHelper`1.Sort(T[] keys, Int32 index, Int32 length, IComparer`1 comparer)
   at System.Array.Sort[T](T[] array, Int32 index, Int32 length, IComparer`1 comparer)
   at System.Linq.EnumerableSorter`2.QuickSort(Int32[] keys, Int32 lo, Int32 hi)
   at System.Linq.EnumerableSorter`1.Sort(TElement[] elements, Int32 count)
   at System.Linq.OrderedEnumerable`1.GetEnumerator()+MoveNext()
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Server.IIS.Core.IISHttpContextOfT`1.ProcessRequestAsync()
2020-06-10 11:08:36,536 INFO - Request finished in 28057.8038ms 200 application/json; charset=utf-8
2020-06-10 11:08:38,795 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 11:08:38,798 INFO - Successfully validated the token.
2020-06-10 11:08:38,800 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 11:08:38,802 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 11:08:38,808 INFO - Authorization was successful.
2020-06-10 11:08:38,809 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 11:08:38,811 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 11:08:38,817 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 11:08:38,931 INFO - Executed DbCommand (101ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 11:08:39,053 INFO - Executed DbCommand (89ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 11:08:39,166 INFO - Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 11:08:39,257 INFO - Executed DbCommand (83ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 11:08:39,338 INFO - Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 11:08:39,425 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 11:08:39,506 INFO - Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 11:08:39,593 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 11:08:39,675 INFO - Executed DbCommand (78ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 11:08:39,766 INFO - Executed DbCommand (88ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 11:09:37,322 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 58509.7413ms.
2020-06-10 11:09:37,322 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 11:09:37,324 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 11:09:37,327 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 58524.0041ms
2020-06-10 11:09:37,335 ERROR - An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Failed to compare two elements in the array. ---> System.ArgumentException: At least one object must implement IComparable.
   at System.Collections.Comparer.Compare(Object a, Object b)
   at System.Linq.EnumerableSorter`2.CompareAnyKeys(Int32 index1, Int32 index2)
   at System.Collections.Generic.ArraySortHelper`1.InsertionSort(T[] keys, Int32 lo, Int32 hi, Comparison`1 comparer)
   at System.Collections.Generic.GenericArraySortHelper`1.Sort(T[] keys, Int32 index, Int32 length, IComparer`1 comparer)
   --- End of inner exception stack trace ---
   at System.Collections.Generic.GenericArraySortHelper`1.Sort(T[] keys, Int32 index, Int32 length, IComparer`1 comparer)
   at System.Array.Sort[T](T[] array, Int32 index, Int32 length, IComparer`1 comparer)
   at System.Linq.EnumerableSorter`2.QuickSort(Int32[] keys, Int32 lo, Int32 hi)
   at System.Linq.EnumerableSorter`1.Sort(TElement[] elements, Int32 count)
   at System.Linq.OrderedEnumerable`1.GetEnumerator()+MoveNext()
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-06-10 11:09:37,338 WARN - The response has already started, the error page middleware will not be executed.
2020-06-10 11:09:37,343 ERROR - Connection ID "17654110545197924369", Request ID "80000015-0001-f500-b63f-84710c7967bb": An unhandled exception was thrown by the application.
System.InvalidOperationException: Failed to compare two elements in the array. ---> System.ArgumentException: At least one object must implement IComparable.
   at System.Collections.Comparer.Compare(Object a, Object b)
   at System.Linq.EnumerableSorter`2.CompareAnyKeys(Int32 index1, Int32 index2)
   at System.Collections.Generic.ArraySortHelper`1.InsertionSort(T[] keys, Int32 lo, Int32 hi, Comparison`1 comparer)
   at System.Collections.Generic.GenericArraySortHelper`1.Sort(T[] keys, Int32 index, Int32 length, IComparer`1 comparer)
   --- End of inner exception stack trace ---
   at System.Collections.Generic.GenericArraySortHelper`1.Sort(T[] keys, Int32 index, Int32 length, IComparer`1 comparer)
   at System.Array.Sort[T](T[] array, Int32 index, Int32 length, IComparer`1 comparer)
   at System.Linq.EnumerableSorter`2.QuickSort(Int32[] keys, Int32 lo, Int32 hi)
   at System.Linq.EnumerableSorter`1.Sort(TElement[] elements, Int32 count)
   at System.Linq.OrderedEnumerable`1.GetEnumerator()+MoveNext()
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteObject(TextWriter writer, Object value)
   at Microsoft.AspNetCore.Mvc.Formatters.JsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Server.IIS.Core.IISHttpContextOfT`1.ProcessRequestAsync()
2020-06-10 11:09:37,346 INFO - Request finished in 58550.8623ms 200 application/json; charset=utf-8
2020-06-10 11:09:39,260 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 11:09:39,262 INFO - Successfully validated the token.
2020-06-10 11:09:39,264 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 11:09:39,265 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 11:09:39,269 INFO - Authorization was successful.
2020-06-10 11:09:39,269 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 11:09:39,271 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 11:09:39,273 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 11:09:39,361 INFO - Executed DbCommand (82ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 11:09:39,476 INFO - Executed DbCommand (92ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 11:09:39,563 INFO - Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 11:09:39,651 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 11:09:39,739 INFO - Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 11:09:39,901 INFO - Executed DbCommand (158ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 11:09:40,019 INFO - Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 11:09:40,108 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 11:09:40,190 INFO - Executed DbCommand (76ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 11:09:40,288 INFO - Executed DbCommand (92ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 11:12:00,537 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 11:12:00,602 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 11:12:00,834 INFO - Request finished in 311.1268ms 200 text/html
2020-06-10 11:12:01,530 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 11:12:01,629 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 11:12:02,671 INFO - Request finished in 1195.7348ms 200 application/json;charset=utf-8
2020-06-10 11:12:17,551 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 11:12:18,894 INFO - Successfully validated the token.
2020-06-10 11:12:18,901 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 11:12:19,456 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 11:12:19,467 INFO - Authorization was successful.
2020-06-10 11:12:19,491 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 11:12:19,499 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 11:12:20,621 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 11:12:20,811 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:12:20,812 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:12:20,813 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:12:20,814 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:12:20,815 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:12:20,817 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:12:20,818 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:12:21,072 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:21,081 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-10 11:12:21,971 INFO - Executed DbCommand (102ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 11:12:22,151 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 11:12:22,338 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,418 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,426 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,428 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,430 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,472 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,473 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,474 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,475 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,487 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeProffesionType], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,489 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,529 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,530 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,531 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,533 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,578 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,580 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,581 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,584 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,589 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeAuthtorization], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,591 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,637 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,639 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,641 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,642 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,688 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,690 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,692 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,694 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,698 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeTraining], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,700 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,735 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,737 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,739 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,740 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,781 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,784 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,786 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,787 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,791 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeWorkPermit], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,792 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,797 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,799 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:12:22,953 INFO - Executed DbCommand (98ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 11:12:23,275 INFO - Executed DbCommand (75ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 11:12:23,413 INFO - Executed DbCommand (91ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 11:12:23,620 INFO - Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 11:12:23,719 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 11:12:23,827 INFO - Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 11:12:23,920 INFO - Executed DbCommand (83ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 11:12:24,019 INFO - Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 11:12:24,136 INFO - Executed DbCommand (95ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 11:13:41,779 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 11:13:41,819 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 11:13:41,984 INFO - Request finished in 210.7181ms 200 text/html
2020-06-10 11:13:42,227 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 11:13:42,236 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 11:13:42,809 INFO - Request finished in 579.9771ms 200 application/json;charset=utf-8
2020-06-10 11:13:56,190 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 11:13:57,398 INFO - Successfully validated the token.
2020-06-10 11:13:57,405 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 11:13:57,893 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 11:13:57,903 INFO - Authorization was successful.
2020-06-10 11:13:57,927 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 11:13:57,933 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 11:13:59,026 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 11:13:59,207 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:13:59,209 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:13:59,210 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:13:59,211 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:13:59,212 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:13:59,214 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:13:59,215 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:13:59,461 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:13:59,470 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,269 INFO - Executed DbCommand (97ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 11:14:00,446 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 11:14:00,635 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,705 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,718 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,722 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,726 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,773 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,774 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,775 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,776 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,786 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeProffesionType], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,788 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,825 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,827 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,828 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,829 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,870 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,871 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,872 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,873 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,877 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeAuthtorization], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,879 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,917 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,918 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,919 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,920 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,966 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,968 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,969 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,970 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,975 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeTraining], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:14:00,976 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,013 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,015 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,016 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,017 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,056 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,058 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,059 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,060 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,065 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeWorkPermit], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,066 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,072 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,073 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:14:01,220 INFO - Executed DbCommand (90ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 11:14:01,528 INFO - Executed DbCommand (77ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 11:14:01,660 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 11:14:01,835 INFO - Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 11:14:01,933 INFO - Executed DbCommand (84ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 11:14:02,041 INFO - Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 11:14:02,141 INFO - Executed DbCommand (89ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 11:14:02,270 INFO - Executed DbCommand (81ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 11:14:02,371 INFO - Executed DbCommand (81ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 11:17:04,196 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 11:17:04,236 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 11:17:04,476 INFO - Request finished in 276.2774ms 200 text/html
2020-06-10 11:17:04,691 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 11:17:04,708 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 11:17:05,349 INFO - Request finished in 657.973ms 200 application/json;charset=utf-8
2020-06-10 11:17:34,536 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=10&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 11:17:35,746 INFO - Successfully validated the token.
2020-06-10 11:17:35,753 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 11:17:36,256 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 11:17:36,267 INFO - Authorization was successful.
2020-06-10 11:17:36,292 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 11:17:36,299 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (10, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 11:17:37,446 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 11:17:37,643 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:17:37,645 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:17:37,646 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:17:37,647 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:17:37,648 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:17:37,649 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:17:37,650 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 11:17:37,906 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:37,915 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-10 11:17:38,720 INFO - Executed DbCommand (103ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 11:17:38,903 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 11:17:39,090 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,166 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,173 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,176 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,178 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,222 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,224 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,225 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,227 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,241 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeProffesionType], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,243 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,283 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,284 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,285 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,287 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,329 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,331 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,332 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,333 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,337 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeAuthtorization], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,338 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,375 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,376 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,377 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,380 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,420 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,421 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,422 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,423 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,431 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeTraining], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,432 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,476 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,477 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,479 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,480 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,519 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,521 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,522 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,523 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,527 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeWorkPermit], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,530 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,534 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,535 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 11:17:39,676 INFO - Executed DbCommand (94ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 11:17:39,987 INFO - Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 11:17:40,176 INFO - Executed DbCommand (99ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 11:17:40,361 INFO - Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 11:17:40,466 INFO - Executed DbCommand (91ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 11:17:40,588 INFO - Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 11:17:40,698 INFO - Executed DbCommand (92ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 11:17:40,812 INFO - Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 11:17:40,911 INFO - Executed DbCommand (90ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 11:17:47,889 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 11586.7868ms.
2020-06-10 11:17:47,891 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 11:17:47,904 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 11:17:47,988 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 11729.367ms
2020-06-10 11:17:47,996 INFO - Request finished in 13460.0724ms 200 application/json; charset=utf-8
2020-06-10 11:18:25,590 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=100&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 11:18:25,596 INFO - Successfully validated the token.
2020-06-10 11:18:25,599 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 11:18:25,604 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 11:18:25,611 INFO - Authorization was successful.
2020-06-10 11:18:25,612 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 11:18:25,615 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (100, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 11:18:25,620 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 11:18:25,728 INFO - Executed DbCommand (91ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 11:18:25,837 INFO - Executed DbCommand (94ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 11:18:25,930 INFO - Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 11:18:26,028 INFO - Executed DbCommand (93ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 11:18:26,124 INFO - Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 11:18:26,224 INFO - Executed DbCommand (93ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 11:18:26,321 INFO - Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 11:18:26,421 INFO - Executed DbCommand (96ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 11:18:26,516 INFO - Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 11:18:26,615 INFO - Executed DbCommand (94ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 11:18:29,330 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 3712.4904ms.
2020-06-10 11:18:29,330 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 11:18:29,331 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 11:18:29,348 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 3743.3554ms
2020-06-10 11:18:29,350 INFO - Request finished in 3760.3039ms 200 application/json; charset=utf-8
2020-06-10 11:18:53,372 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=100&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 11:18:53,375 INFO - Successfully validated the token.
2020-06-10 11:18:53,376 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 11:18:53,379 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 11:18:53,381 INFO - Authorization was successful.
2020-06-10 11:18:53,381 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 11:18:53,382 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (100, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 11:18:53,384 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 11:18:53,479 INFO - Executed DbCommand (90ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 11:18:53,587 INFO - Executed DbCommand (96ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 11:18:53,685 INFO - Executed DbCommand (86ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 11:18:53,779 INFO - Executed DbCommand (91ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 11:18:53,877 INFO - Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 11:18:53,971 INFO - Executed DbCommand (90ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 11:18:54,061 INFO - Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 11:18:54,155 INFO - Executed DbCommand (90ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 11:18:54,247 INFO - Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 11:18:54,395 INFO - Executed DbCommand (144ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 11:19:22,114 INFO - Executed action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API), returned result Microsoft.AspNetCore.Mvc.ObjectResult in 28729.709ms.
2020-06-10 11:19:22,114 INFO - The GetEmployeesAsync have been retrieved successfully.
2020-06-10 11:19:22,115 INFO - Executing ObjectResult, writing value of type 'Malam.Mastpen.Core.BL.Responses.PagedResponse`1[[Malam.Mastpen.Core.BL.Requests.EmployeeResponse, Malam.Mastpen.HR.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-10 11:19:22,132 INFO - Executed action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) in 28751.6646ms
2020-06-10 11:19:22,133 INFO - Request finished in 28762.4883ms 200 application/json; charset=utf-8
2020-06-10 13:05:47,000 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 13:05:47,043 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 13:05:47,239 INFO - Request finished in 243.9164ms 200 text/html
2020-06-10 13:05:47,497 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 13:05:47,505 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 13:05:48,284 INFO - Request finished in 783.3172ms 200 application/json;charset=utf-8
2020-06-10 13:06:08,020 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=1000&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 13:06:08,924 INFO - Successfully validated the token.
2020-06-10 13:06:08,930 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 13:06:09,421 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 13:06:09,431 INFO - Authorization was successful.
2020-06-10 13:06:09,457 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 13:06:09,463 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (1000, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 13:06:10,577 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 13:06:10,769 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:06:10,771 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:06:10,772 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:06:10,773 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:06:10,774 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:06:10,775 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:06:10,776 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:06:11,035 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:11,045 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-10 13:06:11,897 INFO - Executed DbCommand (103ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 13:06:12,073 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 13:06:12,264 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,348 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,356 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,358 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,360 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,402 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,404 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,406 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,407 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,416 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeProffesionType], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,419 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,462 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,463 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,465 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,466 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,512 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,513 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,515 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,516 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,526 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeAuthtorization], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,527 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,575 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,577 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,579 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,582 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,627 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,629 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,630 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,631 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,636 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeTraining], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,638 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,677 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,680 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,681 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,682 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,730 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,732 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,734 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,737 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,744 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeWorkPermit], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,746 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,751 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,753 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:06:12,900 INFO - Executed DbCommand (97ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 13:06:13,205 INFO - Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 13:06:13,345 INFO - Executed DbCommand (90ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 13:06:13,546 INFO - Executed DbCommand (89ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 13:06:13,654 INFO - Executed DbCommand (89ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 13:06:13,779 INFO - Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 13:06:13,879 INFO - Executed DbCommand (91ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 13:06:13,988 INFO - Executed DbCommand (83ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 13:06:14,092 INFO - Executed DbCommand (94ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
2020-06-10 13:10:56,406 INFO - Request starting HTTP/1.1 GET http://localhost:59821/index.html  
2020-06-10 13:10:56,488 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 13:10:56,728 INFO - Request finished in 304.4287ms 200 text/html
2020-06-10 13:10:56,978 INFO - Request starting HTTP/1.1 GET http://localhost:59821/swagger/v1/swagger.json  
2020-06-10 13:10:56,983 DEBUG - AuthenticationScheme: Bearer was not authenticated.
2020-06-10 13:10:57,694 INFO - Request finished in 673.1081ms 200 application/json;charset=utf-8
2020-06-10 13:12:33,519 INFO - Request starting HTTP/1.1 GET http://localhost:59821/api/v1/Health/Employee?pageSize=1000&pageNumber=1&OrganizationId=1&isEmployeeEntry=false&sortByAuthtorization=false&sortByTraining=false&sortByWorkPermit=false&sortHealthDeclaration=true  
2020-06-10 13:12:34,503 INFO - Successfully validated the token.
2020-06-10 13:12:34,510 DEBUG - AuthenticationScheme: Bearer was successfully authenticated.
2020-06-10 13:12:35,037 INFO - Route matched with {action = "GetEmployeesAsync", controller = "Health"}. Executing action Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API)
2020-06-10 13:12:35,047 INFO - Authorization was successful.
2020-06-10 13:12:35,074 INFO - 'GetEmployeesAsync' has been invoked
2020-06-10 13:12:35,088 INFO - Executing action method Malam.Mastpen.API.Controllers.HealthController.GetEmployeesAsync (Malam.Mastpen.HR.API) with arguments (1000, 1, , , , 1, , , , , False, False, False, False, True) - Validation state: Valid
2020-06-10 13:12:36,268 INFO - Entity Framework Core 2.2.4-servicing-10062 initialized 'MastpenBitachonDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-06-10 13:12:36,463 WARN - The Include operation for navigation '[b].IdentificationType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:12:36,465 WARN - The Include operation for navigation '[b].Organization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:12:36,466 WARN - The Include operation for navigation '[b].EmployeeProffesionType.ProffesionType' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:12:36,467 WARN - The Include operation for navigation '[b].PassportCountry' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:12:36,468 WARN - The Include operation for navigation '[b].EmployeeAuthtorization' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:12:36,469 WARN - The Include operation for navigation '[b].EmployeeTraining' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:12:36,472 WARN - The Include operation for navigation '[b].EmployeeWorkPermit' is unnecessary and was ignored because the navigation is not reachable in the final query results. See https://go.microsoft.com/fwlink/?linkid=850303 for more information.
2020-06-10 13:12:36,739 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:36,750 WARN - The LINQ expression 'Count()' could not be translated and will be evaluated locally.
2020-06-10 13:12:37,625 INFO - Executed DbCommand (116ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
2020-06-10 13:12:37,805 WARN - Query: '(from Employee b in DbSet<Employee> join Docs docsFaceImage in  from Docs a in DbSet<Docs> where [a]...' uses a row limiting operation (Skip/Take) without OrderBy which may lead to unpredictable results.
2020-06-10 13:12:37,994 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,072 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,085 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,089 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,091 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,135 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,137 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,139 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,140 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,149 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeProffesionType], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,151 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,192 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,193 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,194 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,195 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,235 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,237 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,238 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,239 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,243 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeAuthtorization], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,244 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,283 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,285 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,287 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,289 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,338 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,339 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,340 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,341 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,345 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeTraining], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,346 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,383 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,385 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,386 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,387 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,428 WARN - The LINQ expression 'where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,429 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,430 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,431 WARN - The LINQ expression 'Distinct()' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,435 WARN - The LINQ expression 'join AnonymousObject _b in {from Employee b in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Employee]) join Country b.PassportCountry in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Country]) on Property([b], "PassportCountryId") equals Convert(Property([b.PassportCountry], "CountryId"), Nullable`1) into IEnumerable`1 b.PassportCountry_group from Country b.PassportCountry in {[b.PassportCountry_group] => DefaultIfEmpty()} join Organization b.Organization in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Organization]) on Property([b], "OrganizationId") equals Property([b.Organization], "OrganizationId") into IEnumerable`1 b.Organization_group from Organization b.Organization in {[b.Organization_group] => DefaultIfEmpty()} join IdentificationType b.IdentificationType in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.IdentificationType]) on Property([b], "IdentificationTypeId") equals Convert(Property([b.IdentificationType], "IdentificationTypeId"), Nullable`1) into IEnumerable`1 b.IdentificationType_group from IdentificationType b.IdentificationType in {[b.IdentificationType_group] => DefaultIfEmpty()} join Docs docsFaceImage in {from Docs a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.Docs]) where ([a].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_0) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) where ([a].DocumentTypeId == 7) select [a]} on Convert([b].EmployeeId, Nullable`1) equals [docsFaceImage].EntityId into IEnumerable`1 docsFaceImage from Docs x_docsFaceImage in {[docsFaceImage] => DefaultIfEmpty()} join EmployeeEntry employeeEntry in {from EmployeeEntry item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmployeeEntry]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [employeeEntry].EmployeeId into IEnumerable`1 employeeEntry from EmployeeEntry x_employeeEntry in {[employeeEntry] => DefaultIfEmpty()} join EquipmenAtSite equipmenAtSite in {from EquipmenAtSite a in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EquipmenAtSite]) where ([a].SiteId == __SiteId_1) select [a]} on [x_employeeEntry]?.EquipmentId equals [equipmenAtSite].EquipmentId into IEnumerable`1 equipmenAtSite from EquipmenAtSite x_equipmenAtSite in {[equipmenAtSite] => DefaultIfEmpty()} join SiteEmployee siteEmployee in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.SiteEmployee]) on Convert([b].EmployeeId, Nullable`1) equals [siteEmployee].EmployeeId into IEnumerable`1 siteEmployee from SiteEmployee x_siteEmployee in {[siteEmployee] => DefaultIfEmpty()} join EmplyeePicture docsEmplyeePicture in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EmplyeePicture]) on Convert([b].EmployeeId, Nullable`1) equals [docsEmplyeePicture].EmployeeId into IEnumerable`1 docsEmplyeePicture from EmplyeePicture x_docsEmplyeePicture in {[docsEmplyeePicture] => DefaultIfEmpty()} join HealthDeclaration healthDeclaration in {from HealthDeclaration item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.HealthDeclaration]) where (Convert([item].Date, DateTime).Date == DateTime.Now.Date) where ([item].EntityTypeId == {from EntityType item in value(Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[Malam.Mastpen.Core.DAL.Entities.EntityType]) where ([item].EntityTypeName == __tableName_2) select Convert([item].EntityTypeId, Nullable`1) => FirstOrDefault()}) select [item]} on Convert([b].EmployeeId, Nullable`1) equals [healthDeclaration].EntityId into IEnumerable`1 healthDeclaration from HealthDeclaration x_healthDeclaration in {[healthDeclaration] => DefaultIfEmpty()} where ([b].ToEntity(null, [x_docsFaceImage], null, null, [x_equipmenAtSite], [x_siteEmployee], [x_docsEmplyeePicture], [x_healthDeclaration]).OrganizationId == __OrganizationId_3) orderby EF.Property(?[b]?, "EmployeeId") asc select new AnonymousObject(new [] {Convert(EF.Property(?[b]?, "EmployeeId"), Object)}) => Skip(__p_4) => Take(__p_5) => Distinct()} on Property([b.EmployeeWorkPermit], "EmployeeId") equals Convert([_b].GetValue(0), Nullable`1)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,437 WARN - The LINQ expression 'orderby [_b].GetValue(0) asc' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,441 WARN - The LINQ expression 'Skip(__p_4)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,443 WARN - The LINQ expression 'Take(__p_5)' could not be translated and will be evaluated locally.
2020-06-10 13:12:38,599 INFO - Executed DbCommand (109ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b].[EmployeeID], [b].[Address], [b].[BirthDate], [b].[Citizenship], [b].[dateInsert], [b].[dateUpdate], [b].[FirstName], [b].[FirstNameEN], [b].[GenderID], [b].[Guid], [b].[IdentificationTypeID], [b].[IdentityNumber], [b].[LastName], [b].[LastNameEN], [b].[OrganizationID], [b].[PassportCountryID], [b].[state], [b].[userInsert], [b].[UserUpdate], [b.PassportCountry].[CountryID], [b.PassportCountry].[CountryName], [b.PassportCountry].[dateInsert], [b.PassportCountry].[dateUpdate], [b.PassportCountry].[LanguageID], [b.PassportCountry].[state], [b.PassportCountry].[userInsert], [b.PassportCountry].[UserUpdate], [b.Organization].[OrganizationID], [b.Organization].[Comment], [b.Organization].[dateInsert], [b.Organization].[dateUpdate], [b.Organization].[OrganizationExpertiseTypeID], [b.Organization].[OrganizationFaceGroup], [b.Organization].[OrganizationName], [b.Organization].[OrganizationNumber], [b.Organization].[OrganizationParentID], [b.Organization].[OrganizationTypeID], [b.Organization].[state], [b.Organization].[userInsert], [b.Organization].[UserUpdate], [b.IdentificationType].[IdentificationTypeID], [b.IdentificationType].[Comment], [b.IdentificationType].[dateInsert], [b.IdentificationType].[dateUpdate], [b.IdentificationType].[IdentificationTypeName], [b.IdentificationType].[state], [b.IdentificationType].[userInsert], [b.IdentificationType].[UserUpdate], [t].[DocumentID], [t].[dateInsert], [t].[dateUpdate], [t].[DocumentDate], [t].[DocumentPath], [t].[DocumentTypeID], [t].[EntityID], [t].[EntityTypeID], [t].[IsDocumentSigned], [t].[LanguageID], [t].[state], [t].[userInsert], [t].[UserUpdate], [t].[ValIdDate], [t1].[EquipmentAtSiteID], [t1].[Comment], [t1].[DateFrom], [t1].[dateInsert], [t1].[DateTo], [t1].[dateUpdate], [t1].[EquipmentID], [t1].[SiteID], [t1].[state], [t1].[userInsert], [t1].[UserUpdate], [siteEmployee].[SiteEmployeeID], [siteEmployee].[Comment], [siteEmployee].[DateFrom], [siteEmployee].[dateInsert], [siteEmployee].[DateTo], [siteEmployee].[dateUpdate], [siteEmployee].[EmployeeID], [siteEmployee].[SiteID], [siteEmployee].[state], [siteEmployee].[userInsert], [siteEmployee].[UserUpdate], [docsEmplyeePicture].[EmployeePictureID], [docsEmplyeePicture].[dateInsert], [docsEmplyeePicture].[dateUpdate], [docsEmplyeePicture].[EmployeeFacePrintID], [docsEmplyeePicture].[EmployeeID], [docsEmplyeePicture].[EmployeePicture], [docsEmplyeePicture].[IsUniqueDoc], [docsEmplyeePicture].[state], [docsEmplyeePicture].[userInsert], [docsEmplyeePicture].[UserUpdate], [t2].[DeclarationID], [t2].[Date], [t2].[dateInsert], [t2].[dateUpdate], [t2].[EntityID], [t2].[EntityTypeID], [t2].[FullName], [t2].[IdentityNumber], [t2].[SiteID], [t2].[state], [t2].[userInsert], [t2].[UserUpdate]
FROM [BB_HR_Employee] AS [b]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry] ON [b].[PassportCountryID] = [b.PassportCountry].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization] ON [b].[OrganizationID] = [b.Organization].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType] ON [b].[IdentificationTypeID] = [b.IdentificationType].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a].[DocumentID], [a].[dateInsert], [a].[dateUpdate], [a].[DocumentDate], [a].[DocumentPath], [a].[DocumentTypeID], [a].[EntityID], [a].[EntityTypeID], [a].[IsDocumentSigned], [a].[LanguageID], [a].[state], [a].[userInsert], [a].[UserUpdate], [a].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a]
    WHERE ([a].[EntityTypeID] = (
        SELECT TOP(1) [item].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item]
        WHERE [item].[EntityTypeName] = @__tableName_0
    )) AND ([a].[DocumentTypeID] = 7)
) AS [t] ON [b].[EmployeeID] = [t].[EntityID]
LEFT JOIN (
    SELECT [item0].*
    FROM [BB_EC_EmployeeEntry] AS [item0]
    WHERE CONVERT(date, [item0].[Date]) = CONVERT(date, GETDATE())
) AS [t0] ON [b].[EmployeeID] = [t0].[EmployeeID]
LEFT JOIN (
    SELECT [a0].[EquipmentAtSiteID], [a0].[Comment], [a0].[DateFrom], [a0].[dateInsert], [a0].[DateTo], [a0].[dateUpdate], [a0].[EquipmentID], [a0].[SiteID], [a0].[state], [a0].[userInsert], [a0].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a0]
    WHERE [a0].[SiteID] IS NULL
) AS [t1] ON [t0].[EquipmentID] = [t1].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee] ON [b].[EmployeeID] = [siteEmployee].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture] ON [b].[EmployeeID] = [docsEmplyeePicture].[EmployeeID]
LEFT JOIN (
    SELECT [item1].[DeclarationID], [item1].[Date], [item1].[dateInsert], [item1].[dateUpdate], [item1].[EntityID], [item1].[EntityTypeID], [item1].[FullName], [item1].[IdentityNumber], [item1].[SiteID], [item1].[state], [item1].[userInsert], [item1].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item1]
    WHERE (CONVERT(date, [item1].[Date]) = CONVERT(date, GETDATE())) AND ([item1].[EntityTypeID] = (
        SELECT TOP(1) [item2].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item2]
        WHERE [item2].[EntityTypeName] = @__tableName_2
    ))
) AS [t2] ON [b].[EmployeeID] = [t2].[EntityID]
ORDER BY [b].[EmployeeID]
2020-06-10 13:12:38,916 INFO - Executed DbCommand (100ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeProffesionType].[EmployeeAuthorizationID], [b.EmployeeProffesionType].[Comment], [b.EmployeeProffesionType].[dateInsert], [b.EmployeeProffesionType].[dateUpdate], [b.EmployeeProffesionType].[EmployeeID], [b.EmployeeProffesionType].[ProffesionTypeID], [b.EmployeeProffesionType].[state], [b.EmployeeProffesionType].[userInsert], [b.EmployeeProffesionType].[UserUpdate], [e.ProffesionType].[ProffesionTypeID], [e.ProffesionType].[Comment], [e.ProffesionType].[dateInsert], [e.ProffesionType].[dateUpdate], [e.ProffesionType].[ProffesionTypeName], [e.ProffesionType].[state], [e.ProffesionType].[userInsert], [e.ProffesionType].[UserUpdate]
FROM [BB_HR_EmployeeProffesionType] AS [b.EmployeeProffesionType]
LEFT JOIN [BB_HR_ProffesionType] AS [e.ProffesionType] ON [b.EmployeeProffesionType].[ProffesionTypeID] = [e.ProffesionType].[ProffesionTypeID]
2020-06-10 13:12:39,097 INFO - Executed DbCommand (107ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b1].[EmployeeID], [b1].[Address], [b1].[BirthDate], [b1].[Citizenship], [b1].[dateInsert], [b1].[dateUpdate], [b1].[FirstName], [b1].[FirstNameEN], [b1].[GenderID], [b1].[Guid], [b1].[IdentificationTypeID], [b1].[IdentityNumber], [b1].[LastName], [b1].[LastNameEN], [b1].[OrganizationID], [b1].[PassportCountryID], [b1].[state], [b1].[userInsert], [b1].[UserUpdate], [t7].[DocumentID], [t7].[dateInsert], [t7].[dateUpdate], [t7].[DocumentDate], [t7].[DocumentPath], [t7].[DocumentTypeID], [t7].[EntityID], [t7].[EntityTypeID], [t7].[IsDocumentSigned], [t7].[LanguageID], [t7].[state], [t7].[userInsert], [t7].[UserUpdate], [t7].[ValIdDate], [t9].[EquipmentAtSiteID], [t9].[Comment], [t9].[DateFrom], [t9].[dateInsert], [t9].[DateTo], [t9].[dateUpdate], [t9].[EquipmentID], [t9].[SiteID], [t9].[state], [t9].[userInsert], [t9].[UserUpdate], [siteEmployee1].[SiteEmployeeID], [siteEmployee1].[Comment], [siteEmployee1].[DateFrom], [siteEmployee1].[dateInsert], [siteEmployee1].[DateTo], [siteEmployee1].[dateUpdate], [siteEmployee1].[EmployeeID], [siteEmployee1].[SiteID], [siteEmployee1].[state], [siteEmployee1].[userInsert], [siteEmployee1].[UserUpdate], [docsEmplyeePicture1].[EmployeePictureID], [docsEmplyeePicture1].[dateInsert], [docsEmplyeePicture1].[dateUpdate], [docsEmplyeePicture1].[EmployeeFacePrintID], [docsEmplyeePicture1].[EmployeeID], [docsEmplyeePicture1].[EmployeePicture], [docsEmplyeePicture1].[IsUniqueDoc], [docsEmplyeePicture1].[state], [docsEmplyeePicture1].[userInsert], [docsEmplyeePicture1].[UserUpdate], [t10].[DeclarationID], [t10].[Date], [t10].[dateInsert], [t10].[dateUpdate], [t10].[EntityID], [t10].[EntityTypeID], [t10].[FullName], [t10].[IdentityNumber], [t10].[SiteID], [t10].[state], [t10].[userInsert], [t10].[UserUpdate]
FROM [BB_HR_Employee] AS [b1]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry1] ON [b1].[PassportCountryID] = [b.PassportCountry1].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization1] ON [b1].[OrganizationID] = [b.Organization1].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType1] ON [b1].[IdentificationTypeID] = [b.IdentificationType1].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a3].[DocumentID], [a3].[dateInsert], [a3].[dateUpdate], [a3].[DocumentDate], [a3].[DocumentPath], [a3].[DocumentTypeID], [a3].[EntityID], [a3].[EntityTypeID], [a3].[IsDocumentSigned], [a3].[LanguageID], [a3].[state], [a3].[userInsert], [a3].[UserUpdate], [a3].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a3]
    WHERE ([a3].[EntityTypeID] = (
        SELECT TOP(1) [item7].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item7]
        WHERE [item7].[EntityTypeName] = @__tableName_0
    )) AND ([a3].[DocumentTypeID] = 7)
) AS [t7] ON [b1].[EmployeeID] = [t7].[EntityID]
LEFT JOIN (
    SELECT [item8].*
    FROM [BB_EC_EmployeeEntry] AS [item8]
    WHERE CONVERT(date, [item8].[Date]) = CONVERT(date, GETDATE())
) AS [t8] ON [b1].[EmployeeID] = [t8].[EmployeeID]
LEFT JOIN (
    SELECT [a4].[EquipmentAtSiteID], [a4].[Comment], [a4].[DateFrom], [a4].[dateInsert], [a4].[DateTo], [a4].[dateUpdate], [a4].[EquipmentID], [a4].[SiteID], [a4].[state], [a4].[userInsert], [a4].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a4]
    WHERE [a4].[SiteID] IS NULL
) AS [t9] ON [t8].[EquipmentID] = [t9].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee1] ON [b1].[EmployeeID] = [siteEmployee1].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture1] ON [b1].[EmployeeID] = [docsEmplyeePicture1].[EmployeeID]
LEFT JOIN (
    SELECT [item9].[DeclarationID], [item9].[Date], [item9].[dateInsert], [item9].[dateUpdate], [item9].[EntityID], [item9].[EntityTypeID], [item9].[FullName], [item9].[IdentityNumber], [item9].[SiteID], [item9].[state], [item9].[userInsert], [item9].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item9]
    WHERE (CONVERT(date, [item9].[Date]) = CONVERT(date, GETDATE())) AND ([item9].[EntityTypeID] = (
        SELECT TOP(1) [item10].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item10]
        WHERE [item10].[EntityTypeName] = @__tableName_2
    ))
) AS [t10] ON [b1].[EmployeeID] = [t10].[EntityID]
ORDER BY [b1].[EmployeeID]
2020-06-10 13:12:39,314 INFO - Executed DbCommand (96ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeAuthtorization].[EmployeeAuthorizationID], [b.EmployeeAuthtorization].[AuthorizationTypeID], [b.EmployeeAuthtorization].[Comment], [b.EmployeeAuthtorization].[DateFrom], [b.EmployeeAuthtorization].[dateInsert], [b.EmployeeAuthtorization].[DateTo], [b.EmployeeAuthtorization].[dateUpdate], [b.EmployeeAuthtorization].[EmployeeAuthorizationName], [b.EmployeeAuthtorization].[EmployeeID], [b.EmployeeAuthtorization].[SiteId], [b.EmployeeAuthtorization].[state], [b.EmployeeAuthtorization].[userInsert], [b.EmployeeAuthtorization].[UserUpdate]
FROM [BB_HR_EmployeeAuthtorization] AS [b.EmployeeAuthtorization]
2020-06-10 13:12:39,459 INFO - Executed DbCommand (106ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b3].[EmployeeID], [b3].[Address], [b3].[BirthDate], [b3].[Citizenship], [b3].[dateInsert], [b3].[dateUpdate], [b3].[FirstName], [b3].[FirstNameEN], [b3].[GenderID], [b3].[Guid], [b3].[IdentificationTypeID], [b3].[IdentityNumber], [b3].[LastName], [b3].[LastNameEN], [b3].[OrganizationID], [b3].[PassportCountryID], [b3].[state], [b3].[userInsert], [b3].[UserUpdate], [t15].[DocumentID], [t15].[dateInsert], [t15].[dateUpdate], [t15].[DocumentDate], [t15].[DocumentPath], [t15].[DocumentTypeID], [t15].[EntityID], [t15].[EntityTypeID], [t15].[IsDocumentSigned], [t15].[LanguageID], [t15].[state], [t15].[userInsert], [t15].[UserUpdate], [t15].[ValIdDate], [t17].[EquipmentAtSiteID], [t17].[Comment], [t17].[DateFrom], [t17].[dateInsert], [t17].[DateTo], [t17].[dateUpdate], [t17].[EquipmentID], [t17].[SiteID], [t17].[state], [t17].[userInsert], [t17].[UserUpdate], [siteEmployee3].[SiteEmployeeID], [siteEmployee3].[Comment], [siteEmployee3].[DateFrom], [siteEmployee3].[dateInsert], [siteEmployee3].[DateTo], [siteEmployee3].[dateUpdate], [siteEmployee3].[EmployeeID], [siteEmployee3].[SiteID], [siteEmployee3].[state], [siteEmployee3].[userInsert], [siteEmployee3].[UserUpdate], [docsEmplyeePicture3].[EmployeePictureID], [docsEmplyeePicture3].[dateInsert], [docsEmplyeePicture3].[dateUpdate], [docsEmplyeePicture3].[EmployeeFacePrintID], [docsEmplyeePicture3].[EmployeeID], [docsEmplyeePicture3].[EmployeePicture], [docsEmplyeePicture3].[IsUniqueDoc], [docsEmplyeePicture3].[state], [docsEmplyeePicture3].[userInsert], [docsEmplyeePicture3].[UserUpdate], [t18].[DeclarationID], [t18].[Date], [t18].[dateInsert], [t18].[dateUpdate], [t18].[EntityID], [t18].[EntityTypeID], [t18].[FullName], [t18].[IdentityNumber], [t18].[SiteID], [t18].[state], [t18].[userInsert], [t18].[UserUpdate]
FROM [BB_HR_Employee] AS [b3]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry3] ON [b3].[PassportCountryID] = [b.PassportCountry3].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization3] ON [b3].[OrganizationID] = [b.Organization3].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType3] ON [b3].[IdentificationTypeID] = [b.IdentificationType3].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a7].[DocumentID], [a7].[dateInsert], [a7].[dateUpdate], [a7].[DocumentDate], [a7].[DocumentPath], [a7].[DocumentTypeID], [a7].[EntityID], [a7].[EntityTypeID], [a7].[IsDocumentSigned], [a7].[LanguageID], [a7].[state], [a7].[userInsert], [a7].[UserUpdate], [a7].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a7]
    WHERE ([a7].[EntityTypeID] = (
        SELECT TOP(1) [item15].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item15]
        WHERE [item15].[EntityTypeName] = @__tableName_0
    )) AND ([a7].[DocumentTypeID] = 7)
) AS [t15] ON [b3].[EmployeeID] = [t15].[EntityID]
LEFT JOIN (
    SELECT [item16].*
    FROM [BB_EC_EmployeeEntry] AS [item16]
    WHERE CONVERT(date, [item16].[Date]) = CONVERT(date, GETDATE())
) AS [t16] ON [b3].[EmployeeID] = [t16].[EmployeeID]
LEFT JOIN (
    SELECT [a8].[EquipmentAtSiteID], [a8].[Comment], [a8].[DateFrom], [a8].[dateInsert], [a8].[DateTo], [a8].[dateUpdate], [a8].[EquipmentID], [a8].[SiteID], [a8].[state], [a8].[userInsert], [a8].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a8]
    WHERE [a8].[SiteID] IS NULL
) AS [t17] ON [t16].[EquipmentID] = [t17].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee3] ON [b3].[EmployeeID] = [siteEmployee3].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture3] ON [b3].[EmployeeID] = [docsEmplyeePicture3].[EmployeeID]
LEFT JOIN (
    SELECT [item17].[DeclarationID], [item17].[Date], [item17].[dateInsert], [item17].[dateUpdate], [item17].[EntityID], [item17].[EntityTypeID], [item17].[FullName], [item17].[IdentityNumber], [item17].[SiteID], [item17].[state], [item17].[userInsert], [item17].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item17]
    WHERE (CONVERT(date, [item17].[Date]) = CONVERT(date, GETDATE())) AND ([item17].[EntityTypeID] = (
        SELECT TOP(1) [item18].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item18]
        WHERE [item18].[EntityTypeName] = @__tableName_2
    ))
) AS [t18] ON [b3].[EmployeeID] = [t18].[EntityID]
ORDER BY [b3].[EmployeeID]
2020-06-10 13:12:39,607 INFO - Executed DbCommand (95ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeTraining].[EmployeeTrainingID], [b.EmployeeTraining].[Comment], [b.EmployeeTraining].[DateFrom], [b.EmployeeTraining].[dateInsert], [b.EmployeeTraining].[DateTo], [b.EmployeeTraining].[dateUpdate], [b.EmployeeTraining].[EmployeeID], [b.EmployeeTraining].[EmployeeTrainingName], [b.EmployeeTraining].[SiteID], [b.EmployeeTraining].[state], [b.EmployeeTraining].[TrainingTypeID], [b.EmployeeTraining].[userInsert], [b.EmployeeTraining].[UserUpdate]
FROM [BB_HR_EmployeeTraining] AS [b.EmployeeTraining]
2020-06-10 13:12:39,725 INFO - Executed DbCommand (106ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b5].[EmployeeID], [b5].[Address], [b5].[BirthDate], [b5].[Citizenship], [b5].[dateInsert], [b5].[dateUpdate], [b5].[FirstName], [b5].[FirstNameEN], [b5].[GenderID], [b5].[Guid], [b5].[IdentificationTypeID], [b5].[IdentityNumber], [b5].[LastName], [b5].[LastNameEN], [b5].[OrganizationID], [b5].[PassportCountryID], [b5].[state], [b5].[userInsert], [b5].[UserUpdate], [t23].[DocumentID], [t23].[dateInsert], [t23].[dateUpdate], [t23].[DocumentDate], [t23].[DocumentPath], [t23].[DocumentTypeID], [t23].[EntityID], [t23].[EntityTypeID], [t23].[IsDocumentSigned], [t23].[LanguageID], [t23].[state], [t23].[userInsert], [t23].[UserUpdate], [t23].[ValIdDate], [t25].[EquipmentAtSiteID], [t25].[Comment], [t25].[DateFrom], [t25].[dateInsert], [t25].[DateTo], [t25].[dateUpdate], [t25].[EquipmentID], [t25].[SiteID], [t25].[state], [t25].[userInsert], [t25].[UserUpdate], [siteEmployee5].[SiteEmployeeID], [siteEmployee5].[Comment], [siteEmployee5].[DateFrom], [siteEmployee5].[dateInsert], [siteEmployee5].[DateTo], [siteEmployee5].[dateUpdate], [siteEmployee5].[EmployeeID], [siteEmployee5].[SiteID], [siteEmployee5].[state], [siteEmployee5].[userInsert], [siteEmployee5].[UserUpdate], [docsEmplyeePicture5].[EmployeePictureID], [docsEmplyeePicture5].[dateInsert], [docsEmplyeePicture5].[dateUpdate], [docsEmplyeePicture5].[EmployeeFacePrintID], [docsEmplyeePicture5].[EmployeeID], [docsEmplyeePicture5].[EmployeePicture], [docsEmplyeePicture5].[IsUniqueDoc], [docsEmplyeePicture5].[state], [docsEmplyeePicture5].[userInsert], [docsEmplyeePicture5].[UserUpdate], [t26].[DeclarationID], [t26].[Date], [t26].[dateInsert], [t26].[dateUpdate], [t26].[EntityID], [t26].[EntityTypeID], [t26].[FullName], [t26].[IdentityNumber], [t26].[SiteID], [t26].[state], [t26].[userInsert], [t26].[UserUpdate]
FROM [BB_HR_Employee] AS [b5]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry5] ON [b5].[PassportCountryID] = [b.PassportCountry5].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization5] ON [b5].[OrganizationID] = [b.Organization5].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType5] ON [b5].[IdentificationTypeID] = [b.IdentificationType5].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a11].[DocumentID], [a11].[dateInsert], [a11].[dateUpdate], [a11].[DocumentDate], [a11].[DocumentPath], [a11].[DocumentTypeID], [a11].[EntityID], [a11].[EntityTypeID], [a11].[IsDocumentSigned], [a11].[LanguageID], [a11].[state], [a11].[userInsert], [a11].[UserUpdate], [a11].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a11]
    WHERE ([a11].[EntityTypeID] = (
        SELECT TOP(1) [item23].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item23]
        WHERE [item23].[EntityTypeName] = @__tableName_0
    )) AND ([a11].[DocumentTypeID] = 7)
) AS [t23] ON [b5].[EmployeeID] = [t23].[EntityID]
LEFT JOIN (
    SELECT [item24].*
    FROM [BB_EC_EmployeeEntry] AS [item24]
    WHERE CONVERT(date, [item24].[Date]) = CONVERT(date, GETDATE())
) AS [t24] ON [b5].[EmployeeID] = [t24].[EmployeeID]
LEFT JOIN (
    SELECT [a12].[EquipmentAtSiteID], [a12].[Comment], [a12].[DateFrom], [a12].[dateInsert], [a12].[DateTo], [a12].[dateUpdate], [a12].[EquipmentID], [a12].[SiteID], [a12].[state], [a12].[userInsert], [a12].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a12]
    WHERE [a12].[SiteID] IS NULL
) AS [t25] ON [t24].[EquipmentID] = [t25].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee5] ON [b5].[EmployeeID] = [siteEmployee5].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture5] ON [b5].[EmployeeID] = [docsEmplyeePicture5].[EmployeeID]
LEFT JOIN (
    SELECT [item25].[DeclarationID], [item25].[Date], [item25].[dateInsert], [item25].[dateUpdate], [item25].[EntityID], [item25].[EntityTypeID], [item25].[FullName], [item25].[IdentityNumber], [item25].[SiteID], [item25].[state], [item25].[userInsert], [item25].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item25]
    WHERE (CONVERT(date, [item25].[Date]) = CONVERT(date, GETDATE())) AND ([item25].[EntityTypeID] = (
        SELECT TOP(1) [item26].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item26]
        WHERE [item26].[EntityTypeName] = @__tableName_2
    ))
) AS [t26] ON [b5].[EmployeeID] = [t26].[EntityID]
ORDER BY [b5].[EmployeeID]
2020-06-10 13:12:39,872 INFO - Executed DbCommand (95ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [b.EmployeeWorkPermit].[EmployeeWorkPermitID], [b.EmployeeWorkPermit].[Comment], [b.EmployeeWorkPermit].[DateFrom], [b.EmployeeWorkPermit].[dateInsert], [b.EmployeeWorkPermit].[DateTo], [b.EmployeeWorkPermit].[dateUpdate], [b.EmployeeWorkPermit].[EmployeeID], [b.EmployeeWorkPermit].[EmployeeWorkPermitName], [b.EmployeeWorkPermit].[IsRequired], [b.EmployeeWorkPermit].[SiteID], [b.EmployeeWorkPermit].[state], [b.EmployeeWorkPermit].[userInsert], [b.EmployeeWorkPermit].[UserUpdate]
FROM [BB_HR_EmployeeWorkPermit] AS [b.EmployeeWorkPermit]
2020-06-10 13:12:39,986 INFO - Executed DbCommand (103ms) [Parameters=[@__tableName_0='?' (Size = 50), @__tableName_2='?' (Size = 50)], CommandType='Text', CommandTimeout='30']
SELECT [b7].[EmployeeID], [b7].[Address], [b7].[BirthDate], [b7].[Citizenship], [b7].[dateInsert], [b7].[dateUpdate], [b7].[FirstName], [b7].[FirstNameEN], [b7].[GenderID], [b7].[Guid], [b7].[IdentificationTypeID], [b7].[IdentityNumber], [b7].[LastName], [b7].[LastNameEN], [b7].[OrganizationID], [b7].[PassportCountryID], [b7].[state], [b7].[userInsert], [b7].[UserUpdate], [t31].[DocumentID], [t31].[dateInsert], [t31].[dateUpdate], [t31].[DocumentDate], [t31].[DocumentPath], [t31].[DocumentTypeID], [t31].[EntityID], [t31].[EntityTypeID], [t31].[IsDocumentSigned], [t31].[LanguageID], [t31].[state], [t31].[userInsert], [t31].[UserUpdate], [t31].[ValIdDate], [t33].[EquipmentAtSiteID], [t33].[Comment], [t33].[DateFrom], [t33].[dateInsert], [t33].[DateTo], [t33].[dateUpdate], [t33].[EquipmentID], [t33].[SiteID], [t33].[state], [t33].[userInsert], [t33].[UserUpdate], [siteEmployee7].[SiteEmployeeID], [siteEmployee7].[Comment], [siteEmployee7].[DateFrom], [siteEmployee7].[dateInsert], [siteEmployee7].[DateTo], [siteEmployee7].[dateUpdate], [siteEmployee7].[EmployeeID], [siteEmployee7].[SiteID], [siteEmployee7].[state], [siteEmployee7].[userInsert], [siteEmployee7].[UserUpdate], [docsEmplyeePicture7].[EmployeePictureID], [docsEmplyeePicture7].[dateInsert], [docsEmplyeePicture7].[dateUpdate], [docsEmplyeePicture7].[EmployeeFacePrintID], [docsEmplyeePicture7].[EmployeeID], [docsEmplyeePicture7].[EmployeePicture], [docsEmplyeePicture7].[IsUniqueDoc], [docsEmplyeePicture7].[state], [docsEmplyeePicture7].[userInsert], [docsEmplyeePicture7].[UserUpdate], [t34].[DeclarationID], [t34].[Date], [t34].[dateInsert], [t34].[dateUpdate], [t34].[EntityID], [t34].[EntityTypeID], [t34].[FullName], [t34].[IdentityNumber], [t34].[SiteID], [t34].[state], [t34].[userInsert], [t34].[UserUpdate]
FROM [BB_HR_Employee] AS [b7]
LEFT JOIN [BB_GEN_Country] AS [b.PassportCountry7] ON [b7].[PassportCountryID] = [b.PassportCountry7].[CountryID]
LEFT JOIN [BB_GEN_Organization] AS [b.Organization7] ON [b7].[OrganizationID] = [b.Organization7].[OrganizationID]
LEFT JOIN [BB_HR_IdentificationType] AS [b.IdentificationType7] ON [b7].[IdentificationTypeID] = [b.IdentificationType7].[IdentificationTypeID]
LEFT JOIN (
    SELECT [a15].[DocumentID], [a15].[dateInsert], [a15].[dateUpdate], [a15].[DocumentDate], [a15].[DocumentPath], [a15].[DocumentTypeID], [a15].[EntityID], [a15].[EntityTypeID], [a15].[IsDocumentSigned], [a15].[LanguageID], [a15].[state], [a15].[userInsert], [a15].[UserUpdate], [a15].[ValIdDate]
    FROM [BB_GEN_Docs] AS [a15]
    WHERE ([a15].[EntityTypeID] = (
        SELECT TOP(1) [item31].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item31]
        WHERE [item31].[EntityTypeName] = @__tableName_0
    )) AND ([a15].[DocumentTypeID] = 7)
) AS [t31] ON [b7].[EmployeeID] = [t31].[EntityID]
LEFT JOIN (
    SELECT [item32].*
    FROM [BB_EC_EmployeeEntry] AS [item32]
    WHERE CONVERT(date, [item32].[Date]) = CONVERT(date, GETDATE())
) AS [t32] ON [b7].[EmployeeID] = [t32].[EmployeeID]
LEFT JOIN (
    SELECT [a16].[EquipmentAtSiteID], [a16].[Comment], [a16].[DateFrom], [a16].[dateInsert], [a16].[DateTo], [a16].[dateUpdate], [a16].[EquipmentID], [a16].[SiteID], [a16].[state], [a16].[userInsert], [a16].[UserUpdate]
    FROM [BB_EC_EquipmenAtSite] AS [a16]
    WHERE [a16].[SiteID] IS NULL
) AS [t33] ON [t32].[EquipmentID] = [t33].[EquipmentID]
LEFT JOIN [BB_EC_SiteEmployee] AS [siteEmployee7] ON [b7].[EmployeeID] = [siteEmployee7].[EmployeeID]
LEFT JOIN [BB_EmplyeePicture] AS [docsEmplyeePicture7] ON [b7].[EmployeeID] = [docsEmplyeePicture7].[EmployeeID]
LEFT JOIN (
    SELECT [item33].[DeclarationID], [item33].[Date], [item33].[dateInsert], [item33].[dateUpdate], [item33].[EntityID], [item33].[EntityTypeID], [item33].[FullName], [item33].[IdentityNumber], [item33].[SiteID], [item33].[state], [item33].[userInsert], [item33].[UserUpdate]
    FROM [BB_VR_HealthDeclaration] AS [item33]
    WHERE (CONVERT(date, [item33].[Date]) = CONVERT(date, GETDATE())) AND ([item33].[EntityTypeID] = (
        SELECT TOP(1) [item34].[EntityTypeID]
        FROM [BB_GEN_EntityType] AS [item34]
        WHERE [item34].[EntityTypeName] = @__tableName_2
    ))
) AS [t34] ON [b7].[EmployeeID] = [t34].[EntityID]
ORDER BY [b7].[EmployeeID]
